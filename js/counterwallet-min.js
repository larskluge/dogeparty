
/*----------------js/config.js---------------*/
var BTC_NAME="Dogecoin",BTC="DOGE",XCP_NAME="Dogeparty",XCP="XDP",MAX_BURN_PER_ADDRESS=5e6,TESTNET_BURN_START=124678,TESTNET_BURN_END=2628e4;
/*----------------js/consts.js---------------*/
var VERSION="1.5.0PRE BETA",IS_MOBILE_OR_TABLET=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),PREFERENCES={},MAX_INT=Math.pow(2,63)-1,UNIT=1e8,MIN_FEE=2*UNIT,REGULAR_DUST_SIZE=UNIT,MULTISIG_DUST_SIZE=UNIT*2,MIN_PRIME_BALANCE=5e4,ASSET_CREATION_FEE_XCP=.5,MAX_ASSET_DESC_LENGTH=41,FEE_FRACTION_REQUIRED_DEFAULT_PCT=.9,FEE_FRACTION_PROVIDED_DEFAULT_PCT=1,FEE_FRACTION_DEFAULT_FILTER=.95,BTC_ORDER_MIN_AMOUNT=.01,DEFAULT_NUM_ADDRESSES=1,MAX_ADDRESSES=20,ORDER_DEFAULT_EXPIRATION=1e3,ORDER_BTCSELL_DEFAULT_EXPIRATION=2e3,ORDER_MAX_EXPIRATION=3e3,STATS_MAX_NUM_TRANSACTIONS=100,VIEW_PRICES_NUM_ASSET_PAIRS=50,VIEW_PRICES_ASSET_PAIRS_REFRESH_EVERY=3e5,VIEW_PRICES_NUM_LATEST_TRADES=50,VIEW_PRICES_LATEST_TRADES_REFRESH_EVERY=3e5,MARKET_INFO_REFRESH_EVERY=3e5,CHAT_NUM_USERS_ONLINE_REFRESH_EVERY=3e5,NUM_BLOCKS_TO_WAIT_FOR_BTCPAY=6,ALLOW_UNCONFIRMED_INPUTS=!0,B26_DIGITS="ABCDEFGHIJKLMNOPQRSTUVWXYZ",ACTION_PENDING_NOTICE="<b><u>This action will take some time to complete</u></b>, and will appear as a Pending Action until confirmed on the network. <b class='errorColor'>Until that time, the wallet will not reflect the change. Please be patient.</b>",DEFAULT_PREFERENCES={num_addresses_used:DEFAULT_NUM_ADDRESSES,address_aliases:{},selected_theme:"ultraLight",selected_lang:"en-us",watch_only_addresses:[],armory_offline_addresses:[],auto_btcpay:!0,has_accepted_license:!0},ENTITY_NAMES={burns:"Burn",debits:"Debit",credits:"Credit",sends:"Send",orders:"Order",order_matches:"Order Match",btcpays:"BTCPay",issuances:"Issuance",broadcasts:"Broadcast",bets:"Bet",bet_matches:"Bet Match",dividends:"Distribution",cancels:"Cancel",callbacks:"Callback",bet_expirations:"Bet Expired",order_expirations:"Order Expired",bet_match_expirations:"Bet Match Exp",order_match_expirations:"Order Match Exp",rps:"Rock-Paper-Scissors",rps_matches:"RPS Match",rpsresolves:"RPS Confirmed",rps_expirations:"RPS Expired",rps_match_expirations:"RPS Match Expired"},ENTITY_ICONS={burns:"fa-fire",debits:"fa-minus",credits:"fa-plus",sends:"fa-share",orders:"fa-bar-chart-o",order_matches:"fa-exchange",btcpays:"fa-btc",issuances:"fa-magic",broadcasts:"fa-rss",bets:"fa-bullseye",bet_matches:"fa-exchange",dividends:"fa-ticket",cancels:"fa-times",callbacks:"fa-retweet",bet_expirations:"fa-clock-o",order_expirations:"fa-clock-o",bet_match_expirations:"fa-clock-o",order_match_expirations:"fa-clock-o",rps:"fa-trophy",rps_matches:"fa-trophy",rpsresolves:"fa-trophy",rps_expirations:"fa-trophy",rps_match_expirations:"fa-trophy"},ENTITY_NOTO_COLORS={burns:"bg-color-yellow",debits:"bg-color-red",credits:"bg-color-green",sends:"bg-color-orangeDark",orders:"bg-color-blue",order_matches:"bg-color-blueLight",btcpays:"bg-color-orange",issuances:"bg-color-pinkDark",broadcasts:"bg-color-magenta",bets:"bg-color-teal",bet_matches:"bg-color-teal",dividends:"bg-color-pink",cancels:"bg-color-red",callbacks:"bg-color-pink",bet_expirations:"bg-color-grayDark",order_expirations:"bg-color-grayDark",bet_match_expirations:"bg-color-grayDark",order_match_expirations:"bg-color-grayDark",rps:"bg-color-blue",rps_matches:"bg-color-blueLight",rpsresolves:"bg-color-blue",rps_expirations:"bg-color-blueLight",rps_match_expirations:"bg-color-blueLight"},BET_TYPES={0:"Bullish CFD",1:"Bearish CFD",2:"Equal",3:"Not Equal"},BET_TYPES_SHORT={0:"BullCFD",1:"BearCFD",2:"Equal",3:"NotEqual"},BET_TYPES_ID={BullCFD:0,BearCFD:1,Equal:2,NotEqual:3},COUNTER_BET={Equal:3,NotEqual:2,BullCFD:1,BearCFD:0},BET_MATCHES_STATUS={"settled: liquidated for bear":0,"settled: liquidated for bull":1,"settled: for equal":2,"settled: for notequal":3},LEVERAGE_UNIT=5040,MAINNET_UNSPENDABLE="DDogepartyxxxxxxxxxxxxxxxxxxw1dfzr",TESTNET_UNSPENDABLE="ndogepartyxxxxxxxxxxxxxxxxxxwpsZCH",MAINNET_DONATION="DLtFm7fnuVFHRWcUTsikccLnTyduWntHdF",TESTNET_DONATION="xnV9kfQFxzPvSYoSuZVqRJduLxdhyziFKiZ";function qs(key){key=key.replace(/[*+?^$.\[\]{}()|\\\/]/g,"\\$&");var match=location.search.match(new RegExp("[?&]"+key+"=([^&]+)(&|$)"));return match&&decodeURIComponent(match[1].replace(/\+/g," "))}var IS_DEV=location.pathname=="/"&&qs("dev")&&qs("dev")!="0"?!0:!1,USE_TESTNET=(location.pathname=="/"||location.pathname=="/src/"||location.pathname=="/build/")&&qs("testnet")&&qs("testnet")!="0"||location.hostname.indexOf("testnet")!=-1?!0:!1,BURN_START,BURN_END,BURN_MULTIPLIER=.001;USE_TESTNET?typeof TESTNET_BURN_START!="undefined"&&(BURN_START=TESTNET_BURN_START,BURN_END=TESTNET_BURN_END):typeof LIVENET_BURN_START!="undefined"&&(BURN_START=LIVENET_BURN_START,BURN_END=LIVENET_BURN_END);var BURNABLE=!!BURN_START,UNSPENDABLE=USE_TESTNET?TESTNET_UNSPENDABLE:MAINNET_UNSPENDABLE,TESTNET_PASSPHRASE=qs("passphrase"),CRYPTED_PASSPHRASE;location.hash.indexOf("cp=")==1&&(CRYPTED_PASSPHRASE=location.hash.substr(4),location.hash=""),location.hash="";var ORIG_REFERER=document.referrer,BLOCKEXPLORER_URL=USE_TESTNET?"http://test.dogepartychain.info":"http://dogepartychain.info",GOOGLE_ANALYTICS_UAID=null,ROLLBAR_ACCESS_TOKEN=null,TRANSACTION_DELAY=5e3,TRANSACTION_MAX_RETRY=5,DONATION_ADDRESS=USE_TESTNET?TESTNET_DONATION:MAINNET_DONATION,APPROX_SECONDS_PER_BLOCK=USE_TESTNET?1200:480,USER_COUNTRY="",CURRENT_PAGE_URL="",DISABLED_FEATURES_SUPPORTED=["betting","rps","dividend","exchange","leaderboard","portfolio","stats","history"],DISABLED_FEATURES=[],RESTRICTED_AREA={"pages/betting.html":["US"],"pages/openbets.html":["US"],"pages/matchedbets.html":["US"],"pages/rps.html":["US"],dividend:["US"]},MAX_SUPPORT_CASE_PROBLEM_LEN=4096;
/*----------------js/mnemonic.js---------------*/
(function(root,factory){typeof define=="function"&&define.amd?define([],function(){return factory()}):root.Mnemonic=factory()})(this,function(){var Mnemonic=function(args){var bits,i,l,w1,w2,w3,n;if(typeof args=="undefined"||typeof args=="number"){bits=args||96;if(bits%32!==0)throw"Can only generate 32/64/96/128 bit passwords";this.random=new Uint32Array(bits/32);if(window.crypto&&window.crypto.getRandomValues)window.crypto.getRandomValues(this.random);else if(window.msCrypto&&window.msCrypto.getRandomValues)window.msCrypto.getRandomValues(this.random);else{var errText="Your browser lacks a way to securely generate random values. Please use a different, newer browser.";bootbox.alert(errText),assert(!1,errText)}}else{i=0,n=Mnemonic.wc,l=args.length/3,this.random=new Uint32Array(l);for(;i<l;i++)w1=Mnemonic.words.indexOf(args[3*i]),w2=Mnemonic.words.indexOf(args[3*i+1]),w3=Mnemonic.words.indexOf(args[3*i+2]),this.random[i]=w1+n*Mnemonic._mod(w2-w1,n)+n*n*Mnemonic._mod(w3-w2,n)}return this};return Mnemonic.prototype.toHex=function(){var l=this.random.length,res="",i=0;for(;i<l;i++)res+=("00000000"+this.random[i].toString(16)).substr(-8);return res},Mnemonic.prototype.toWords=function(){var i=0,l=this.random.length,n=Mnemonic.wc,words=[],x,w1,w2,w3;for(;i<l;i++)x=this.random[i],w1=x%n,w2=((x/n>>0)+w1)%n,w3=(((x/n>>0)/n>>0)+w2)%n,words.push(Mnemonic.words[w1]),words.push(Mnemonic.words[w2]),words.push(Mnemonic.words[w3]);return words},Mnemonic.wc=1626,Mnemonic.words=JSON.parse('["like","just","love","know","never","want","time","out","there","make","look","eye","down","only","think","heart","back","then","into","about","more","away","still","them","take","thing","even","through","long","always","world","too","friend","tell","try","hand","thought","over","here","other","need","smile","again","much","cry","been","night","ever","little","said","end","some","those","around","mind","people","girl","leave","dream","left","turn","myself","give","nothing","really","off","before","something","find","walk","wish","good","once","place","ask","stop","keep","watch","seem","everything","wait","got","yet","made","remember","start","alone","run","hope","maybe","believe","body","hate","after","close","talk","stand","own","each","hurt","help","home","god","soul","new","many","two","inside","should","true","first","fear","mean","better","play","another","gone","change","use","wonder","someone","hair","cold","open","best","any","behind","happen","water","dark","laugh","stay","forever","name","work","show","sky","break","came","deep","door","put","black","together","upon","happy","such","great","white","matter","fill","past","please","burn","cause","enough","touch","moment","soon","voice","scream","anything","stare","sound","red","everyone","hide","kiss","truth","death","beautiful","mine","blood","broken","very","pass","next","forget","tree","wrong","air","mother","understand","lip","hit","wall","memory","sleep","free","high","realize","school","might","skin","sweet","perfect","blue","kill","breath","dance","against","fly","between","grow","strong","under","listen","bring","sometimes","speak","pull","person","become","family","begin","ground","real","small","father","sure","feet","rest","young","finally","land","across","today","different","guy","line","fire","reason","reach","second","slowly","write","eat","smell","mouth","step","learn","three","floor","promise","breathe","darkness","push","earth","guess","save","song","above","along","both","color","house","almost","sorry","anymore","brother","okay","dear","game","fade","already","apart","warm","beauty","heard","notice","question","shine","began","piece","whole","shadow","secret","street","within","finger","point","morning","whisper","child","moon","green","story","glass","kid","silence","since","soft","yourself","empty","shall","angel","answer","baby","bright","dad","path","worry","hour","drop","follow","power","war","half","flow","heaven","act","chance","fact","least","tired","children","near","quite","afraid","rise","sea","taste","window","cover","nice","trust","lot","sad","cool","force","peace","return","blind","easy","ready","roll","rose","drive","held","music","beneath","hang","mom","paint","emotion","quiet","clear","cloud","few","pretty","bird","outside","paper","picture","front","rock","simple","anyone","meant","reality","road","sense","waste","bit","leaf","thank","happiness","meet","men","smoke","truly","decide","self","age","book","form","alive","carry","escape","damn","instead","able","ice","minute","throw","catch","leg","ring","course","goodbye","lead","poem","sick","corner","desire","known","problem","remind","shoulder","suppose","toward","wave","drink","jump","woman","pretend","sister","week","human","joy","crack","grey","pray","surprise","dry","knee","less","search","bleed","caught","clean","embrace","future","king","son","sorrow","chest","hug","remain","sat","worth","blow","daddy","final","parent","tight","also","create","lonely","safe","cross","dress","evil","silent","bone","fate","perhaps","anger","class","scar","snow","tiny","tonight","continue","control","dog","edge","mirror","month","suddenly","comfort","given","loud","quickly","gaze","plan","rush","stone","town","battle","ignore","spirit","stood","stupid","yours","brown","build","dust","hey","kept","pay","phone","twist","although","ball","beyond","hidden","nose","taken","fail","float","pure","somehow","wash","wrap","angry","cheek","creature","forgotten","heat","rip","single","space","special","weak","whatever","yell","anyway","blame","job","choose","country","curse","drift","echo","figure","grew","laughter","neck","suffer","worse","yeah","disappear","foot","forward","knife","mess","somewhere","stomach","storm","beg","idea","lift","offer","breeze","field","five","often","simply","stuck","win","allow","confuse","enjoy","except","flower","seek","strength","calm","grin","gun","heavy","hill","large","ocean","shoe","sigh","straight","summer","tongue","accept","crazy","everyday","exist","grass","mistake","sent","shut","surround","table","ache","brain","destroy","heal","nature","shout","sign","stain","choice","doubt","glance","glow","mountain","queen","stranger","throat","tomorrow","city","either","fish","flame","rather","shape","spin","spread","ash","distance","finish","image","imagine","important","nobody","shatter","warmth","became","feed","flesh","funny","lust","shirt","trouble","yellow","attention","bare","bite","money","protect","amaze","appear","born","choke","completely","daughter","fresh","friendship","gentle","probably","six","deserve","expect","grab","middle","nightmare","river","thousand","weight","worst","wound","barely","bottle","cream","regret","relationship","stick","test","crush","endless","fault","itself","rule","spill","art","circle","join","kick","mask","master","passion","quick","raise","smooth","unless","wander","actually","broke","chair","deal","favorite","gift","note","number","sweat","box","chill","clothes","lady","mark","park","poor","sadness","tie","animal","belong","brush","consume","dawn","forest","innocent","pen","pride","stream","thick","clay","complete","count","draw","faith","press","silver","struggle","surface","taught","teach","wet","bless","chase","climb","enter","letter","melt","metal","movie","stretch","swing","vision","wife","beside","crash","forgot","guide","haunt","joke","knock","plant","pour","prove","reveal","steal","stuff","trip","wood","wrist","bother","bottom","crawl","crowd","fix","forgive","frown","grace","loose","lucky","party","release","surely","survive","teacher","gently","grip","speed","suicide","travel","treat","vein","written","cage","chain","conversation","date","enemy","however","interest","million","page","pink","proud","sway","themselves","winter","church","cruel","cup","demon","experience","freedom","pair","pop","purpose","respect","shoot","softly","state","strange","bar","birth","curl","dirt","excuse","lord","lovely","monster","order","pack","pants","pool","scene","seven","shame","slide","ugly","among","blade","blonde","closet","creek","deny","drug","eternity","gain","grade","handle","key","linger","pale","prepare","swallow","swim","tremble","wheel","won","cast","cigarette","claim","college","direction","dirty","gather","ghost","hundred","loss","lung","orange","present","swear","swirl","twice","wild","bitter","blanket","doctor","everywhere","flash","grown","knowledge","numb","pressure","radio","repeat","ruin","spend","unknown","buy","clock","devil","early","false","fantasy","pound","precious","refuse","sheet","teeth","welcome","add","ahead","block","bury","caress","content","depth","despite","distant","marry","purple","threw","whenever","bomb","dull","easily","grasp","hospital","innocence","normal","receive","reply","rhyme","shade","someday","sword","toe","visit","asleep","bought","center","consider","flat","hero","history","ink","insane","muscle","mystery","pocket","reflection","shove","silently","smart","soldier","spot","stress","train","type","view","whether","bus","energy","explain","holy","hunger","inch","magic","mix","noise","nowhere","prayer","presence","shock","snap","spider","study","thunder","trail","admit","agree","bag","bang","bound","butterfly","cute","exactly","explode","familiar","fold","further","pierce","reflect","scent","selfish","sharp","sink","spring","stumble","universe","weep","women","wonderful","action","ancient","attempt","avoid","birthday","branch","chocolate","core","depress","drunk","especially","focus","fruit","honest","match","palm","perfectly","pillow","pity","poison","roar","shift","slightly","thump","truck","tune","twenty","unable","wipe","wrote","coat","constant","dinner","drove","egg","eternal","flight","flood","frame","freak","gasp","glad","hollow","motion","peer","plastic","root","screen","season","sting","strike","team","unlike","victim","volume","warn","weird","attack","await","awake","built","charm","crave","despair","fought","grant","grief","horse","limit","message","ripple","sanity","scatter","serve","split","string","trick","annoy","blur","boat","brave","clearly","cling","connect","fist","forth","imagination","iron","jock","judge","lesson","milk","misery","nail","naked","ourselves","poet","possible","princess","sail","size","snake","society","stroke","torture","toss","trace","wise","bloom","bullet","cell","check","cost","darling","during","footstep","fragile","hallway","hardly","horizon","invisible","journey","midnight","mud","nod","pause","relax","shiver","sudden","value","youth","abuse","admire","blink","breast","bruise","constantly","couple","creep","curve","difference","dumb","emptiness","gotta","honor","plain","planet","recall","rub","ship","slam","soar","somebody","tightly","weather","adore","approach","bond","bread","burst","candle","coffee","cousin","crime","desert","flutter","frozen","grand","heel","hello","language","level","movement","pleasure","powerful","random","rhythm","settle","silly","slap","sort","spoken","steel","threaten","tumble","upset","aside","awkward","bee","blank","board","button","card","carefully","complain","crap","deeply","discover","drag","dread","effort","entire","fairy","giant","gotten","greet","illusion","jeans","leap","liquid","march","mend","nervous","nine","replace","rope","spine","stole","terror","accident","apple","balance","boom","childhood","collect","demand","depression","eventually","faint","glare","goal","group","honey","kitchen","laid","limb","machine","mere","mold","murder","nerve","painful","poetry","prince","rabbit","shelter","shore","shower","soothe","stair","steady","sunlight","tangle","tease","treasure","uncle","begun","bliss","canvas","cheer","claw","clutch","commit","crimson","crystal","delight","doll","existence","express","fog","football","gay","goose","guard","hatred","illuminate","mass","math","mourn","rich","rough","skip","stir","student","style","support","thorn","tough","yard","yearn","yesterday","advice","appreciate","autumn","bank","beam","bowl","capture","carve","collapse","confusion","creation","dove","feather","girlfriend","glory","government","harsh","hop","inner","loser","moonlight","neighbor","neither","peach","pig","praise","screw","shield","shimmer","sneak","stab","subject","throughout","thrown","tower","twirl","wow","army","arrive","bathroom","bump","cease","cookie","couch","courage","dim","guilt","howl","hum","husband","insult","led","lunch","mock","mostly","natural","nearly","needle","nerd","peaceful","perfection","pile","price","remove","roam","sanctuary","serious","shiny","shook","sob","stolen","tap","vain","void","warrior","wrinkle","affection","apologize","blossom","bounce","bridge","cheap","crumble","decision","descend","desperately","dig","dot","flip","frighten","heartbeat","huge","lazy","lick","odd","opinion","process","puzzle","quietly","retreat","score","sentence","separate","situation","skill","soak","square","stray","taint","task","tide","underneath","veil","whistle","anywhere","bedroom","bid","bloody","burden","careful","compare","concern","curtain","decay","defeat","describe","double","dreamer","driver","dwell","evening","flare","flicker","grandma","guitar","harm","horrible","hungry","indeed","lace","melody","monkey","nation","object","obviously","rainbow","salt","scratch","shown","shy","stage","stun","third","tickle","useless","weakness","worship","worthless","afternoon","beard","boyfriend","bubble","busy","certain","chin","concrete","desk","diamond","doom","drawn","due","felicity","freeze","frost","garden","glide","harmony","hopefully","hunt","jealous","lightning","mama","mercy","peel","physical","position","pulse","punch","quit","rant","respond","salty","sane","satisfy","savior","sheep","slept","social","sport","tuck","utter","valley","wolf","aim","alas","alter","arrow","awaken","beaten","belief","brand","ceiling","cheese","clue","confidence","connection","daily","disguise","eager","erase","essence","everytime","expression","fan","flag","flirt","foul","fur","giggle","glorious","ignorance","law","lifeless","measure","mighty","muse","north","opposite","paradise","patience","patient","pencil","petal","plate","ponder","possibly","practice","slice","spell","stock","strife","strip","suffocate","suit","tender","tool","trade","velvet","verse","waist","witch","aunt","bench","bold","cap","certainly","click","companion","creator","dart","delicate","determine","dish","dragon","drama","drum","dude","everybody","feast","forehead","former","fright","fully","gas","hook","hurl","invite","juice","manage","moral","possess","raw","rebel","royal","scale","scary","several","slight","stubborn","swell","talent","tea","terrible","thread","torment","trickle","usually","vast","violence","weave","acid","agony","ashamed","awe","belly","blend","blush","character","cheat","common","company","coward","creak","danger","deadly","defense","define","depend","desperate","destination","dew","duck","dusty","embarrass","engine","example","explore","foe","freely","frustrate","generation","glove","guilty","health","hurry","idiot","impossible","inhale","jaw","kingdom","mention","mist","moan","mumble","mutter","observe","ode","pathetic","pattern","pie","prefer","puff","rape","rare","revenge","rude","scrape","spiral","squeeze","strain","sunset","suspend","sympathy","thigh","throne","total","unseen","weapon","weary"]'),Mnemonic._mod=function(a,b){return a-Math.floor(a/b)*b},Mnemonic});
/*----------------js/util.bitcore.js---------------*/
var bitcore=require("bitcore"),NETWORK=USE_TESTNET?bitcore.networks.testnet:bitcore.networks.livenet,CWHierarchicalKey=function(passphrase,password){checkArgType(passphrase,"string"),password&&(checkArgType(password,"string"),passphrase=CWBitcore.decrypt(passphrase,password)),this.basePath="m/0'/0/",this.useOldHierarchicalKey=!1,this.init(passphrase)};CWHierarchicalKey.prototype.init=function(passphrase){this.passphrase=passphrase;var words=$.trim(passphrase.toLowerCase()).split(" ");if(words.length==13){var first=words.shift();this.useOldHierarchicalKey=first=="old"}var seed=this.wordsToSeed(words);this.HierarchicalKey=this.useOldHierarchicalKey?this.oldHierarchicalKeyFromSeed(seed):bitcore.HierarchicalKey.seed(seed,NETWORK.name),this.oldHierarchicalKey=this.oldHierarchicalKeyFromSeed(seed)},CWHierarchicalKey.prototype.wordsToSeed=function(words){var m=new Mnemonic(words);return m.toHex()},CWHierarchicalKey.prototype.getOldAddressesInfos=function(callback){var addresses=[],cwkeys={};for(var i=0;i<=9;i++){var derivedKey=this.oldHierarchicalKey.derive(this.basePath+i),key=derivedKey.eckey.private.toString("hex"),cwk=new CWPrivateKey(key),address=cwk.getAddress();addresses.push(address),cwkeys[address]=cwk}Counterblock.getBalances(addresses,cwkeys,callback)},CWHierarchicalKey.prototype.oldHierarchicalKeyFromSeed=function(seed){checkArgType(seed,"string");var words=bytesToWordArray(seed),hash=CryptoJS.HmacSHA512(words,BTC_NAME+" seed");hash=wordArrayToBytes(hash),hash=bitcore.Buffer(hash);var priv=hash.slice(0,32).toString("hex"),eckey=new bitcore.Key;eckey.private=hash.slice(0,32),eckey.regenerateSync();var hkey=new bitcore.HierarchicalKey;return hkey.depth=0,hkey.parentFingerprint=bitcore.Buffer([0,0,0,0]),hkey.childIndex=bitcore.Buffer([0,0,0,0]),hkey.chainCode=hash.slice(32,64),hkey.version=NETWORK.hkeyPrivateVersion,hkey.eckey=eckey,hkey.hasPrivateKey=!0,hkey.pubKeyHash=bitcore.util.sha256ripe160(hkey.eckey.public),hkey.buildExtendedPublicKey(),hkey.buildExtendedPrivateKey(),hkey},CWHierarchicalKey.prototype.getAddressKey=function(index){checkArgType(index,"number");var derivedKey=this.HierarchicalKey.derive(this.basePath+index);return new CWPrivateKey(derivedKey.eckey.private.toString("hex"))},CWHierarchicalKey.prototype.cryptPassphrase=function(password){return CWBitcore.encrypt(this.passphrase,password)},CWHierarchicalKey.prototype.getQuickUrl=function(password){var url=location.protocol+"//"+location.hostname+"/#cp=";return url+=this.cryptPassphrase(password),url};var CWPrivateKey=function(priv){checkArgType(priv,"string"),this.priv=null,this.init(priv)};CWPrivateKey.prototype.init=function(priv){try{this.priv=priv,this.walletKey=new bitcore.WalletKey({network:NETWORK}),this.walletKey.fromObj({priv:this.priv})}catch(err){this.priv=null}},CWPrivateKey.prototype.getAddress=function(){try{var wkObj=this.walletKey.storeObj();return wkObj.addr}catch(err){return!1}},CWPrivateKey.prototype.getAltAddress=function(){var cwk=new CWPrivateKey(this.priv);return cwk.walletKey.privKey._compressed=!cwk.walletKey.privKey._compressed,cwk.walletKey.privKey.regenerateSync(),cwk.walletKey.storeObj().addr},CWPrivateKey.prototype.getAddresses=function(){return addresses=[this.getAddress(),this.getAltAddress()]},CWPrivateKey.prototype.isValid=function(){try{var address=new bitcore.Address(this.getAddress());return address.isValid()&&address.version()==NETWORK.addressVersion}catch(err){return!1}},CWPrivateKey.prototype.getPub=function(){try{return this.walletKey.privKey.public.toString("hex")}catch(err){return!1}},CWPrivateKey.prototype.getBitcoreECKey=function(){try{return this.walletKey.privKey}catch(err){return!1}},CWPrivateKey.prototype.signMessage=function(message,format){return bitcore.Message.sign(message,this.getBitcoreECKey()).toString(format)},CWPrivateKey.prototype.signRawTransaction=function(unsignedHex){return checkArgType(unsignedHex,"string"),CWBitcore.signRawTransaction(unsignedHex,this)},CWPrivateKey.prototype.checkTransactionDest=function(txHex,destAdress){checkArgsType(arguments,["string","string"]);try{return CWBitcore.checkTransactionDest(txHex,this.getAddresses(),destAdress)}catch(err){return!1}},CWPrivateKey.prototype.checkAndSignRawTransaction=function(unsignedHex,destAdress){return checkArgsType(arguments,["string","string"]),this.checkTransactionDest(unsignedHex,destAdress)?this.signRawTransaction(unsignedHex):!1},CWPrivateKey.prototype.getWIF=function(){var buf=new bitcore.Buffer(this.priv,"hex"),privkey=new bitcore.PrivateKey(NETWORK.privKeyVersion,buf,!0);return privkey.as("base58")},CWPrivateKey.prototype.encrypt=function(message){return CWBitcore.encrypt(message,this.priv)},CWPrivateKey.prototype.decrypt=function(cryptedMessage){return CWBitcore.decrypt(cryptedMessage,this.priv)};var CWBitcore={};CWBitcore.isValidAddress=function(val){try{var address=new bitcore.Address(val);return address.isValid()?address.version()==NETWORK.addressVersion:!1}catch(err){return!1}},CWBitcore.parseRawTransaction=function(txHex){checkArgType(txHex,"string");var raw=new bitcore.Buffer(txHex,"hex"),tx=new bitcore.Transaction;return tx.parse(raw),tx},CWBitcore.signRawTransaction=function(unsignedHex,cwPrivateKey){checkArgsType(arguments,["string","object"]);var address=cwPrivateKey.getAddress(),fnToSign={};fnToSign[bitcore.Script.TX_PUBKEYHASH]=bitcore.TransactionBuilder.prototype._signPubKeyHash,fnToSign[bitcore.Script.TX_PUBKEY]=bitcore.TransactionBuilder.prototype._signPubKey,fnToSign[bitcore.Script.TX_MULTISIG]=bitcore.TransactionBuilder.prototype._signMultiSig,fnToSign[bitcore.Script.TX_SCRIPTHASH]=bitcore.TransactionBuilder.prototype._signScriptHash;var wkMap={};wkMap[address]=new bitcore.WalletKey({network:NETWORK,privKey:cwPrivateKey.getBitcoreECKey()});var unsignedTx=CWBitcore.parseRawTransaction(unsignedHex),signedTx=new bitcore.TransactionBuilder;signedTx.tx=unsignedTx;for(var i=0;i<unsignedTx.ins.length;i++){var txin=unsignedTx.ins[i],scriptPubKey=new bitcore.Script(txin.s),input={address:address,scriptPubKey:scriptPubKey,scriptType:scriptPubKey.classify(),i:i},txSigHash=unsignedTx.hashForSignature(scriptPubKey,i,bitcore.Transaction.SIGHASH_ALL);signedTx.tx.ins[i].s=bitcore.util.EMPTY_BUFFER;var ret=fnToSign[input.scriptType].call(signedTx,wkMap,input,txSigHash);ret&&ret.script&&(signedTx.tx.ins[i].s=ret.script,ret.inputFullySigned&&signedTx.inputsSigned++,ret.signaturesAdded&&(signedTx.signaturesAdded+=ret.signaturesAdded))}return signedTx.tx.serialize().toString("hex")},CWBitcore.extractAddressFromTxOut=function(txout){checkArgType(txout,"object");var script=txout.getScript();return bitcore.Address.fromScriptPubKey(script,NETWORK.name).toString()},CWBitcore.extractChangeTxoutValue=function(source,txHex){checkArgsType(arguments,["string","string"]);var tx=CWBitcore.parseRawTransaction(txHex);for(var i=0;i<tx.outs.length;i++){var address=CWBitcore.extractAddressFromTxOut(tx.outs[i]);if(address==source)return tx.outs[i].getValue()}return 0},CWBitcore.checkTransactionDest=function(txHex,source,dest){checkArgsType(arguments,["string","object","string"]);var tx=CWBitcore.parseRawTransaction(txHex);for(var i=0;i<tx.outs.length;i++){var addresses=CWBitcore.extractAddressFromTxOut(tx.outs[i]).split(","),containsSource=_.intersection(addresses,source).length>0,containsDest=addresses.indexOf(dest)!=-1;if(!containsSource&&!containsDest)return!1;if(addresses.length>1&&tx.outs[i].getValue()>MULTISIG_DUST_SIZE)return!1}return!0},CWBitcore.compareOutputs=function(source,txHexs){var tx0=CWBitcore.parseRawTransaction(txHexs[0]);for(var t=1;t<txHexs.length;t++){var tx1=CWBitcore.parseRawTransaction(txHexs[t]);if(tx1.outs.length!=tx0.outs.length)return!1;for(var i=0;i<tx0.outs.length;i++){var addresses0=CWBitcore.extractAddressFromTxOut(tx0.outs[i]).split(",").sort().join(","),addresses1=CWBitcore.extractAddressFromTxOut(tx1.outs[i]).split(",").sort().join(","),amount0=tx0.outs[i].getValue(),amount1=tx1.outs[i].getValue();if(addresses0!=addresses1||addresses0.indexOf(source)==-1&&amount0!=amount1)return!1}}return!0},CWBitcore.encrypt=function(message,password){return CryptoJS.AES.encrypt(message,password).toString()},CWBitcore.decrypt=function(cryptedMessage,password){return CryptoJS.enc.Utf8.stringify(CryptoJS.AES.decrypt(cryptedMessage,password))};
/*----------------js/util.js---------------*/
function assert(condition,message){if(!condition)throw message||"Assertion failed"}function checkArgType(arg,type){assert((typeof arg).toLowerCase()==type.toLowerCase(),"Invalid argument type")}function checkArgsType(args,types){for(var a=0;a<args.length;a++)checkArgType(args[a],types[a])}function numberWithCommas(x){if(!isNumber(x))return x;var parts=x.toString().split(".");return parts[0]=parts[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),parts.join(".")}function isNumber(n){return!isNaN(parseFloat(n))&&isFinite(n)}function numberHasDecimalPlace(n){return n%1!=0}function byteCount(s){return encodeURI(s).split(/%..|./).length-1}function randomIntFromInterval(min,max){return Math.floor(Math.random()*(max-min+1)+min)}function selectText(element){var doc=document,text=doc.getElementById(element),range,selection;doc.body.createTextRange?(range=doc.body.createTextRange(),range.moveToElementText(text),range.select()):window.getSelection&&(selection=window.getSelection(),range=doc.createRange(),range.selectNodeContents(text),selection.removeAllRanges(),selection.addRange(range))}function noExponents(n){var data=String(n).split(/[eE]/);if(data.length==1)return data[0];var z="",sign=this<0?"-":"",str=data[0].replace(".",""),mag=Number(data[1])+1;if(mag<0){z=sign+"0.";while(mag++)z+="0";return z+str.replace(/^\-/,"")}mag-=str.length;while(mag--)z+="0";return str+z}!function(){function _dynamicSortMultiple(attr){var props=arguments;return function(obj1,obj2){var i=0,result=0,numberOfProperties=props.length;while(result===0&&i<numberOfProperties)result=_dynamicSort(props[i])(obj1,obj2),i++;return result}}function _dynamicSort(property){var sortOrder=1;return property[0]==="-"&&(sortOrder=-1,property=property.substr(1)),function(a,b){var result=a[property]<b[property]?-1:a[property]>b[property]?1:0;return result*sortOrder}}Object.defineProperty(Array.prototype,"sortBy",{enumerable:!1,writable:!0,value:function(){return this.sort(_dynamicSortMultiple.apply(null,arguments))}})}(),Storage.prototype.setObject=function(key,value){this.setItem(key,JSON.stringify(value))},Storage.prototype.getObject=function(key){var value=this.getItem(key);return value&&JSON.parse(value)};function deepCompare(){var leftChain,rightChain;function compare2Objects(x,y){var p;if(isNaN(x)&&isNaN(y)&&typeof x=="number"&&typeof y=="number")return!0;if(x===y)return!0;if(typeof x=="function"&&typeof y=="function"||x instanceof Date&&y instanceof Date||x instanceof RegExp&&y instanceof RegExp||x instanceof String&&y instanceof String||x instanceof Number&&y instanceof Number)return x.toString()===y.toString();if(x instanceof Object&&y instanceof Object){if(x.isPrototypeOf(y)||y.isPrototypeOf(x))return!1;if(x.constructor!==y.constructor)return!1;if(x.prototype!==y.prototype)return!1;if(leftChain.indexOf(x)>-1||rightChain.indexOf(y)>-1)return!1;for(p in y){if(y.hasOwnProperty(p)!==x.hasOwnProperty(p))return!1;if(typeof y[p]!=typeof x[p])return!1}for(p in x){if(y.hasOwnProperty(p)!==x.hasOwnProperty(p))return!1;if(typeof y[p]!=typeof x[p])return!1;switch(typeof x[p]){case"object":case"function":leftChain.push(x),rightChain.push(y);if(!compare2Objects(x[p],y[p]))return!1;leftChain.pop(),rightChain.pop();break;default:if(x[p]!==y[p])return!1}}return!0}return!1}if(arguments.length<1)return!0;for(var i=1,l=arguments.length;i<l;i++){leftChain=[],rightChain=[];if(!compare2Objects(arguments[0],arguments[i]))return!1}return!0}function feedImageUrl(image_name){var url=cwBaseURLs()[0];return url+=USE_TESTNET?"/_t_feed_img/":"/_feed_img/",url+=image_name+".png",url}function assetImageUrl(image_name){var url=cwBaseURLs()[0];return url+=USE_TESTNET?"/_t_asset_img/":"/_asset_img/",url+=image_name+".png",url}function timestampToString(timestamp){return moment(timestamp*1e3).format("MMM Do YYYY, h:mm:ss a")}function satoshiToPercent(value){var percent=mulFloat(divFloat(value,UNIT),100);return smartFormat(percent,4,4)+"%"}function currency(amount,unit){return smartFormat(normalizeQuantity(amount),4,4)+" "+unit}function satoshiToXCP(amount){return currency(amount,XCP)}function round(amount,decimals){if(decimals===undefined||decimals===null)decimals=8;return Decimal.round(new Decimal(amount),decimals,Decimal.MidpointRounding.ToEven).toFloat()}function reduce(numerator,denominator){var gcd=function gcd(a,b){return b?gcd(b,a%b):a};return gcd=gcd(numerator,denominator),[numerator/gcd,denominator/gcd]}function getCurrentPage(){return window.location.hash.replace("#","/")}function trackPageView(url){if(!GOOGLE_ANALYTICS_UAID)return;typeof url=="undefined"&&(url=getCurrentPage()),_gaq.push(["_trackPageview",url])}function trackDialogShow(dialogName){if(!GOOGLE_ANALYTICS_UAID)return;_gaq.push(["_trackPageview",getCurrentPage()+"#"+dialogName])}function trackEvent(category,action,label,value){if(!GOOGLE_ANALYTICS_UAID)return;var data=["_trackEvent",category,action];typeof label!="undefined"&&data.push(label),typeof value!="undefined"&&data.push(value),_gaq.push(data)}function isValidURL(str){var pattern=/^(https?:\/\/)?((([a-z\d]([a-z\d-]*[a-z\d])*)\.)+[a-z]{2,}|((\d{1,3}\.){3}\d{1,3}))(\:\d+)?(\/[-a-z\d%_.~+]*)*(\?[;&a-z\d%_.~+=-]*)?(\#[-a-z\d_]*)?$/i;return str.match(pattern)?!0:!1}function get_duration(interval){var interval_array=interval.split("/");for(var i in interval_array)if(interval_array[i].substring(0,1)=="P"){var duration=nezasa.iso8601.Period.parseToString(interval_array[i]);return duration}return"Unknown"}function decodeJsonBet(jsonBetBase64){var jsonBet;try{$.jqlog.debug(atob(jsonBetBase64)),jsonBet=JSON.parse(atob(jsonBetBase64))}catch(e){return!1}if(typeof jsonBet!="object")return!1;if(jsonBet.command==undefined||jsonBet.command!="bet")return!1;var numbers={wager:1,counterwager:1,target_value:1,expiration:1,leverage:1,bet_type:1};for(var e in numbers)if(jsonBet[e]==undefined||isNaN(jsonBet[e]))return!1;if(BET_TYPES_SHORT[jsonBet.bet_type]==undefined)return!1;if(jsonBet.deadline==undefined||!moment(jsonBet.deadline).isValid())return!1;if(jsonBet.feed_address==undefined||!CWBitcore.isValidAddress(jsonBet.feed_address))return!1;if(jsonBet.source==undefined)return!1;var addresses=WALLET.getAddressesList(!0),isMine=!1;for(var i=0;i<addresses.length;i++)addresses[i][0]==jsonBet.source&&(isMine=!0);return isMine?jsonBet:!1}function expireDate(expire_index){var expire_in=expire_index-WALLET.networkBlockHeight();return new Date((new Date).getTime()+expire_in*APPROX_SECONDS_PER_BLOCK*1e3)}function genRandom(){var random=new Uint8Array(16);if(window.crypto&&window.crypto.getRandomValues)window.crypto.getRandomValues(random);else if(window.msCrypto&&window.msCrypto.getRandomValues)window.msCrypto.getRandomValues(random);else{var errText="Your browser lacks a way to securely generate random values. Please use a different, newer browser.";bootbox.alert(errText),assert(!1,errText)}return Crypto.util.bytesToHex(random)}function doubleHash(hexstr){return bitcore.util.sha256(bitcore.util.sha256(Crypto.util.hexToBytes(hexstr))).toString("hex")}function checkCountry(action,callback){if(RESTRICTED_AREA[action]&&RESTRICTED_AREA[action].indexOf(USER_COUNTRY)!=-1){var message="It appears that you are located in a country in which we are legally unable to provide this service.";USE_TESTNET?bootbox.dialog({title:"Country warning",message:message+"<br/><br/>Since you are on testnet, you can choose to proceeed anyway.",buttons:{success:{label:"Proceed Anyway",className:"btn-success",callback:function(){callback()}},cancel:{label:"Close",className:"btn-danger",callback:function(){return bootbox.hideAll(),!1}}}}):bootbox.dialog({title:"Country warning",message:message,buttons:{cancel:{label:"Close",className:"btn-danger",callback:function(){return bootbox.hideAll(),!1}}}})}else callback()}(function(){CClass=function(){},CClass.create=function(constructor){var k=this;return c=function(){this._super=k;var pubs=constructor.apply(this,arguments),self=this;for(key in pubs)(function(fn,sfn){self[key]=typeof fn!="function"||typeof sfn!="function"?fn:function(){return this._super=sfn,fn.apply(this,arguments)}})(pubs[key],self[key])},c.prototype=new this,c.prototype.constructor=c,c.extend=this.extend||this.create,c}})();
/*----------------js/util.api.js---------------*/
var TIMEOUT_FAILOVER_API=16e3,TIMEOUT_MULTI_API=8e3;$.ajaxSetup({beforeSend:function(jqXHR,settings){jqXHR.url=settings.url}});function describeError(jqXHR,textStatus,errorThrown){var message,statusErrorMap={400:"Server understood the request but request content was invalid.",401:"Unauthorised access.",403:"Forbidden resouce can't be accessed",500:"Internal Server Error.",503:"Service Unavailable",525:"The server is not fully caught up to the blockchain. Please logout and try later. (Most likely this message is due to the server being updated.)"};return jqXHR&&jqXHR.status?message=statusErrorMap[jqXHR.status]:textStatus=="parsererror"?message="Error.\nParsing JSON Request failed.":textStatus=="timeout"?message="Request Time out.":textStatus=="abort"?message="Request was aborted by the server":errorThrown=="jsonrpc"?message=textStatus:errorThrown?message=errorThrown:message="Unknown Error.",message}function defaultErrorHandler(jqXHR,textStatus,errorThrown,endpoint){typeof endpoint=="undefined"&&(endpoint=jqXHR.url);var message=describeError(jqXHR,textStatus,errorThrown);bootbox.alert("Error making request to "+endpoint+": "+message)}function urlsWithPath(urls,path){return $.map(urls,function(element){return element+path})}function fetchData(url,onSuccess,onError,postdata,extraAJAXOpts,isJSONRPC,_url_n){var u=null;if(typeof onError=="undefined"||onError=="default")onError=function(jqXHR,textStatus,errorThrown){return defaultErrorHandler(jqXHR,textStatus,errorThrown,u)};typeof postdata=="undefined"&&(postdata=null),typeof isJSONRPC=="undefined"&&(isJSONRPC=!1),typeof extraAJAXOpts=="undefined"&&(extraAJAXOpts={}),typeof _url_n=="undefined"&&(_url_n=0),extraAJAXOpts.cache===undefined&&(extraAJAXOpts.cache=!1),u=url,url instanceof Array&&(u=url[_url_n]);var ajaxOpts={type:postdata?"POST":"GET",data:postdata,url:u,success:function(res){if(onSuccess)if(isJSONRPC)if(res&&res.hasOwnProperty("result"))onSuccess(res.result,u);else{var errorMessage=null;res.error===undefined?errorMessage="JSON-RPC Error -- UNKNOWN FORMAT: "+res:errorMessage="JSON-RPC Error: <p><b>Type:</b> "+res.error.message+"</p>"+"<p><b>Code:</b> "+res.error.code+"</p>"+"<p><b>Message:</b> "+(res.error.data?res.error.data.message:"UNSPECIFIED")+"</p>",onError(null,errorMessage,"jsonrpc",u)}else onSuccess(res,u)},error:function(jqXHR,opt,err){if(url instanceof Array){if(!(url.length<=_url_n+1))return fetchData(url,onSuccess,onError,postdata,extraAJAXOpts,isJSONRPC,_url_n+1);if(onError)return onError(jqXHR,opt,err,u)}else if(onError)return onError(jqXHR,opt,err,u)}};if(extraAJAXOpts)for(var attrname in extraAJAXOpts)ajaxOpts[attrname]=extraAJAXOpts[attrname];$.ajax(ajaxOpts)}function _formulateEndpoints(endpoints,qs){var newEndpoints=[];endpoints instanceof Array||(endpoints=[endpoints]);for(var i=0;i<endpoints.length;i++)newEndpoints.push(endpoints+"?"+qs);return newEndpoints}function _encodeForJSONRPCOverGET(params){return encodeURIComponent(bytesToBase64(stringToBytes(JSON.stringify(params))))}function _makeJSONAPICall(destType,endpoints,method,params,timeout,onSuccess,onError,httpMethod){typeof onError=="undefined"&&(onError=function(jqXHR,textStatus,errorThrown,endpoint){return defaultErrorHandler(jqXHR,textStatus,errorThrown,method+"@"+destType)}),typeof httpMethod=="undefined"&&(httpMethod="POST"),assert(httpMethod=="POST"||httpMethod=="GET","Invalid HTTP method");if(httpMethod=="POST"){var extraAJAXOpts={contentType:"application/json; charset=utf-8",dataType:"json",timeout:timeout};destType=="counterblockd"?fetchData(endpoints,onSuccess,onError,JSON.stringify({jsonrpc:"2.0",id:0,method:method,params:params}),extraAJAXOpts,!0):destType=="counterpartyd"&&fetchData(endpoints,onSuccess,onError,JSON.stringify({jsonrpc:"2.0",id:0,method:"proxy_to_counterpartyd",params:{method:method,params:params}}),extraAJAXOpts,!0)}else{var qs=null,extraAJAXOpts={crossDomain:!0,timeout:timeout};destType=="counterblockd"?(qs=$.param({jsonrpc:"2.0",id:0,method:method,params:_encodeForJSONRPCOverGET(params)}),fetchData(_formulateEndpoints(endpoints,qs),onSuccess,onError,null,extraAJAXOpts,!0)):destType=="counterpartyd"&&(qs=$.param({jsonrpc:"2.0",id:0,method:"proxy_to_counterpartyd",params:_encodeForJSONRPCOverGET({method:method,params:params})}),fetchData(_formulateEndpoints(endpoints,qs),onSuccess,onError,null,extraAJAXOpts,!0))}}function _getDestTypeFromMethod(method){var destType="counterpartyd";return["is_ready","get_reflected_host_info","is_chat_handle_in_use","get_messagefeed_messages_by_index","get_normalized_balances","get_required_btcpays","get_chain_address_info","get_chain_block_height","get_chain_txns_status","get_num_users_online","get_chat_handle","store_chat_handle","is_wallet_online","get_preferences","store_preferences","get_raw_transactions","get_balance_history","get_last_n_messages","get_owned_assets","get_asset_history","get_asset_extended_info","get_transaction_stats","get_wallet_stats","get_asset_pair_market_info","get_market_price_summary","get_market_price_history","get_market_info","get_market_info_leaderboard","get_market_cap_history","get_order_book_simple","get_order_book_buysell","get_trade_history","record_btc_open_order","cancel_btc_open_order","get_bets","get_user_bets","get_feed","get_feeds_by_source","parse_base64_feed","get_open_rps_count","get_user_rps","get_users_pairs","get_market_orders","get_market_trades","get_markets_list","get_market_details","get_pubkey_for_address","create_armory_utx","convert_armory_signedtx_to_raw_hex","create_support_case"].indexOf(method)>=0&&(destType="counterblockd"),destType}function supportUnconfirmedChangeParam(method){return method.split("_").shift()=="create"&&_getDestTypeFromMethod(method)=="counterpartyd"}function _multiAPIPrimative(method,params,onFinished){var gatheredResults=[],destType=_getDestTypeFromMethod(method);for(var i=0;i<cwAPIUrls().length;i++)_makeJSONAPICall(destType,cwAPIUrls()[i],method,params,TIMEOUT_MULTI_API,function(data,endpoint){gatheredResults.push({success:!0,endpoint:endpoint,data:data}),gatheredResults.length==cwAPIUrls().length&&onFinished(gatheredResults)},function(jqXHR,textStatus,errorThrown,endpoint){gatheredResults.push({success:!1,endpoint:endpoint,jqXHR:jqXHR,textStatus:textStatus,errorThrown:errorThrown});if(gatheredResults.length==cwAPIUrls().length){if(method!="is_ready"){var allNotCaughtUp=!0;for(var j=0;j<gatheredResults.length;j++)if(!gatheredResults.jqXHR||gatheredResults["jqXHR"].status!="525"){allNotCaughtUp=!1;break}if(allNotCaughtUp){bootbox.alert("The server(s) are currently updating and/or not caught up to the blockchain. Logging you out. Please try logging in again later. (Most likely this message is due to the server being updated.)"),location.reload(!1);return}}onFinished(gatheredResults)}})}function failoverAPI(method,params,onSuccess,onError){typeof onError=="undefined"&&(onError=function(jqXHR,textStatus,errorThrown,endpoint){var message=describeError(jqXHR,textStatus,errorThrown);bootbox.alert("failoverAPI: Call failed (failed over across all servers). Method: "+method+"; Last error: "+message)}),onErrorOverride=function(jqXHR,textStatus,errorThrown,endpoint){if(jqXHR&&jqXHR.status=="525"){bootbox.alert("The server(s) are currently updating and/or not caught up to the blockchain. Logging you out. Please try logging in again later. (e:failoverAPI)"),location.reload(!1);return}return onError(jqXHR,textStatus,errorThrown,endpoint)};var destType=_getDestTypeFromMethod(method);_makeJSONAPICall(destType,cwAPIUrls(),method,params,TIMEOUT_FAILOVER_API,onSuccess,onErrorOverride)}function multiAPI(method,params,onSuccess,onError){typeof onError=="undefined"&&(onError=function(jqXHR,textStatus,errorThrown,endpoint){var message=describeError(jqXHR,textStatus,errorThrown);bootbox.alert("multiAPI: Parallel call failed (no server returned success). Method: "+method+"; Last error: "+message)}),_multiAPIPrimative(method,params,function(results){for(var i=0;i<results.length;i++)if(results[i].success)return onSuccess?onSuccess(results[i].data,results[i].endpoint):!0;return onError(results[i-1].jqXHR,results[i-1].textStatus,results[i-1].errorThrown,results[i-1].endpoint)})}function getAssetInfo(assets){var slices=[],assets=[].concat(assets);while(assets.length)slices.push(assets.splice(0,100));var promises=slices.map(function(assets){return new Promise(function(resolve){failoverAPI("get_asset_info",{assets:assets},function(assetsInfo){return resolve(assetsInfo)})})});return Promise.all(promises).then(_.flatten)}function multiAPIConsensus(method,params,onSuccess,onConsensusError,onSysError){typeof onConsensusError=="undefined"&&(onConsensusError=function(unmatchingResultsList){bootbox.alert("multiAPIConsensus: Consensus failed. Method: "+method+"; Unmatching results were: "+JSON.stringify(unmatchingResultsList))}),typeof onSysError=="undefined"&&(onSysError=function(jqXHR,textStatus,errorThrown,endpoint){$.jqlog.debug(textStatus);var message=textStatus,noBtcPos=textStatus.indexOf("Insufficient "+BTC_NAME+"s");if(noBtcPos!=-1){var endMessage=textStatus.indexOf(")",noBtcPos)+1;message='<b class="errorColor">'+textStatus.substr(noBtcPos,endMessage-noBtcPos)+"</b>. You must have a small amount of "+BTC+" in this address to pay the "+BTC_NAME+" miner fees. Please fund this address and try again.<br/><br/>"+'<a href="https://www.counterparty.co/resources/faqs/why-do-i-need-small-amounts-of-bitcoin-to-do-things-in-counterwallet/" target="_blank">More information on why this is necessary.</a>'}else message=describeError(jqXHR,textStatus,errorThrown),message="Sorry, we got an error when trying to do the requested action: '"+message+"' (API method: "+method+").<br/><br/>"+"If this persists, please click on the question mark button on the top right-hand corner of the screen for support options.";bootbox.alert(message)}),_multiAPIPrimative(method,params,function(results){var successResults=[],i=0;for(i=0;i<results.length;i++)results[i].success&&successResults.push(results[i].data);if(!successResults.length)return onSysError(results[i-1].jqXHR,results[i-1].textStatus,results[i-1].errorThrown,results[i-1].endpoint);if(!CWBitcore.compareOutputs(params.source,successResults))return onConsensusError(successResults);onSuccess&&onSuccess(successResults[successResults.length-1],cwAPIUrls().length,successResults.length)})}function multiAPINewest(method,params,newestField,onSuccess,onError){typeof onError=="undefined"&&(onError=function(jqXHR,textStatus,errorThrown,endpoint){var message=describeError(jqXHR,textStatus,errorThrown);bootbox.alert("multiAPINewest: Parallel call failed (no server returned success). Method: "+method+"; Last error: "+message)}),_multiAPIPrimative(method,params,function(results){var successResults=[],i=0;for(i=0;i<results.length;i++)results[i].success&&successResults.push(results[i]);if(!successResults.length)return onError(results[i-1].jqXHR,results[i-1].textStatus,results[i-1].errorThrown,results[i-1].endpoint);var newest=null;for(i=0;i<successResults.length;i++)successResults[i].data&&successResults[i].data.hasOwnProperty(newestField)&&successResults[i].data[newestField]&&(newest==null||successResults[i].data[newestField]>successResults[newest].data[newestField])&&(newest=i);onSuccess&&newest!=null?onSuccess(successResults[newest].data,successResults[newest].endpoint):onSuccess&&newest==null&&onSuccess(null,null)})};
/*----------------js/util.bitcoin.js---------------*/
function normalizeQuantity(quantity,divisible){return typeof divisible=="undefined"&&(divisible=!0),divisible&&quantity!==0?Decimal.round((new Decimal(quantity)).div(UNIT),8,Decimal.MidpointRounding.ToEven).toFloat():parseInt(quantity)}function denormalizeQuantity(quantity,divisible){return typeof divisible=="undefined"&&(divisible=!0),divisible&&quantity!==0?Decimal.round((new Decimal(quantity)).mul(UNIT),8,Decimal.MidpointRounding.ToEven).toFloat():parseInt(quantity)}function addFloat(floatA,floatB){var a=new Decimal(floatA),b=new Decimal(floatB);return Decimal.round(a.add(b),8,Decimal.MidpointRounding.ToEven).toFloat()}function subFloat(floatA,floatB){return addFloat(floatA,-floatB)}function mulFloat(floatA,floatB){var a=new Decimal(floatA),b=new Decimal(floatB);return Decimal.round(a.mul(b),8,Decimal.MidpointRounding.ToEven).toFloat()}function divFloat(floatA,floatB){var a=new Decimal(floatA),b=new Decimal(floatB);return Decimal.round(a.div(b),8,Decimal.MidpointRounding.ToEven).toFloat()}function hashToB64(content){return CryptoJS.SHA256(content).toString(CryptoJS.enc.Base64)}function smartFormat(num,truncateDecimalPlacesAtMin,truncateDecimalPlacesTo){if(num===null||isNaN(num))return"??";if(num===0)return num;if(typeof truncateDecimalPlacesMin=="undefined"||truncateDecimalPlacesMin===null)truncateDecimalPlacesMin=null;typeof truncateDecimalPlacesTo=="undefined"&&(truncateDecimalPlacesTo=4);if(truncateDecimalPlacesAtMin===null||num>truncateDecimalPlacesAtMin)num=Decimal.round(new Decimal(num),truncateDecimalPlacesTo,Decimal.MidpointRounding.ToEven).toFloat();return numberWithCommas(noExponents(num))}function assetsToAssetPair(asset1,asset2){var base=null,quote=null;return asset1==BTC||asset2==BTC?(base=asset1==BTC?asset2:asset1,quote=asset1==BTC?asset1:asset2):asset1==XCP||asset2==XCP?(base=asset1==XCP?asset2:asset1,quote=asset1==XCP?asset1:asset2):asset1=="XBTC"||asset2=="XBTC"?(base=asset1=="XBTC"?asset2:asset1,quote=asset1=="XBTC"?asset1:asset2):(base=asset1<asset2?asset1:asset2,quote=asset1<asset2?asset2:asset1),[base,quote]}function makeQRCode(addr){$.jqlog.debug("Generate Qrcode: "+addr),addr=addr.replace(/^[\s\u3000]+|[\s\u3000]+$/g,"");var qr=qrcode(3,"M");return qr.addData(addr),qr.make(),qr.createImgTag(4)}function getLinkForCPData(type,dataID,dataTitle,htmlize){if(typeof dataTitle=="undefined"||dataTitle===null)dataTitle=dataID;if(typeof htmlize=="undefined"||htmlize===null)htmlize=!0;typeof type=="undefined"&&(type="tx");var url=null;return type=="address"?url="http://dogepartychain.info/address/"+dataID:type=="order"?url="http://blockscan.com/order.aspx?q="+dataID:type=="tx"?url="http://blockscan.com/tx.aspx?q="+dataID:assert(!1,"Unknown type of "+type),USE_TESTNET?dataTitle?dataTitle:dataID:htmlize?'<a href="'+url+'" target="_blank">'+dataTitle+"</a>":url}function getTxHashLink(hash){var shortHash=hash.substr(hash.length-5);hash.length==128&&(shortHash+="..."+hash.substr(64,5));var link='<span rel="tooltip" title="'+hash+'" data-placement="top" data-container="body" class="shortHash">'+shortHash+"</span>";return link}function getLinkForBlock(blockIndex,dataTitle,htmlize){if(typeof dataTitle=="undefined"||dataTitle===null)dataTitle=blockIndex;if(typeof htmlize=="undefined"||htmlize===null)htmlize=!0;var url=BLOCKEXPLORER_URL+"/block/"+blockIndex;return htmlize?'<a href="'+url+'" target="_blank">'+dataTitle+"</a>":url}function getAddressLabel(address){return PREFERENCES.address_aliases[hashToB64(address)]||address}function burnDetermineEarned(blockHeight,burned){burned=denormalizeQuantity(burned);var total_time=BURN_END-BURN_START,partial_time=BURN_END-blockHeight,multiplier=BURN_MULTIPLIER*(1+.5*(partial_time/total_time)),earned=Decimal.round((new Decimal(burned)).mul(multiplier),8,Decimal.MidpointRounding.ToEven).toFloat();return normalizeQuantity(earned)}function bytesToBase64(bytes){var base64map="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",base64=[];for(var i=0;i<bytes.length;i+=3){var triplet=bytes[i]<<16|bytes[i+1]<<8|bytes[i+2];for(var j=0;j<4;j++)i*8+j*6<=bytes.length*8?base64.push(base64map.charAt(triplet>>>6*(3-j)&63)):base64.push("=")}return base64.join("")}function stringToBytes(string){return string.split("").map(function(x){return x.charCodeAt(0)})}function bytesToWords(bytes){var words=[];for(var i=0,b=0;i<bytes.length;i++,b+=8)words[b>>>5]|=bytes[i]<<24-b%32;return words}function wordsToBytes(words){var bytes=[];for(var b=0;b<words.length*32;b+=8)bytes.push(words[b>>>5]>>>24-b%32&255);return bytes}function bytesToWordArray(bytes){return new CryptoJS.lib.WordArray.init(bytesToWords(bytes),bytes.length)}function wordArrayToBytes(wordArray){return wordsToBytes(wordArray.words)};
/*----------------js/util.knockout.js---------------*/
var isBound=function(id){return!!ko.dataFor(document.getElementById(id))};ko.subscribable.fn.trimmed=function(){return ko.computed({read:function(){return typeof this()=="string"?this().trim():this()},write:function(value){this(typeof value=="string"?value.trim():value),typeof value=="string"&&this.valueHasMutated()},owner:this})},ko.subscribable.fn.subscribeChanged=function(callback){var oldValue;this.subscribe(function(_oldValue){oldValue=_oldValue},this,"beforeChange"),this.subscribe(function(newValue){callback(newValue,oldValue)})},ko.bindingHandlers.showModal={init:function(element,valueAccessor){},update:function(element,valueAccessor){var value=valueAccessor();ko.utils.unwrapObservable(value)?($(element).modal("show"),$("input",element).focus()):$(element).modal("hide")}},ko.bindingHandlers.timeago={init:function(element,valueAccessor,allBindingsAccessor,viewModel,bindingContext){var value=valueAccessor(),valueUnwrapped=ko.unwrap(value);element.title=moment(valueUnwrapped).toISOString(),$(element).timeago()},update:function(element,valueAccessor,allBindingsAccessor,viewModel,bindingContext){var value=valueAccessor(),valueUnwrapped=ko.unwrap(value);element.title=moment(valueUnwrapped).toISOString(),$(element).timeago("update",element.title)}},ko.bindingHandlers.datetimepicker={init:function(element,valueAccessor,allBindingsAccessor){var options=allBindingsAccessor().datepickerOptions||{};$(element).datetimepicker(options),ko.utils.registerEventHandler(element,"change.dp",function(event){var value=valueAccessor();ko.isObservable(value)&&event.date&&value(event.date.toDate())})},update:function(element,valueAccessor){var widget=$(element).data("DateTimePicker");if(widget){var date=ko.utils.unwrapObservable(valueAccessor());date&&widget.setDate(date)}}},ko.validation.rules.isValidBitcoinAddress={validator:function(val,self){return CWBitcore.isValidAddress(val)},message:USE_TESTNET?"This field must be a valid TESTNET "+BTC_NAME+" address.":"This field must be a valid "+BTC_NAME+" address."},ko.validation.rules.isValidBitcoinAddressIfSpecified={validator:function(val,self){try{return val?CWBitcore.isValidAddress(val):!0}catch(err){return!1}},message:USE_TESTNET?"This field must be a valid TESTNET "+BTC_NAME+" address.":"This field must be a valid "+BTC_NAME+" address."},ko.validation.rules.isValidQtyForDivisibility={validator:function(val,self){return!self.divisible()&&numberHasDecimalPlace(parseFloat(val))?!1:!0},message:"The quantity entered must be a whole number, since this is a non-divisible asset."},ko.validation.rules.isNotSameBitcoinAddress={validator:function(val,self){return val!=self.address()},message:"Destination address cannot be equal to the source address."},ko.validation.rules.isValidPositiveQuantity={validator:function(val,self){return val.toString().match(/^[0-9]*\.?[0-9]{0,8}$/)&&parseFloat(val)>0},message:"Must be a valid quantity (positive num with max 8 decimal places)"},ko.validation.rules.isValidPositiveQuantityOrZero={validator:function(val,self){return val.toString().match(/^[0-9]*\.?[0-9]{0,8}$/)&&parseFloat(val)>=0},message:"Must be a valid quantity (num with max 8 decimal places), or zero"},ko.validation.rules.isValidPositiveInteger={validator:function(val,self){return val.toString().match(/^[0-9]+$/)&&parseFloat(val)>=0},message:"Must be a positive integer"},ko.validation.rules.isValidUrl={validator:function(val,self){return isValidURL(val)},message:"This field must be a valid url"},ko.validation.rules.isValidUrlOrValidBitcoinAdressOrJsonBet={validator:function(val,self){return val?val.length>50||val.lastIndexOf("=")==val.length-1?typeof decodeJsonBet(val)=="object":val.indexOf("http://")==0||val.indexOf("https://")==0?isValidURL(val):CWBitcore.isValidAddress(val):!1},message:"This field must be a valid url or a valid "+BTC_NAME+" address"},ko.validation.registerExtenders(),ko.bindingHandlers.btnGroupChecked={init:function(element,valueAccessor,allBindingsAccessor,viewModel,bindingContext){var value=valueAccessor(),newValueAccessor=function(){return{change:function(){if($(element).is(":disabled"))return;value(element.value)}}};ko.bindingHandlers.event.init(element,newValueAccessor,allBindingsAccessor,viewModel,bindingContext)},update:function(element,valueAccessor,allBindingsAccessor,viewModel,bindingContext){$(element).val()==ko.unwrap(valueAccessor())&&!$(element).is(":disabled")?$(element).addClass("active"):$(element).removeClass("active")}},ko.bindingHandlers.select2={init:function(element,valueAccessor,allBindingsAccessor){var obj=valueAccessor(),allBindings=allBindingsAccessor(),lookupKey=allBindings.lookupKey;obj.hasOwnProperty("escapeMarkup")&&obj.escapeMarkup==="direct"&&(obj.escapeMarkup=function(m){return m}),$(element).select2(obj);if(lookupKey){var value=ko.utils.unwrapObservable(allBindings.value);$(element).select2("data",ko.utils.arrayFirst(obj.data.results,function(item){return item[lookupKey]===value}))}ko.utils.domNodeDisposal.addDisposeCallback(element,function(){$(element).select2("destroy")})},update:function(element,valueAccessor,allBindingsAccessor,viewModel){$(element).trigger("change")}},ko.bindingHandlers.sparkline={update:function(element,valueAccessor,allBindingsAccessor,viewModel){var value=ko.utils.unwrapObservable(valueAccessor()),options=allBindingsAccessor().sparklineOptions||{};$(element).sparkline(value,options)}},ko.bindingHandlers.fadeVisible={init:function(element,valueAccessor){var value=valueAccessor();$(element).toggle(ko.unwrap(value))},update:function(element,valueAccessor){var value=valueAccessor();ko.unwrap(value)?$(element).fadeIn():$(element).fadeOut()}},ko.bindingHandlers.fadeVisibleInOnly={init:function(element,valueAccessor){var value=valueAccessor();$(element).toggle(ko.unwrap(value))},update:function(element,valueAccessor){var value=valueAccessor();ko.unwrap(value)?$(element).fadeIn():$(element).hide()}},ko.bindingHandlers.fadeInText={update:function(element,valueAccessor){$(element).hide(),ko.bindingHandlers.text.update(element,valueAccessor),$(element).fadeIn("slow")}};
/*----------------js/counterwallet.js---------------*/
$.jqlog.enabled(!0),$.jqlog.debug=function(object,options){(IS_DEV||USE_TESTNET)&&$.jqlog.info(object,options)},_.mixin(_.string.exports()),window.location.origin||(window.location.origin=window.location.protocol+"//"+window.location.hostname+(window.location.port?":"+window.location.port:"")),(IS_DEV||USE_TESTNET)&&location.search&&(assert($.layout.className!=="trident9","Use of 'dev' or 'testnet' flags NOT supported on IE 9, due to lack of history.replaceState() support."),history.replaceState({},"",location.pathname));var options={attribute:"data-bind",globals:window,bindings:ko.bindingHandlers,noVirtualElements:!1};ko.bindingProvider.instance=new ko.secureBindingsProvider(options),ko.validation.init({decorateElement:!0,errorMessageClass:"invalid",errorElementClass:"invalid"}),$.timeago.settings.allowFuture=!0;var cwURLs=ko.observableArray([]),cwBaseURLs=ko.observableArray([]),cwAPIUrls=ko.observableArray([]),disabledFeatures=ko.observableArray([]);function produceCWServerList(){cwURLs(_.shuffle(cwURLs())),$.jqlog.debug("MultiAPI Backends: "+JSON.stringify(cwURLs())),cwBaseURLs(jQuery.map(cwURLs(),function(element){return element})),cwAPIUrls(jQuery.map(cwURLs(),function(element){return element+(USE_TESTNET?"/_t_api":"/_api")}))}function initGoogleAnalytics(){$.jqlog.debug("Initializing Google Analytics for UA: "+GOOGLE_ANALYTICS_UAID);if(!GOOGLE_ANALYTICS_UAID)return;window._gaq=[["_setAccount",GOOGLE_ANALYTICS_UAID],["_trackPageview"]],function(d,t){var g=d.createElement(t),s=d.getElementsByTagName(t)[0];g.async=1,g.src=("https:"==location.protocol?"//ssl":"//www")+".google-analytics.com/ga.js",s.parentNode.insertBefore(g,s)}(document,"script")}function initRollbar(){if(!ROLLBAR_ACCESS_TOKEN)return;var _rollbarConfig={accessToken:ROLLBAR_ACCESS_TOKEN,captureUncaught:!0,payload:{environment:USE_TESTNET?"testnet":"mainnet"}};!function(a,b){function c(b){this.shimId=++f,this.notifier=null,this.parentShim=b,this.logger=function(){},a.console&&void 0===a.console.shimId&&(this.logger=a.console.log)}function d(b){var d=c;return e(function(){if(this.notifier)return this.notifier[b].apply(this.notifier,arguments);var c=this,e="scope"===b;e&&(c=new d(this));var f=Array.prototype.slice.call(arguments,0),g={shim:c,method:b,args:f,ts:new Date};return a._rollbarShimQueue.push(g),e?c:void 0})}function e(a,b){return b=b||this.logger,function(){try{return a.apply(this,arguments)}catch(c){b("Rollbar internal error:",c)}}}var f=0;c.init=function(a,b){var d=b.globalAlias||"Rollbar";if("object"==typeof a[d])return a[d];a._rollbarShimQueue=[],b=b||{};var f=new c;return e(function(){if(f.configure(b),b.captureUncaught){var c=a.onerror;a.onerror=function(){f.uncaughtError.apply(f,arguments),c&&c.apply(a,arguments)}}return a[d]=f,f},f.logger)()},c.prototype.loadFull=function(a,b,c,d){var f=e(function(){var a=b.createElement("script"),e=b.getElementsByTagName("script")[0];a.src=d.rollbarJsUrl,a.async=!c,a.onload=g,e.parentNode.insertBefore(a,e)},this.logger),g=e(function(){if(void 0===a._rollbarPayloadQueue)for(var b,c,d,e,f=new Error("rollbar.js did not load");b=a._rollbarShimQueue.shift();)for(d=b.args,e=0;e<d.length;++e)if(c=d[e],"function"==typeof c){c(f);break}},this.logger);e(function(){c?f():a.addEventListener?a.addEventListener("load",f,!1):a.attachEvent("onload",f)},this.logger)()};for(var g="log,debug,info,warn,warning,error,critical,global,configure,scope,uncaughtError".split(","),h=0;h<g.length;++h)c.prototype[g[h]]=d(g[h]);var i="assets/rollbar.min.js";_rollbarConfig.rollbarJsUrl=_rollbarConfig.rollbarJsUrl||i;var j=c.init(a,_rollbarConfig);j.loadFull(a,b,!1,_rollbarConfig)}(window,document)}function loadServersListAndSettings(){$.getJSON("servers.json",function(data){assert(data&&typeof data=="object"&&data.hasOwnProperty("servers"),"Returned servers.json file does not contain valid JSON object"),assert(data.servers&&data.servers instanceof Array,"'servers' field in returned servers.json file is not an array"),ROLLBAR_ACCESS_TOKEN=data.rollbarAccessToken||"",GOOGLE_ANALYTICS_UAID=(USE_TESTNET?data["googleAnalyticsUA-testnet"]:data.googleAnalyticsUA)||"",data.servers.length?cwURLs(data.servers):cwURLs([location.origin]),produceCWServerList(),initGoogleAnalytics(),initRollbar();if(data.disabledFeatures){assert(data.disabledFeatures instanceof Array,"'disabledFeatures' field in returned servers.json file is not an array");for(var i=0;i<data.disabledFeatures;i++)DISABLED_FEATURES_SUPPORTED.indexOf(data["disabledFeatures"][i])==-1&&assert(data.disabledFeatures instanceof Array,"'disabledFeatures' field has invalid entry '"+data.disabledFeatures[i]+"'. Supported entries are: "+DISABLED_FEATURES_SUPPORTED.join(", "));$.jqlog.debug("Disabled features: "+data.disabledFeatures)}disabledFeatures(data.disabledFeatures||[])}).fail(function(){cwURLs([location.origin]),produceCWServerList()})}function needWarningOnExit(){return window.WALLET&&WALLET.isSellingBTC()||window.MESSAGE_FEED.sellBTCOrdersCount()||window.PENDING_ACTION_FEED.pendingSellBTCOrdersCount()}function warningOnExit(){if(needWarningOnExit())return"If you log out, any "+BTC_NAME+" sell orders you have open will probably not be filled."}function autoDropUpDropdowns(){(function(){var dropUpMarginBottom=100;function dropUp(){var windowHeight=$(window).height();$(".btn-group-dropup").each(function(){var dropDownMenuHeight,rect=this.getBoundingClientRect();if(rect.top>windowHeight)return;dropDownMenuHeight=$(this).data("menu"),dropDownMenuHeight==null&&(dropDownMenuHeight=$(this).children(".dropdown-menu").height()),$(this).toggleClass("dropup",windowHeight-rect.bottom<dropDownMenuHeight+dropUpMarginBottom&&rect.top>dropDownMenuHeight)})}$(window).bind({"resize scroll touchstart touchmove mousewheel":_.debounce(dropUp,100),load:dropUp})}).call(this)}$(document).ready(function(){$.reject({reject:{msie1:!0,msie2:!0,msie3:!0,msie4:!0,msie5:!0,msie6:!0,msie7:!0,msie8:!0,msie9:!0,msie10:!0,msie11:!0,firefox1:!0,firefox2:!0,firefox3:!0,firefox4:!0,firefox5:!0,firefox6:!0,firefox7:!0,firefox8:!0,firefox9:!0,firefox10:!0,firefox11:!0,firefox12:!0,firefox13:!0,firefox14:!0,firefox15:!0,firefox16:!0,firefox17:!0,firefox18:!0,firefox19:!0,firefox20:!0,firefox21:!0,firefox22:!0,chrome1:!0,chrome2:!0,chrome3:!0,chrome4:!0,chrome5:!0,chrome6:!0,chrome7:!0,chrome8:!0,chrome9:!0,chrome10:!0,chrome11:!0,chrome12:!0,chrome13:!0,chrome14:!0,chrome15:!0,chrome16:!0,chrome17:!0,chrome18:!0,chrome19:!0,chrome20:!0,chrome21:!0,chrome22:!0,chrome23:!0,chrome24:!0,opera1:!0,opera2:!0,opera3:!0,opera4:!0,opera5:!0,opera6:!0,opera7:!0,opera8:!0,opera9:!0,opera10:!0,opera11:!0,opera12:!0,opera13:!0,opera14:!0,safari1:!0,safari2:!0,safari3:!0,safari4:!0,safari5:!0,safari5:!0,safari6:!0},imagePath:"assets/",display:["chrome","firefox","safari"],browserInfo:{chrome:{text:"Chrome",url:"https://www.google.com/intl/en/chrome/browser/"},firefox:{text:"Firefox",url:"http://www.mozilla.org/"},safari:{text:"Safari (Mac Users)",url:"http://www.apple.com/safari/download/"},opera:{text:"Opera",url:"http://www.opera.com/download/"}},header:"Your browser is not supported with Dogeparty Wallet",paragraph1:"Dogeparty Wallet's security features require a newer browser than what you are using. We recommend Chrome for the best user experience. Also, note that Microsoft Internet Explorer is not supported due to it's lack of full support for Content-Security-Policy restrictions.",close:!1,closeESC:!1}),autoDropUpDropdowns(),loadServersListAndSettings(),window.onbeforeunload=warningOnExit});
/*----------------js/counterblock.js---------------*/
Counterblock={},Counterblock.getBalances=function(addresses,cwkeys,callback){WALLET.retriveBTCAddrsInfo(addresses,function(btcData){failoverAPI("get_normalized_balances",{addresses:addresses},function(assetsData,endpoint){var data={};for(var i in assetsData)e=assetsData[i],data[e.address]=data[e.address]||{},data[e.address][e.asset]={balance:e.quantity,owner:e.owner};for(var i in btcData){e=btcData[i];if(data[e.addr]||e.confirmedRawBal>0)data[e.addr]=data[e.addr]||{},data[e.addr][BTC]={balance:e.confirmedRawBal,txouts:e.rawUtxoData.length},cwkeys[e.addr]&&(data[e.addr][BTC].privkey=cwkeys[e.addr].getWIF())}callback(data)})})};
/*----------------js/messagefeed.js---------------*/
function MessageFeed(){var self=this;self.lastMessageIndexReceived=ko.observable(0),self.failoverCurrentIndex=ko.observable(0),self.MESSAGE_QUEUE=[],self.OPEN_ORDERS=[],self.sellBTCOrdersCount=ko.computed(function(){return $.map(self.OPEN_ORDERS,function(item){return BTC==item["get_asset"]?item:null}).length},self),self.rpsresolveQueue=null,self.rpsresolveErrors={},self.openRpsKey=ko.computed(function(){return"openRps_"+WALLET.identifier()},self),self.setOpenRPS=function(source,hash,moveParam){var openRps=localStorage.getObject(self.openRpsKey())||{},cwk=WALLET.getAddressObj(source).KEY,moveParamStr=JSON.stringify(moveParam),cryptedMoveParam=cwk.encrypt(moveParamStr);openRps[source+"_"+hash]=cryptedMoveParam,localStorage.setObject(self.openRpsKey(),openRps)},self.getOpenRPS=function(source,hash){var openRps=localStorage.getObject(self.openRpsKey())||{},cryptedMoveParam=openRps[source+"_"+hash];if(cryptedMoveParam){var cwk=WALLET.getAddressObj(source).KEY,moveParamStr=cwk.decrypt(cryptedMoveParam);return JSON.parse(moveParamStr)}return null},self.deleteOpenRPS=function(source,hash){var openRps=localStorage.getObject(self.openRpsKey())||{};delete openRps[source+"_"+hash],localStorage.setObject(self.openRpsKey(),openRps)},self.onRpsMatch=function(rps_match,callback){var resolveRps=function(source,hash){if(source&&hash){var moveParam=self.getOpenRPS(source,hash);moveParam?self.resolvePendingRpsMatch(hash,moveParam,rps_match,callback):($.jqlog.debug("RANDOM LOST: "+rps_match.id),callback&&callback())}else $.jqlog.debug("NO NEED RESOLVE: "+rps_match.id)};WALLET.getAddressObj(rps_match.tx0_address)&&(rps_match["status"]=="pending"||rps_match["status"]=="pending and resolved")&&resolveRps(rps_match.tx0_address,rps_match.tx0_hash),WALLET.getAddressObj(rps_match.tx1_address)&&(rps_match["status"]=="pending"||rps_match["status"]=="resolved and pending")&&resolveRps(rps_match.tx1_address,rps_match.tx1_hash)},self.resolvePendingRpsMatch=function(tx_hash,moveParam,rps_match,callback){setTimeout(function(){moveParam.rps_match_id=rps_match.id,moveParam.move_random_hash&&delete moveParam.move_random_hash;var onSuccess=function(txHash,data,endpoint,addressType,armoryUTx){$.jqlog.debug("onSuccess"),self.deleteOpenRPS(moveParam.source,tx_hash),callback&&callback()},onError=function(){$.jqlog.debug("RESOLVE RPS ERROR. RETRY."),self.rpsresolveErrors[rps_match.id]=self.rpsresolveErrors[rps_match.id]||0,self.rpsresolveErrors[rps_match.id]+=1,self.rpsresolveErrors[rps_match.id]<TRANSACTION_MAX_RETRY&&(self.rpsresolveQueue=self.rpsresolveQueue.defer(self.onRpsMatch,rps_match))};WALLET.doTransaction(moveParam.source,"create_rpsresolve",moveParam,onSuccess,onError)},TRANSACTION_DELAY)},self.resolvePendingRpsMatches=function(){$.jqlog.debug("resolvePendingRpsMatches: ");var myAddresses=WALLET.getAddressesList(),params={filters:[{field:"tx0_address",op:"IN",value:myAddresses},{field:"tx1_address",op:"IN",value:myAddresses}],filterop:"OR",status:["pending","pending and resolved","resolved and pending"]},onReceivePendingRpsMatches=function(data){$.jqlog.debug(data),self.rpsresolveQueue=queue(1);for(var i in data)self.rpsresolveQueue=self.rpsresolveQueue.defer(self.onRpsMatch,data[i])};failoverAPI("get_rps_matches",params,onReceivePendingRpsMatches)},self.removeOrder=function(hash){for(var i in self.OPEN_ORDERS)self.OPEN_ORDERS[i]["tx_hash"]==hash&&(self.OPEN_ORDERS=self.OPEN_ORDERS.splice(i,1))},self.restoreOrder=function(){var addresses=WALLET.getAddressesList(),filters={field:"source",op:"IN",value:addresses};failoverAPI("get_orders",{filters:filters,show_expired:!1,filterop:"or"},function(data,endpoint){var openBTCOrdersToCancel=$.grep(data,function(e){return e["status"]=="open"&&(e["get_asset"]==BTC||e["give_asset"]==BTC)&&(e.get_remaining<=0||e.give_remaining<=0)&&!(e.get_remaining<=0&&e.give_remaining<=0)});for(i=0;i<openBTCOrdersToCancel.length;i++)$.jqlog.debug("Auto cancelling "+BTC+" order "+openBTCOrdersToCancel[i].tx_hash+" as the give_remaining and/or get_remaining <= 0 ..."),WALLET.doTransaction(openBTCOrdersToCancel[i].source,"create_cancel",{offer_hash:openBTCOrdersToCancel[i].tx_hash,source:openBTCOrdersToCancel[i].source,_type:"order",_tx_index:openBTCOrdersToCancel[i].tx_index});self.OPEN_ORDERS=$.grep(data,function(e){return e["status"]=="open"&&e.get_remaining>0&&e.give_remaining>0})})},self.tryNextSIOMessageFeed=function(){self.failoverCurrentIndex()+1==cwBaseURLs().length?self.failoverCurrentIndex(0):self.failoverCurrentIndex(self.failoverCurrentIndex()+1),$.jqlog.log("socket.io: Trying next server: "+cwBaseURLs()[self.failoverCurrentIndex()]),self.init(self.lastMessageIndexReceived())},self.init=function(last_message_index){self.lastMessageIndexReceived(last_message_index);var url=cwBaseURLs()[self.failoverCurrentIndex()];$.jqlog.log("socket.io(messages): Connecting to: "+url);var socket=io.connect(url,{"connect timeout":5e3,reconnect:!0,"reconnection delay":500,"reconnection limit":1e4,"max reconnection attempts":5,"force new connection":!0,"try multiple transports":!1,resource:USE_TESTNET?"_t_feed":"_feed"}),original_$emit=socket.$emit;socket.$emit=function(){var args=Array.prototype.slice.call(arguments);original_$emit.apply(socket,["*"].concat(args)),original_$emit.apply(socket,arguments)||original_$emit.apply(socket,["default"].concat(args))},socket.on("*",function(event,data){$.jqlog.log("socket.io message received: "+event+" - data:"+JSON.stringify(data));if(event=="connect")$.jqlog.log("socket.io(messages): Connected to server: "+url),socket.emit("subscribe");else if(event=="disconnect")$.jqlog.warn("socket.io(messages): The client has disconnected from server: "+url);else if(event=="connect_failed")$.jqlog.warn("socket.io(messages): Connection to server failed: "+url),socket.disconnect(),self.tryNextSIOMessageFeed();else if(event=="reconnect_failed")$.jqlog.warn("socket.io(messages): Reconnect to the server failed: "+url),socket.disconnect(),self.tryNextSIOMessageFeed();else if(event=="error")$.jqlog.warn("socket.io(messages): Received an error: "+url);else if(!(["connecting","connect_error","connect_timeout","reconnect","reconnecting","reconnect_error"].indexOf(event)>=0)){assert(data._category!==undefined&&event==data["_category"],"Message feed message lacks category field!");var txHash=self.getTxHash(data);self.MESSAGE_QUEUE.push([txHash,event,data])}}),self.checkMessageQueue()},self.getTxHash=function(message){var txHash=message.event||message.tx_hash||message.tx0_hash+message.tx1_hash||null;return txHash||$.jqlog.warn("Cannot derive a txHash for IDX "+message._message_index+" (category: "+message._category+")"),txHash},self.checkMessageQueue=function(){var event=null,result=null;while(self.MESSAGE_QUEUE.length){event=self.MESSAGE_QUEUE[0],result=self.parseMessageWithFeedGapDetection(event[0],event[1],event[2]);if(result&&result.hasOwnProperty("done"))break;self.MESSAGE_QUEUE.shift()}result&&result.hasOwnProperty("done")?$.when(result).done(function(d){self.checkMessageQueue()}):setTimeout(function(){self.checkMessageQueue()},1e3)},self.parseMempoolTransaction=function(txHash,category,message){message.bindings=JSON.parse(message.bindings),message.bindings.mempool=!0;var displayTx=!1;WALLET.getAddressObj(message.bindings.source)||(category=="sends"||category=="btcpays"?WALLET.getAddressObj(message.bindings.destination)&&(displayTx=!0):category=="issuances"&&message.bindings.transfer?WALLET.getAddressObj(message.bindings.issuer)&&(message.bindings.transfer_destination=message.bindings.issuer,displayTx=!0):(category=="dividends"||category=="callbacks")&&WALLET.isAssetHolder(message.bindings.asset)&&(displayTx=!0)),displayTx&&WALLET.searchDivisibility(message.bindings.asset||BTC,function(divisibility){message.bindings.divisible=divisibility,message.bindings.tx_index=message._message_index,category=="dividends"?WALLET.searchDivisibility(message.bindings.dividend_asset,function(asset_divisibility){message.bindings.dividend_asset_divisible=asset_divisibility,PENDING_ACTION_FEED.add(txHash,category,message.bindings)}):PENDING_ACTION_FEED.add(txHash,category,message.bindings)})},self.parseMessageWithFeedGapDetection=function(txHash,category,message){if(!message||message.substring&&message.startswith("<html>"))return;assert(self.lastMessageIndexReceived(),"lastMessageIndexReceived is not defined!"),$.jqlog.info("feed:receive IDX="+message._message_index);if(message["_message_index"]=="mempool"){self.parseMempoolTransaction(txHash,category,message);return}if(message._message_index<=self.lastMessageIndexReceived()){$.jqlog.warn("Received message_index is <= lastMessageIndexReceived: "+JSON.stringify(message));return}if(message["_message_index"]==self.lastMessageIndexReceived()+1){self.handleMessage(txHash,category,message);return}$.jqlog.warn("feed:MESSAGE GAP DETECTED: our last msgidx = "+self.lastMessageIndexReceived()+" --  server sent msgidx = "+message._message_index),assert(message._message_index-self.lastMessageIndexReceived()<=30,"Way too many missing messages, IDX="+message._message_index+" (last idx: "+self.lastMessageIndexReceived()+")");var deferred=$.Deferred(),missingMessageIndexes=[],missingMessageQueueEntries=[];for(var i=self.lastMessageIndexReceived()+1;i<message._message_index;i++)missingMessageIndexes.push(i);return failoverAPI("get_messagefeed_messages_by_index",{message_indexes:missingMessageIndexes},function(missingMessageData,endpoint){var missingTxHash=null;for(var i=0;i<missingMessageData.length;i++)missingTxHash=self.getTxHash(missingMessageData[i]),assert(missingMessageData[i]["_message_index"]==missingMessageIndexes[i],"Message feed resync list oddity...?"),$.jqlog.info("feed:receiveForGap IDX="+missingMessageData[i]._message_index),missingMessageQueueEntries.push([missingTxHash,missingMessageData[i]._category,missingMessageData[i]]);Array.prototype.splice.apply(self.MESSAGE_QUEUE,[0,0].concat(missingMessageQueueEntries)),deferred.resolve()}),deferred},self.handleMessage=function(txHash,category,message){assert(self.lastMessageIndexReceived()+1==message["_message_index"],"Message feed resync counter increment oddity...?"),$.jqlog.info("feed:PROCESS MESSAGE="+category+", IDX="+message._message_index+" (last idx: "+self.lastMessageIndexReceived()+"), TX_HASH="+txHash+", CONTENTS="+JSON.stringify(message)),self.lastMessageIndexReceived(self.lastMessageIndexReceived()+1);if(message["_command"]=="reorg"){self.lastMessageIndexReceived(message._last_message_index),$.jqlog.warn("feed:Blockchain reorganization at block "+message.block_index+"; last message idx reset to "+self.lastMessageIndexReceived()),setTimeout(function(){WALLET.refreshCounterpartyBalances(WALLET.getAddressesList(),checkURL)},randomIntFromInterval(1,5)*1e3);return}message.block_index&&WALLET.networkBlockHeight(message.block_index);if(message["_command"]!="insert"&&category!="orders"&&category!="bets"&&category!="rps_matches")return;if(message._status&&_.startsWith(message._status,"invalid")&&WALLET.getAddressObj(message.source)){var actionText=PendingActionViewModel.calcText(category,message);bootbox.alert("<b class='errorColor'>Network processing of the following action failed:</b><br/><br/>"+actionText+"<br/><br/><b>Reason:</b> "+message._status)}window.hasOwnProperty("STATS_TXN_HISTORY")&&window.STATS_TXN_HISTORY.addMessage(message),PENDING_ACTION_FEED.remove(txHash,category);if(_.startsWith(message._status,"invalid"))return;if(message["_status"]=="expired"&&category!="rps_matches"){assert(category=="orders"||category=="bets","Got an 'expired' message for a category of: "+category);return}NOTIFICATION_FEED.add(category,message);if(category!="balances")if(category=="credits"||category=="debits"){if(WALLET.getAddressObj(message.address))if(message["_balance"]==0&&message["asset"]!=BTC&&message["asset"]!=XCP){assert(category=="debits");var addressObj=WALLET.getAddressObj(message.address),assetObj=addressObj.getAssetObj(message.asset);assetObj.isMine()?WALLET.updateBalance(message.address,message.asset,message._balance):addressObj.assets.remove(assetObj)}else WALLET.updateBalance(message.address,message.asset,message._balance)}else if(category!="broadcasts")if(category=="btcpays")WAITING_BTCPAY_FEED.remove(message.order_match_id);else if(category!="burns")if(category=="cancels")WALLET.getAddressObj(message.source)&&self.removeOrder(message.offer_hash);else if(category!="callbacks"&&category!="dividends")if(category=="issuances"){var addressesWithAsset=WALLET.getAddressesWithAsset(message.asset);for(var i=0;i<addressesWithAsset.length;i++)WALLET.getAddressObj(addressesWithAsset[i]).addOrUpdateAsset(message.asset,message,null);WALLET.getAddressObj(message.issuer)&&addressesWithAsset.length&&addressesWithAsset.indexOf(message["issuer"])==-1&&failoverAPI("get_asset_info",{assets:[message.asset]},function(assetsInfo,endpoint){WALLET.getAddressObj(message.issuer).addOrUpdateAsset(message.asset,assetsInfo[0],null)})}else if(category!="sends")if(category=="orders"){if(message._btc_below_dust_limit)return;var match=ko.utils.arrayFirst(self.OPEN_ORDERS,function(item){return item["tx_hash"]==message["tx_hash"]});match?message["_status"]!="open"?self.removeOrder(message.tx_hash):(match["get_asset"]==BTC||match["give_asset"]==BTC)&&(match.give_remaining<=0||match.get_remaining<=0)&&!(match.give_remaining<=0&&match.get_remaining<=0)&&($.jqlog.debug("Auto cancelling "+BTC+" order "+match.tx_hash+" as the give_remaining xor get_remaining <= 0 ..."),WALLET.doTransaction(match.source,"create_cancel",{offer_hash:match.tx_hash,source:match.source,_type:"order",_tx_index:match.tx_index})):WALLET.getAddressObj(message.source)&&self.OPEN_ORDERS.push(message)}else if(category=="order_matches"){if(message._btc_below_dust_limit)return;if(WALLET.getAddressObj(message.tx0_address)&&message["forward_asset"]==BTC&&message["_status"]=="pending"||WALLET.getAddressObj(message.tx1_address)&&message["backward_asset"]==BTC&&message["_status"]=="pending"){var btcPayData=WaitingBTCPayFeedViewModel.makeBTCPayData(message);btcPayData.btcQuantityRaw>=MULTISIG_DUST_SIZE?UPCOMING_BTCPAY_FEED.add(btcPayData):$.jqlog.debug("dust order_matches "+btcPayData.orderMatchID+" : "+btcPayData.btcQuantityRaw)}else(WALLET.getAddressObj(message.tx1_address)&&message["forward_asset"]==BTC&&message["_status"]=="pending"||WALLET.getAddressObj(message.tx0_address)&&message["backward_asset"]==BTC&&message["_status"]=="pending")&&PENDING_ACTION_FEED.add(txHash,category,message)}else category=="order_expirations"?(self.removeOrder(message.order_hash),WAITING_BTCPAY_FEED.remove(message.order_hash)):category=="order_match_expirations"?WAITING_BTCPAY_FEED.remove(message.order_match_id):category!="bets"&&category!="bet_matches"&&category!="bet_expirations"&&category!="bet_match_expirations"&&category!="rps"&&(category=="rps_matches"?self.onRpsMatch(message):category!="rpsresolves"&&category!="rps_expirations"&&category!="rps_match_expirations"&&$.jqlog.error("Unknown message category: "+category));if(["rps","rps_matches","rpsresolves","rps_expirations","rps_match_expirations"].indexOf(category)!=-1)try{RPS.updateOpenGames()}catch(err){$.jqlog.debug(err.message)}}};
/*----------------js/components/wallet.js---------------*/
function WalletViewModel(){var self=this;self.BITCOIN_WALLET=null,self.autoRefreshBTCBalances=!0,self.identifier=ko.observable(null),self.networkBlockHeight=ko.observable(null),self.addresses=ko.observableArray(),self.isNew=ko.observable(!1),self.isSellingBTC=ko.observable(!1),self.isOldWallet=ko.observable(!1),self.networkBlockHeight.subscribe(function(newBlockIndex){try{CURRENT_PAGE_URL=="pages/exchange.html"&&EXCHANGE.refresh()}catch(e){}}),self.addAddress=function(type,address,armoryPubKey){assert(["normal","watch","armory"].indexOf(type)!=-1),assert(type=="normal"&&!address||address),assert(type=="armory"&&armoryPubKey||!armoryPubKey);if(type=="normal"){var i=self.addresses().length,key=self.BITCOIN_WALLET.getAddressKey(i),address=key.getAddress();assert(!self.getAddressObj(address),"Cannot addAddress: address already exists in wallet!");var addressHash=hashToB64(address),label=PREFERENCES.address_aliases[addressHash]||"My Address #"+(i+1);self.addresses.push(new AddressViewModel(type,key,address,label)),$.jqlog.debug("Wallet address added: "+address+" -- hash: "+addressHash+" -- label: "+label+" -- index: "+i)}else{assert(!self.getAddressObj(address),"Cannot addAddress: watch/armory address already exists in wallet!");var addressHash=hashToB64(address),label=PREFERENCES.address_aliases[addressHash]||"UNKNOWN LABEL";self.addresses.push(new AddressViewModel(type,null,address,label,armoryPubKey)),$.jqlog.debug("Watch-only or armory wallet address added: "+address+" -- hash: "+addressHash+" -- label: "+label+" -- armoryPubKey: "+armoryPubKey)}return address},self.getAddressesList=function(withLabel){typeof withLabel=="undefined"&&(withLabel=!1);var addresses=[];return ko.utils.arrayForEach(self.addresses(),function(address){withLabel?addresses.push([address.ADDRESS,address.label(),address.getXCPBalance(),address.PUBKEY]):addresses.push(address.ADDRESS)}),addresses},self.getBiggestXCPBalanceAddress=function(){var maxAmount=0,maxAddress=null;return ko.utils.arrayForEach(self.addresses(),function(address){var xcpBalance=address.getXCPBalance();xcpBalance>maxAmount&&(maxAmount=xcpBalance,maxAddress=address)}),maxAddress},self.getAddressObj=function(address){return ko.utils.arrayFirst(self.addresses(),function(a){return a.ADDRESS==address})},self.getBalance=function(address,asset,normalized){typeof normalized=="undefined"&&(normalized=!0);var addressObj=self.getAddressObj(address);assert(addressObj);var assetObj=addressObj.getAssetObj(asset);if(!assetObj)return 0;if(asset!=BTC)return normalized?assetObj.normalizedBalance():assetObj.rawBalance();var bal=assetObj.normalizedBalance()+assetObj.unconfirmedBalance();return normalized?bal:denormalizeQuantity(bal)},self.getPubkey=function(address){var addressObj=self.getAddressObj(address);return assert(addressObj),addressObj.PUBKEY},self.updateBalance=function(address,asset,rawBalance,unconfirmedRawBal){var addressObj=self.getAddressObj(address);assert(addressObj);var assetObj=addressObj.getAssetObj(asset);return assetObj?(assetObj.rawBalance(rawBalance),asset==BTC&&unconfirmedRawBal?(assetObj.unconfirmedBalance(normalizeQuantity(unconfirmedRawBal)),assetObj.balanceChangePending(!0)):asset==BTC&&(assetObj.unconfirmedBalance(0),assetObj.balanceChangePending(!1))):(assert(asset!=XCP&&asset!=BTC,BTC+" or "+XCP+" not present in the address?"),failoverAPI("get_asset_info",{assets:[asset]},function(assetsInfo,endpoint){addressObj.addOrUpdateAsset(asset,assetsInfo[0],rawBalance)})),!0},self.getAddressesWithAsset=function(asset){var addresses=self.getAddressesList(),addressesWithAsset=[],addressObj=null,assetObj=null;for(var i=0;i<addresses.length;i++){addressObj=self.getAddressObj(addresses[i]),assetObj=addressObj.getAssetObj(asset);if(!assetObj)continue;addressesWithAsset.push(assetObj.ADDRESS)}return addressesWithAsset},self.getTotalBalance=function(asset,normalized){typeof normalized=="undefined"&&(normalized=!0);var rawBalance=0,divisible=null,addressObj=null,assetObj=null,i=null,j=null;for(i=0;i<self.addresses().length;i++){addressObj=self.addresses()[i];for(j=0;j<addressObj.assets().length;j++){assetObj=addressObj.assets()[j];if(assetObj.ASSET!=asset)continue;rawBalance+=assetObj.rawBalance(),divisible===null&&(divisible=assetObj.DIVISIBLE)}}return normalized?normalizeQuantity(rawBalance,divisible):rawBalance},self.getAssetsInWallet=function(){var assets=[],addressObj=null,assetObj=null,i=null,j=null;for(i=0;i<self.addresses().length;i++){addressObj=self.addresses()[i];for(j=0;j<addressObj.assets().length;j++)assetObj=addressObj.assets()[j],assets.push(assetObj.ASSET)}return _.uniq(assets)},self.isAssetHolder=function(asset){var addressObj=null,assetObj=null,i=null,j=null;for(i=0;i<self.addresses().length;i++){addressObj=self.addresses()[i];for(j=0;j<addressObj.assets().length;j++){assetObj=addressObj.assets()[j];if(assetObj.ASSET==asset)return!0}}return!1},self.searchDivisibility=function(asset,callback){if(asset==BTC||asset==XCP){callback(!0);return}var divisible=-1,addressObj=null,assetObj=null,i=null,j=null;for(i=0;i<self.addresses().length;i++){addressObj=self.addresses()[i];for(j=0;j<addressObj.assets().length;j++){assetObj=addressObj.assets()[j];if(assetObj.ASSET==asset){callback(assetObj.DIVISIBLE);return}}}divisible==-1&&failoverAPI("get_asset_info",{assets:[asset]},function(assetsInfo,endpoint){callback(assetsInfo[0].divisible);return})},self.getAssetsOwned=function(){var assets=[],addressObj=null,assetObj=null,i=null,j=null;for(i=0;i<self.addresses().length;i++){addressObj=self.addresses()[i];for(j=0;j<addressObj.assets().length;j++)assetObj=addressObj.assets()[j],assetObj.isMine()&&assets.push(assetObj.ASSET)}return _.uniq(assets)},self.refreshCounterpartyBalances=function(addresses,onSuccess){failoverAPI("get_normalized_balances",{addresses:addresses},function(balancesData,endpoint){$.jqlog.debug("Got initial balances: "+JSON.stringify(balancesData));if(!balancesData.length)return onSuccess();var i=null,j=null,numBalProcessed=0,assets=[];for(i=0;i<balancesData.length;i++)assets.indexOf(balancesData[i]["asset"])==-1&&assets.push(balancesData[i].asset);getAssetInfo(assets).then(function(assetsInfo){for(i=0;i<assetsInfo.length;i++)for(j=0;j<balancesData.length;j++){if(balancesData[j]["asset"]!=assetsInfo[i]["asset"])continue;WALLET.getAddressObj(balancesData[j].address).addOrUpdateAsset(assetsInfo[i].asset,assetsInfo[i],balancesData[j].quantity),numBalProcessed+=1;if(numBalProcessed==balancesData.length)return onSuccess()}})})},self.refreshBTCBalances=function(isRecurring){typeof isRecurring=="undefined"&&(isRecurring=!1);var addresses=self.getAddressesList(),completedAddresses=[],addressObj=null,pendingActionsHasBTCSend=ko.utils.arrayFirst(PENDING_ACTION_FEED.entries(),function(item){return item.CATEGORY=="sends"&&item.DATA["asset"]==BTC});self.retriveBTCAddrsInfo(addresses,function(data){data.length>=1&&self.networkBlockHeight(data[0].blockHeight);for(var i=0;i<data.length;i++){self.updateBalance(data[i].addr,BTC,data[i].confirmedRawBal,data[i].unconfirmedRawBal),addressObj=self.getAddressObj(data[i].addr),assert(addressObj,"Cannot find address in wallet for refreshing BTC balances!");if(data[i].confirmedRawBal&&!addressObj.IS_WATCH_ONLY){addressObj.numPrimedTxouts(data[i].numPrimedTxouts),addressObj.numPrimedTxoutsIncl0Confirms(data[i].numPrimedTxoutsIncl0Confirms),$.jqlog.debug("refreshBTCBalances: Address "+data[i].addr+" -- confirmed bal = "+data[i].confirmedRawBal+"; unconfirmed bal = "+data[i].unconfirmedRawBal+"; numPrimedTxouts = "+data[i].numPrimedTxouts+"; numPrimedTxoutsIncl0Confirms = "+data[i].numPrimedTxoutsIncl0Confirms);if(pendingActionsHasBTCSend)for(var j=0;j<data[i].lastTxns.length;j++)PENDING_ACTION_FEED.remove(data[i].lastTxns[j],"sends",!0)}else addressObj.numPrimedTxouts(0),addressObj.numPrimedTxoutsIncl0Confirms(0)}isRecurring&&self.autoRefreshBTCBalances&&setTimeout(function(){self.autoRefreshBTCBalances&&self.refreshBTCBalances(!0)},3e5)},function(jqXHR,textStatus,errorThrown){var addressObj=null;for(var i=0;i<addresses.length;i++)self.updateBalance(addresses[i],BTC,null,null),addressObj=self.getAddressObj(addresses[i]),addressObj.numPrimedTxouts(null),addressObj.numPrimedTxoutsIncl0Confirms(null);bootbox.alert("Got an error when trying to sync "+BTC+" balances: "+textStatus),isRecurring&&self.autoRefreshBTCBalances&&setTimeout(function(){self.autoRefreshBTCBalances&&self.refreshBTCBalances(!0)},3e5)})},self.removeKeys=function(){ko.utils.arrayForEach(this.addresses(),function(a){a.doBTCBalanceRefresh=!1}),self.addresses([])},self.broadcastSignedTx=function(signedTxHex,onSuccess,onError){if(signedTxHex==0)return bootbox.alert("Client-side transaction validation FAILED. Transaction will be aborted and NOT broadcast. Please contact the "+XCP_NAME+" development team"),!1;$.jqlog.debug("RAW SIGNED HEX: "+signedTxHex),failoverAPI("broadcast_tx",{signed_tx_hex:signedTxHex},function(txHash,endpoint){return $.jqlog.log("broadcast:"+txHash+": endpoint="+endpoint),onSuccess(txHash,endpoint)},onError)},self.signAndBroadcastTxRaw=function(key,unsignedTxHex,onSuccess,onError,verifySourceAddr,verifyDestAddr){assert(verifySourceAddr,"Source address must be specified"),assert(verifyDestAddr,"Destination address must be specified"),$.jqlog.debug("RAW UNSIGNED HEX: "+unsignedTxHex);var signedHex=key.checkAndSignRawTransaction(unsignedTxHex,verifyDestAddr);return self.broadcastSignedTx(signedHex,onSuccess,onError)},self.signAndBroadcastTx=function(address,unsignedTxHex,onSuccess,onError,verifyDestAddr){var key=WALLET.getAddressObj(address).KEY;return self.signAndBroadcastTxRaw(key,unsignedTxHex,onSuccess,onError,address,verifyDestAddr)},self.retrieveBTCBalance=function(address,onSuccess,onError){failoverAPI("get_chain_address_info",{addresses:[address],with_uxtos:!1,with_last_txn_hashes:0},function(data,endpoint){return onSuccess(parseInt(data[0].info.balanceSat||0),parseInt(data[0].info.unconfirmedBalanceSat||0))},onError||defaultErrorHandler)},self.retriveBTCAddrsInfo=function(addresses,onSuccess,onError,minConfirmations){typeof minConfirmations=="undefined"&&(minConfirmations=1),typeof onError=="undefined"&&(onError=function(jqXHR,textStatus,errorThrown){return defaultErrorHandler(jqXHR,textStatus,errorThrown)}),assert(onSuccess,"onSuccess callback must be defined"),failoverAPI("get_chain_address_info",{addresses:addresses,with_uxtos:!0,with_last_txn_hashes:5,with_block_height:!0},function(data,endpoint){var numSuitableUnspentTxouts=null,numPrimedTxoutsIncl0Confirms=null,totalBalance=null,i=null,j=null,results=[];for(i=0;i<data.length;i++){numSuitableUnspentTxouts=0,numPrimedTxoutsIncl0Confirms=0,totalBalance=0;for(j=0;j<data[i].uxtos.length;j++)denormalizeQuantity(data[i].uxtos[j].amount)>=MIN_PRIME_BALANCE&&(numPrimedTxoutsIncl0Confirms++,data[i].uxtos[j].confirmations>=minConfirmations&&numSuitableUnspentTxouts++),totalBalance+=denormalizeQuantity(data[i].uxtos[j].amount);results.push({addr:data[i].addr,blockHeight:data[i].block_height,confirmedRawBal:parseInt(data[i].info.balanceSat||0),unconfirmedRawBal:parseInt(data[i].info.unconfirmedBalanceSat||0),numPrimedTxouts:Math.min(numSuitableUnspentTxouts,Math.floor(totalBalance/MIN_PRIME_BALANCE)),numPrimedTxoutsIncl0Confirms:Math.min(numPrimedTxoutsIncl0Confirms,Math.floor(totalBalance/MIN_PRIME_BALANCE)),lastTxns:data[i].last_txns,rawUtxoData:data[i].uxtos})}return onSuccess(results)},function(jqXHR,textStatus,errorThrown){return onError(jqXHR,textStatus,errorThrown)})},self.canDoTransaction=function(address){var addressObj=self.getAddressObj(address);return assert(!addressObj.IS_WATCH_ONLY,"Cannot perform this action on a watch only address!"),self.getBalance(address,BTC,!1)<MIN_PRIME_BALANCE?(bootbox.alert("Cannot do this action as you have insufficient <b class='notoAssetColor'>"+BTC+"</b> at this address."+"Due to "+BTC_NAME+" fees, each "+XCP_NAME+" action requires"+" approximately <b class='notoQuantityColor'>"+normalizeQuantity(MIN_PRIME_BALANCE)+"</b> <b class='notoAssetColor'>"+BTC+"</b> to perform.<br/><br/>"+"Please deposit the necessary <b class='notoAssetColor'>"+BTC+"</b> into <b class='notoAddrColor'>"+getAddressLabel(address)+"</b> and try again."),!1):!0},self.doTransaction=function(address,action,data,onSuccess,onError){assert(["sign_tx","broadcast_tx","convert_armory_signedtx_to_raw_hex"].indexOf(action)===-1,"Specified action not supported through this function. please use appropriate primatives");var addressObj=WALLET.getAddressObj(address);assert(!addressObj.IS_WATCH_ONLY),assert(data.encoding===undefined),assert(data.pubkey===undefined),data.encoding="multisig",data.pubkey=addressObj.PUBKEY,ALLOW_UNCONFIRMED_INPUTS&&supportUnconfirmedChangeParam(action)&&(data.allow_unconfirmed_inputs=!0);var extra1=null,extra2=null;action=="create_order"?(extra1=data._give_divisible,delete data._give_divisible,extra2=data._get_divisible,delete data._get_divisible):action=="create_cancel"?(extra1=data._type,delete data._type,extra2=data._tx_index,delete data._tx_index):action=="create_send"&&(extra1=data._divisible,delete data._divisible);var verifyDestAddr=data.destination||data.transfer_destination||data.feed_address||data.destBtcPay||data.source;delete data.destBtcPay,action=="create_burn"?verifyDestAddr=UNSPENDABLE:action=="create_dividend"&&data["dividend_asset"]==BTC&&(verifyDestAddr=data._btc_dividend_dests,delete data._btc_dividend_dests),multiAPIConsensus(action,data,function(unsignedTxHex,numTotalEndpoints,numConsensusEndpoints){$.jqlog.debug("TXN CREATED. numTotalEndpoints="+numTotalEndpoints+", numConsensusEndpoints="+numConsensusEndpoints+", RAW HEX="+unsignedTxHex);if(addressObj.IS_ARMORY_OFFLINE){multiAPIConsensus("create_armory_utx",{unsigned_tx_hex:unsignedTxHex,public_key_hex:addressObj.PUBKEY},function(asciiUTx,numTotalEndpoints,numConsensusEndpoints){return $.jqlog.debug("ARMORY UTX GENERATED: "+asciiUTx),onSuccess?onSuccess(null,data,null,"armory",asciiUTx):null});return}WALLET.signAndBroadcastTx(address,unsignedTxHex,function(txHash,endpoint){var category=action.replace("create_","")+"s";return category=="rpss"&&(category="rps"),data.source===undefined&&(data.source=address),action=="create_order"?(data._give_divisible=extra1,data._get_divisible=extra2):action=="create_cancel"?(data._type=extra1,data._tx_index=extra2):action=="create_send"&&(data._divisible=extra1),PENDING_ACTION_FEED.add(txHash,category,data),onSuccess?onSuccess(txHash,data,endpoint,"normal",null):null},onError,verifyDestAddr)})},self.showTransactionCompleteDialog=function(text,armoryText,armoryUTx){armoryUTx?bootbox.alert((armoryText||text)+"<br/><br/>To complete the transaction, please copy over and sign the text below on your"+" offline Armory system, then bring back to "+XCP_NAME+" to broadcast:</br>"+'<textarea class="form-control armoryUTxTextarea" rows="20">'+armoryUTx+"</textarea>"):bootbox.alert(text)},self.storePreferences=function(callback,for_login){var params={wallet_id:WALLET.identifier(),preferences:PREFERENCES,network:USE_TESTNET?"testnet":"mainnet",referer:ORIG_REFERER};for_login&&(params.for_login=!0),multiAPI("store_preferences",params,callback);var now=Math.round((new Date).getTime()/1e3);localStorage.setObject(WALLET.identifier()+"_preferences",{last_updated:now,preferences:PREFERENCES})}};
/*----------------js/components/wallet_options.js---------------*/
function WalletOptionsModalViewModel(){var self=this;self.shown=ko.observable(!1),self.availableThemes=ko.observableArray([{id:"ultraLight",name:"Ultra Light",styleName:"smart-style-2"},{id:"simpleGrey",name:"Simple Grey",styleName:"smart-style-0"},{id:"darkElegance",name:"Dark Elegance",styleName:"smart-style-1"},{id:"googleSkin",name:"Google Skin",styleName:"smart-style-3"}]),self.availableLangs=ko.observableArray([{id:"en-us",name:"English"}]),self.autoBTCPayEnabled=ko.observable(null),self.selectedTheme=ko.observable(null),self.selectedLang=ko.observable(null),self.ORIG_PREFERENCES_JSON=null,self.infoTableShown=ko.observable(!1),self.myIPAddr=ko.observable(""),self.myCookie=ko.observable(""),self.myCountry=ko.observable("");var pctValidator={required:!0,isValidPositiveQuantityOrZero:self,max:100};self.minBTCFeeProvidedPct=ko.observable(FEE_FRACTION_DEFAULT_FILTER).extend(pctValidator),self.maxBTCFeeRequiredPct=ko.observable(FEE_FRACTION_DEFAULT_FILTER).extend(pctValidator),self.defaultBTCFeeProvidedPct=ko.observable(FEE_FRACTION_PROVIDED_DEFAULT_PCT).extend(pctValidator),self.defaultBTCFeeRequiredPct=ko.observable(FEE_FRACTION_REQUIRED_DEFAULT_PCT).extend(pctValidator),self.showAdvancedOptions=ko.observable(!1),self.urlPassword=ko.observable(""),self.walletUrl=ko.computed(function(){if(self.urlPassword().length>0&&WALLET.BITCOIN_WALLET)return WALLET.BITCOIN_WALLET.getQuickUrl(self.urlPassword())}),self.dispMyCookiePresent=ko.computed(function(){return self.myCookie()?"Present":"None"},self),self.dispCWURLS=ko.computed(function(){return cwURLs()?cwURLs().join(", "):"UNKNOWN"},self),self.autoBTCPayEnabled.subscribeChanged(function(newVal,prevVal){assert(newVal===!0||newVal===!1),PREFERENCES.auto_btcpay=newVal}),self.selectedTheme.subscribeChanged(function(newSelection,prevSelection){newSelection=ko.utils.arrayFirst(self.availableThemes(),function(item){return newSelection===item.id}),prevSelection=prevSelection?ko.utils.arrayFirst(self.availableThemes(),function(item){return prevSelection===item.id}):self.availableThemes()[0],$.jqlog.debug("Changing theme from "+prevSelection.name+" to "+newSelection.name),$("body").removeClass(prevSelection.styleName),$("body").addClass(newSelection.styleName),PREFERENCES["selected_theme"]!=newSelection["id"]&&(PREFERENCES.selected_theme=newSelection.id)}),self.selectedLang.subscribe(function(newSelection){newSelection=newSelection?ko.utils.arrayFirst(self.availableLangs(),function(item){return newSelection===item.id}):self.availableLangs()[0],$.jqlog.debug("Changing lang to "+newSelection.name),PREFERENCES["selected_lang"]!=newSelection["id"]&&(PREFERENCES.selected_lang=newSelection.id)}),self.show=function(resetForm){document.getElementById("urlPassword").autocomplete="off",self.urlPassword(""),typeof resetForm=="undefined"&&(resetForm=!0),self.ORIG_PREFERENCES_JSON=JSON.stringify(PREFERENCES),self.autoBTCPayEnabled(PREFERENCES.auto_btcpay),self.selectedTheme(PREFERENCES.selected_theme),self.selectedLang(PREFERENCES.selected_lang),$("#themeSelector").select2("val",self.selectedTheme()),$("#langSelector").select2("val",self.selectedLang()),self.getReflectedHostInfo(),self.shown(!0)},self.getReflectedHostInfo=function(){failoverAPI("get_reflected_host_info",{},function(data,endpoint){$.jqlog.debug(data),self.myIPAddr(data.ip),self.myCookie(data.cookie),self.myCountry(data.country)})},self.showInfoTable=function(){self.infoTableShown(!0)},self.hide=function(){self.ORIG_PREFERENCES_JSON!=JSON.stringify(PREFERENCES)&&WALLET.storePreferences(),self.shown(!1)}};
/*----------------js/components/address.js---------------*/
function AddressViewModel(type,key,address,initialLabel,armoryPubKey){assert(["normal","watch","armory"].indexOf(type)!=-1),assert(type=="normal"&&key||type=="watch"&&!key||type=="armory"&&!key),assert(type=="armory"&&armoryPubKey||!armoryPubKey);var self=this;self.KEY=key,self.TYPE=type,self.ADDRESS=address,self.PUBKEY=type=="armory"?armoryPubKey:key?key.getPub():"",self.FEATURE_DIVIDEND=disabledFeatures.indexOf("dividend")==-1,self.IS_NORMAL=type=="normal",self.IS_WATCH_ONLY=type=="watch",self.IS_ARMORY_OFFLINE=type=="armory",self.lastSort=ko.observable(""),self.lastSortDirection=ko.observable(""),self.label=ko.observable(initialLabel),self.numPrimedTxouts=ko.observable(null),self.numPrimedTxoutsIncl0Confirms=ko.observable(null),self.assets=ko.observableArray([new AssetViewModel({address:address,asset:BTC}),new AssetViewModel({address:address,asset:XCP})]),self.assetFilter=ko.observable(""),self.filteredAssets=ko.computed(function(){if(self.assetFilter()=="")return self.assets();if(self.assetFilter()=="base")return ko.utils.arrayFilter(self.assets(),function(asset){return asset.ASSET==BTC||asset.ASSET==XCP});if(self.assetFilter()=="mine")return ko.utils.arrayFilter(self.assets(),function(asset){return asset.isMine()});if(self.assetFilter()=="others")return ko.utils.arrayFilter(self.assets(),function(asset){return asset.isMine()==0})},self),self.getAssetObj=function(asset){return ko.utils.arrayFirst(self.assets(),function(a){return a.ASSET==asset})},self.getAssetsList=function(){var assets=[];return ko.utils.arrayForEach(self.assets(),function(asset){assets.push(asset.ASSET)}),assets},self.addOrUpdateAsset=function(asset,assetInfo,initialRawBalance){var match=ko.utils.arrayFirst(self.assets(),function(item){return item.ASSET===asset});if(asset==BTC||asset==XCP){assert(match),match.rawBalance(initialRawBalance);return}if(!match){$.jqlog.debug("Adding token "+asset+" to address "+self.ADDRESS+" with raw bal "+initialRawBalance+" (divisible: "+assetInfo.divisible+")");var assetProps={address:self.ADDRESS,asset:asset,divisible:assetInfo.divisible,owner:assetInfo.owner||assetInfo.issuer,locked:assetInfo.locked,rawBalance:initialRawBalance,rawSupply:assetInfo.supply||assetInfo.quantity,description:assetInfo.description,callable:assetInfo.callable,callDate:assetInfo.call_date,callPrice:assetInfo.call_price};self.assets.push(new AssetViewModel(assetProps)),setTimeout(function(){$("#address-wid-"+self.ADDRESS+" .dropdown-toggle").last().dropdown(),$("#address-wid-"+self.ADDRESS+" .asset-item:last-child .assetBtn").unbind("click"),$("#address-wid-"+self.ADDRESS+" .asset-item:last-child .assetBtn").click(function(event){var menu=$(this).parent().find("ul");menu.css("display")=="block"?menu.hide():menu.show(),menu.mouseleave(function(){menu.hide(),menu.unbind("mouseleave")})})},1e3)}else{if(initialRawBalance){match.rawBalance(initialRawBalance);return}assert(assetInfo.owner===undefined,"Logic should only be reached via messages feed data, not with get_asset_info data"),assetInfo["description"]!=match.description()?($.jqlog.debug("Updating token "+asset+" @ "+self.ADDRESS+" description to '"+assetInfo.description+"'"),match.description(assetInfo.description)):assetInfo.transfer?($.jqlog.debug("Token "+asset+" @ "+self.ADDRESS+" transferred to '"+assetInfo.issuer+"'"),match.owner(assetInfo.issuer),match.isMine()===!1&&match.rawBalance()==0&&self.assets.remove(match)):assetInfo.locked?($.jqlog.debug("Token "+asset+" @ "+self.ADDRESS+" locked"),match.locked(assetInfo.locked)):($.jqlog.debug("Updating token "+asset+" @ "+self.ADDRESS+" # issued units. Orig #: "+match.rawSupply()+", new #: "+assetInfo.quantity+", unconfirmed bal #: "+match.unconfirmedBalance()),match.rawSupply(assetInfo.quantity))}},self.removeAsset=function(asset){self.assets.remove(function(item){return item.ASSET==asset})},self.changeLabel=function(params){CHANGE_ADDRESS_LABEL_MODAL.show(self.ADDRESS,self.label())},self.showQRCode=function(){var qrcode=makeQRCode(self.ADDRESS);bootbox.alert("<center><h4>QR Code for <b>"+self.ADDRESS+"</b></h4><br/>"+qrcode+"</center>")},self.showPrivateKey=function(){DISPLAY_PRIVATE_KEY_MODAL.show(self.ADDRESS)},self.remove=function(){assert(self.TYPE!="normal","Only watch-only or armory addresses can be removed."),WALLET.addresses.remove(self),self.TYPE==="watch"?PREFERENCES.watch_only_addresses=_.without(PREFERENCES.watch_only_addresses,self.ADDRESS):(assert(self.TYPE==="armory"),PREFERENCES.armory_offline_addresses=_.filter(PREFERENCES.armory_offline_addresses,function(el){return el.address!==self.ADDRESS})),WALLET.storePreferences(function(){checkURL()})},self.signMessage=function(){SIGN_MESSAGE_MODAL.show(self.ADDRESS)},self.signTransaction=function(){SIGN_TRANSACTION_MODAL.show(self.ADDRESS)},self.armoryBroadcastTransaction=function(){assert(self.IS_ARMORY_OFFLINE),ARMORY_BROADCAST_TRANSACTION.show(self.ADDRESS)},self.createAsset=function(){if(!WALLET.canDoTransaction(self.ADDRESS))return!1;var xcpBalance=WALLET.getBalance(self.ADDRESS,XCP);if(xcpBalance<ASSET_CREATION_FEE_XCP)return bootbox.alert("You need at least <b class='notoAmountColor'>"+ASSET_CREATION_FEE_XCP+"</b> <b class='notoAssetColor'>"+XCP+"</b>"+" to create a token, however, your current balance is only"+" <b class='notoAmountColor'>"+xcpBalance+"</b> <b class='notoAssetColor'>"+XCP+"</b>."+"<br/><br/>Please deposit more <b class='notoAssetColor'>"+XCP+"</b> into this address and try again."),!1;CREATE_ASSET_MODAL.show(self.ADDRESS)},self.payDividend=function(){if(!WALLET.canDoTransaction(self.ADDRESS))return!1;PAY_DIVIDEND_MODAL.show(self)},self.broadcast=function(){if(!WALLET.canDoTransaction(self.ADDRESS))return!1;BROADCAST_MODAL.show(self,!0)},self.selectAddressText=function(){return selectText("address-text-"+self.ADDRESS)},self.sortAssetsByName=function(){var reverseSort=self.lastSort()=="sortAssetsByName"&&self.lastSortDirection()=="asc";reverseSort?self.assets.sort(function(left,right){return right.ASSET.localeCompare(left.ASSET)}):self.assets.sort(function(left,right){return left.ASSET.localeCompare(right.ASSET)}),self.lastSortDirection(self.lastSort()=="sortAssetsByName"&&self.lastSortDirection()=="asc"?"desc":"asc"),self.lastSort("sortAssetsByName")},self.sortAssetsByBalance=function(){var reverseSort=self.lastSort()=="sortAssetsByBalance"&&self.lastSortDirection()=="asc";reverseSort?self.assets.sort(function(left,right){return left.normalizedBalance()==right.normalizedBalance()?0:right.normalizedBalance()<left.normalizedBalance()?-1:1}):self.assets.sort(function(left,right){return left.normalizedBalance()==right.normalizedBalance()?0:left.normalizedBalance()<right.normalizedBalance()?-1:1}),self.lastSortDirection(self.lastSort()=="sortAssetsByBalance"&&self.lastSortDirection()=="asc"?"desc":"asc"),self.lastSort("sortAssetsByBalance")},self.showAllAssets=function(){self.assetFilter("")},self.showBaseAssetsOnly=function(){self.assetFilter("base")},self.showMyAssetsOnly=function(){self.assetFilter("mine")},self.showOthersAssetsOnly=function(){self.assetFilter("others")},self.getXCPBalance=function(){var xcpAsset=$.grep(self.assets(),function(value){return value.ASSET==XCP});return xcpAsset[0].normalizedBalance()}};
/*----------------js/components/asset.js---------------*/
function AssetViewModel(props){var self=this;self.ADDRESS=props.address,self.ASSET=props.asset,self.DIVISIBLE=props.divisible!==undefined?props.divisible:!0,self.owner=ko.observable(props.owner),self.locked=ko.observable(props.locked!==undefined?props.locked:!1),self.rawBalance=ko.observable(props.rawBalance||(self.ASSET==BTC?null:0)),self.rawSupply=ko.observable(props.rawSupply||0),self.SUPPLY=normalizeQuantity(self.rawSupply(),self.DIVISIBLE),self.holdersSupply=self.rawSupply()-self.rawBalance(),self.description=ko.observable(props.description||""),self.CALLABLE=props.callable!==undefined?props.callable:!1,self.CALLDATE=props.callDate||null,self.CALLPRICE=props.callPrice||null,self.balanceChangePending=ko.observable(!1),self.issuanceQtyChangePending=ko.observable(!1),self.isMine=ko.computed(function(){return self.ASSET==BTC||self.ASSET==XCP?null:self.owner()==self.ADDRESS},self),self.normalizedBalance=ko.computed(function(){return self.rawBalance()===null?null:normalizeQuantity(self.rawBalance(),self.DIVISIBLE)},self),self.normalizedTotalIssued=ko.computed(function(){return normalizeQuantity(self.rawSupply(),self.DIVISIBLE)},self),self.dispTotalIssued=ko.computed(function(){return smartFormat(self.normalizedTotalIssued())},self),self.dispCallDate=ko.computed(function(){return self.CALLDATE?moment(self.CALLDATE*1e3).format("MMM Do YYYY, h:mm:ss a"):null},self),self.unconfirmedBalance=ko.observable(0),self.unconfirmedBalance.subscribe(function(value){value==0&&self.balanceChangePending(!1)}),self.dispBalance=ko.computed(function(){var confirmed=self.normalizedBalance()===null?"??":smartFormat(self.normalizedBalance(),!0),unconfirmedBal=addFloat(self.normalizedBalance(),self.unconfirmedBalance()),unconfirmed=unconfirmedBal!=self.normalizedBalance()?' <span style="font-size:11px">('+smartFormat(unconfirmedBal,!0)+")</span>":"";return confirmed+unconfirmed},self),self.dispBalancePadding=ko.computed(function(){return self.locked()&&self.CALLABLE?"40px":self.locked()||self.CALLABLE?"20px":"0px"},self),self.send=function(){if(!self.rawBalance()){bootbox.alert("You have no available <b class='notoAssetColor'>"+self.ASSET+"</b>"+" at address <b class='notoAddrColor'>"+getAddressLabel(self.ADDRESS)+"</b> to send.");return}if(!WALLET.canDoTransaction(self.ADDRESS))return!1;SEND_MODAL.show(self.ADDRESS,self.ASSET,self.rawBalance(),self.DIVISIBLE)},self.showInfo=function(){SHOW_ASSET_INFO_MODAL.show(self)},self.testnetBurn=function(){if(!self.rawBalance()){bootbox.alert("You have no available <b class='notoAssetColor'>"+self.ASSET+"</b>"+" at address <b class='notoAddrColor'>"+getAddressLabel(self.ADDRESS)+"</b> to burn.");return}if(!WALLET.canDoTransaction(self.ADDRESS))return!1;TESTNET_BURN_MODAL.show(self.ADDRESS)},self.issueAdditional=function(){assert(self.isMine()&&!self.locked());if(!WALLET.canDoTransaction(self.ADDRESS))return!1;ISSUE_ADDITIONAL_ASSET_MODAL.show(self.ADDRESS,self.DIVISIBLE,self)},self.transfer=function(){assert(self.isMine());if(!WALLET.canDoTransaction(self.ADDRESS))return!1;TRANSFER_ASSET_MODAL.show(self.ADDRESS,self)},self.lock=function(){assert(self.isMine()&&!self.locked());if(!WALLET.canDoTransaction(self.ADDRESS))return!1;bootbox.dialog({message:"By locking your token, you will not be able to issue more units of it in the future.<br/><br/>         <b class='errorRed'>Please NOTE that this action is irreversable!</b>",title:"Are you sure?",buttons:{success:{label:"Cancel",className:"btn-default",callback:function(){}},danger:{label:"Lock Token",className:"btn-danger",callback:function(){WALLET.doTransaction(self.ADDRESS,"create_issuance",{source:self.ADDRESS,quantity:0,asset:self.ASSET,divisible:self.DIVISIBLE,description:"LOCK",callable_:self.CALLABLE,call_date:self.CALLDATE?self.CALLDATE:null,call_price:self.CALLPRICE?self.CALLPRICE:null,transfer_destination:null},function(txHash,data,endpoint,addressType,armoryUTx){var message="Your token "+(armoryUTx?"will be":"has been")+" locked. No more units of the token may be issued.";WALLET.showTransactionCompleteDialog(message+ACTION_PENDING_NOTICE,message,armoryUTx)})}}}})},self.changeDescription=function(){if(!WALLET.canDoTransaction(self.ADDRESS))return!1;CHANGE_ASSET_DESCRIPTION_MODAL.show(self.ADDRESS,self)},self.call=function(){return bootbox.alert("Token callbacks are temporarily disabled."),!1}};
/*----------------js/components/logon.js---------------*/
function LogonViewModel(){var self=this;self.enteredPassphrase=ko.observable(""),self.generatedPassphrase=ko.observable(""),self.walletGenProgressVal=ko.observable(0),self.passwordDecrypt=ko.observable(""),self.cryptedPassphraseUsed=ko.observable(CRYPTED_PASSPHRASE?!0:!1),self.cryptedPassphrase=ko.observable(CRYPTED_PASSPHRASE),self.USE_TESTNET=USE_TESTNET,self.IS_DEV=IS_DEV,self.sanitizedEnteredPassphrase=ko.computed(function(){return $.trim(self.enteredPassphrase().toLowerCase())},self),self.walletGenProgressWidth=ko.computed(function(){return self.walletGenProgressVal()+"%"},self),self.isPassphraseValid=ko.computed(function(){var words=self.sanitizedEnteredPassphrase().split(" ");if(words.length==12||words.length==13&&words[0]=="old"){words.length==13&&words.shift();var valid=!0;return words.forEach(function(word){Mnemonic.words.indexOf(word)==-1&&(valid=!1)}),valid}return!1},self),self.decryptEnteredPassphrase=function(){if(!self.cryptedPassphraseUsed()||!self.passwordDecrypt()||!self.cryptedPassphrase())return;try{var decryptedPassphrase=CWBitcore.decrypt(self.cryptedPassphrase(),self.passwordDecrypt());self.enteredPassphrase(decryptedPassphrase)}catch(e){$.jqlog.debug("error: "+e)}},self.cryptedPassphrase.subscribe(self.decryptEnteredPassphrase),self.passwordDecrypt.subscribe(self.decryptEnteredPassphrase),self.generatePassphrase=function(){var m=new Mnemonic(128),words=m.toWords();self.generatedPassphrase(words.join(" ")),selectText("generated")},self.showSecureKeyboard=function(){LOGON_PASSWORD_MODAL.show()},self.openWallet=function(){multiAPI("is_ready",{},function(data,endpoint){assert(data.caught_up,"Invalid is_ready result"),assert(USE_TESTNET==data["testnet"],"USE_TESTNET is "+USE_TESTNET+" from URL-based detection, but the server API disagrees!"),$.jqlog.log("Backend is ready. Testnet status: "+USE_TESTNET+". Last message feed index: "+data.last_message_index),assert(data.last_message_index>0),self.walletGenProgressVal(0),$("#newAccountInfoPane").animate({opacity:0}),$("#createNewAcctBtnPane").animate({opacity:0}),$("#extra-info").animate({opacity:0}),$("#disclaimer").animate({opacity:0});var hashBase=CryptoJS.SHA256(self.sanitizedEnteredPassphrase()+(USE_TESTNET?"_testnet":"")),hash=CryptoJS.SHA256(hashBase).toString(CryptoJS.enc.Base64);WALLET.identifier(hash),$.jqlog.log("My wallet ID: "+WALLET.identifier()),WALLET.networkBlockHeight(data.block_height),MESSAGE_FEED.init(data.last_message_index),USER_COUNTRY=data.country,$.jqlog.debug("USER_COUNTRY: "+USER_COUNTRY),multiAPI("is_wallet_online",{wallet_id:WALLET.identifier()},self.onIsWalletOnline)},function(jqXHR,textStatus,errorThrown,endpoint){var message=describeError(jqXHR,textStatus,errorThrown);bootbox.alert("No "+XCP_NAME+" servers are currently available. Please try again later. ERROR: "+message)})},self.onIsWalletOnline=function(isOnline,endpoint){if(isOnline){trackEvent("Login","Wallet","IsAlreadyOnline");var message="<b class='errorColor'>You appear to be logged into Dogeparty elsewhere.</b> It's not safe to be logged into the same wallet account from multiple devices at the same time. If you are sure that this is not the case, press Continue. Otherwise, please press Cancel, logout from your other device, and try again.";bootbox.dialog({title:"Confirm connection",message:message,buttons:{cancel:{label:"Cancel",className:"btn-danger",callback:function(){return bootbox.hideAll(),!1}},"continue":{label:"Continue",className:"btn-primary",callback:function(){multiAPINewest("get_preferences",{wallet_id:WALLET.identifier(),network:USE_TESTNET?"testnet":"mainnet",for_login:!0},"last_updated",self.onReceivedPreferences)}}}})}else multiAPINewest("get_preferences",{wallet_id:WALLET.identifier(),network:USE_TESTNET?"testnet":"mainnet",for_login:!0},"last_updated",self.onReceivedPreferences)},self.onReceivedPreferences=function(data){$.jqlog.debug("PREFERENCES:"),$.jqlog.debug(data),CHAT_FEED.init();var mustSavePreferencesToServer=!1,localPref=localStorage.getObject(WALLET.identifier()+"_preferences");if(data){assert(data&&data.hasOwnProperty("preferences"),"Invalid stored preferences"),PREFERENCES=data.preferences,localPref&&localPref.last_updated&&localPref.last_updated>data.last_updated&&(PREFERENCES=localPref.preferences);for(var prop in DEFAULT_PREFERENCES)DEFAULT_PREFERENCES.hasOwnProperty(prop)&&PREFERENCES[prop]===undefined&&($.jqlog.info("Providing default for preferences property: "+prop),PREFERENCES[prop]=DEFAULT_PREFERENCES[prop],mustSavePreferencesToServer=!0)}else $.jqlog.log("Stored preferences NOT found on server(s). Creating new..."),trackEvent("Login","NewWallet",USE_TESTNET?"Testnet":"Mainnet"),WALLET.isNew(!0),localPref&&localPref.preferences?PREFERENCES=localPref.preferences:PREFERENCES=DEFAULT_PREFERENCES,mustSavePreferencesToServer=!0;WALLET_OPTIONS_MODAL.selectedTheme(PREFERENCES.selected_theme),WALLET_OPTIONS_MODAL.selectedLang(PREFERENCES.selected_lang),self.displayLicenseIfNecessary(mustSavePreferencesToServer)},self.displayLicenseIfNecessary=function(mustSavePreferencesToServer){PREFERENCES.has_accepted_license?self.openWalletPt2(mustSavePreferencesToServer):LICENSE_MODAL.show(mustSavePreferencesToServer)},self.openWalletPt2=function(mustSavePreferencesToServer){WALLET.BITCOIN_WALLET=new CWHierarchicalKey(self.enteredPassphrase()),WALLET.isOldWallet(WALLET.BITCOIN_WALLET.useOldHierarchicalKey),setTimeout(function(){self.genAddress(mustSavePreferencesToServer)},1)},self.genAddress=function(mustSavePreferencesToServer){var i=WALLET.addresses().length,address=WALLET.addAddress("normal"),addressHash=hashToB64(address);PREFERENCES.address_aliases[addressHash]===undefined&&(mustSavePreferencesToServer=!0,PREFERENCES.address_aliases[addressHash]="My Address #"+(i+1));var progress=(i+1)*(100/PREFERENCES.num_addresses_used);self.walletGenProgressVal(progress),$.jqlog.debug("Progress: Address "+(i+1)+" of "+PREFERENCES.num_addresses_used+" ("+self.walletGenProgressVal()+"%) -- "+address);if(!(i+1<PREFERENCES.num_addresses_used))return self.openWalletPt3(mustSavePreferencesToServer);setTimeout(function(){self.genAddress(mustSavePreferencesToServer)},1)},self.updateBalances=function(onSuccess){WALLET.refreshBTCBalances(!0),WALLET.refreshCounterpartyBalances(WALLET.getAddressesList(),onSuccess)},self.openWalletPt3=function(mustSavePreferencesToServer){var i=null;for(i=0;i<PREFERENCES.armory_offline_addresses.length;i++)WALLET.addAddress("armory",PREFERENCES.armory_offline_addresses[i].address,PREFERENCES.armory_offline_addresses[i].pubkey_hex);for(i=0;i<PREFERENCES.watch_only_addresses.length;i++)WALLET.addAddress("watch",PREFERENCES.watch_only_addresses[i]);$("#logon").hide(),$("#header").show(),$("#left-panel").show(),$("#main").show(),mustSavePreferencesToServer&&($.jqlog.info("Preferences updated/generated during login. Updating on server(s)..."),WALLET.storePreferences(null,!0)),self.updateBalances(self.openWalletPt4),trackEvent("Login","Wallet","Size",PREFERENCES.num_addresses_used),trackEvent("Login","Network",USE_TESTNET?"Testnet":"Mainnet"),trackEvent("Login","Country",USER_COUNTRY||"UNKNOWN"),trackEvent("Login","Language",PREFERENCES.selected_lang),trackEvent("Login","Theme",PREFERENCES.selected_theme)},self.openWalletPt4=function(){PENDING_ACTION_FEED.restoreFromLocalStorage(function(){WAITING_BTCPAY_FEED.restore()}),MESSAGE_FEED.restoreOrder(),MESSAGE_FEED.resolvePendingRpsMatches(),$.jqlog.debug("Login complete. Directing to balances page..."),window.location.hash="pages/balances.html"}}function LicenseModalViewModel(){var self=this;self.shown=ko.observable(!1),self.show=function(){self.shown(!0),$.get("pages/license.html",function(data){$("#licenseAgreementText").val(data)})},self.hide=function(){self.shown(!1)},self.acceptTerms=function(){PREFERENCES.has_accepted_license=!0,self.shown(!1),LOGON_VIEW_MODEL.openWalletPt2(!0)}}ko.validation.rules.isValidPassphrasePart={validator:function(val,self){return Mnemonic.words.indexOf(val)!=-1},message:"Invalid phrase word."},ko.validation.registerExtenders();function LogonPasswordModalViewModel(){var self=this;self.shown=ko.observable(!1),self.pwPart01=ko.observable().extend({required:!0,isValidPassphrasePart:self}),self.pwPart02=ko.observable().extend({required:!0,isValidPassphrasePart:self}),self.pwPart03=ko.observable().extend({required:!0,isValidPassphrasePart:self}),self.pwPart04=ko.observable().extend({required:!0,isValidPassphrasePart:self}),self.pwPart05=ko.observable().extend({required:!0,isValidPassphrasePart:self}),self.pwPart06=ko.observable().extend({required:!0,isValidPassphrasePart:self}),self.pwPart07=ko.observable().extend({required:!0,isValidPassphrasePart:self}),self.pwPart08=ko.observable().extend({required:!0,isValidPassphrasePart:self}),self.pwPart09=ko.observable().extend({required:!0,isValidPassphrasePart:self}),self.pwPart10=ko.observable().extend({required:!0,isValidPassphrasePart:self}),self.pwPart11=ko.observable().extend({required:!0,isValidPassphrasePart:self}),self.pwPart12=ko.observable().extend({required:!0,isValidPassphrasePart:self}),self.validationModel=ko.validatedObservable({pwPart01:self.pwPart01,pwPart02:self.pwPart02,pwPart03:self.pwPart03,pwPart04:self.pwPart04,pwPart05:self.pwPart05,pwPart06:self.pwPart06,pwPart07:self.pwPart07,pwPart08:self.pwPart08,pwPart09:self.pwPart09,pwPart10:self.pwPart10,pwPart11:self.pwPart11,pwPart12:self.pwPart12}),self.dispFullPassphrase=ko.computed(function(){return[self.pwPart01(),self.pwPart02(),self.pwPart03(),self.pwPart04(),self.pwPart05(),self.pwPart06(),self.pwPart07(),self.pwPart08(),self.pwPart09(),self.pwPart10(),self.pwPart11(),self.pwPart12()].join(" ")},self),self.resetForm=function(){self.pwPart01(""),self.pwPart02(""),self.pwPart03(""),self.pwPart04(""),self.pwPart05(""),self.pwPart06(""),self.pwPart07(""),self.pwPart08(""),self.pwPart09(""),self.pwPart10(""),self.pwPart11(""),self.pwPart12(""),self.validationModel.errors.showAllMessages(!1)},self.submitForm=function(){if(!self.validationModel.isValid())return self.validationModel.errors.showAllMessages(),!1;$("#logonPassphaseModal form").submit()},self.show=function(resetForm){typeof resetForm=="undefined"&&(resetForm=!0),resetForm&&self.resetForm(),$("#logonPassphaseModal input").click(function(e){$(e.currentTarget).val("")}),$("#logonPassphaseModal input").keyboard({display:{bksp:"←",accept:"Accept"},layout:"custom",customLayout:{"default":["q w e r t y u i o p {bksp}","a s d f g h j k l"," z x c v b n m {accept}"]},autoAccept:!0,usePreview:!0,initialFocus:!1,restrictInput:!0,preventPaste:!0}).autocomplete({source:Mnemonic.words}).addAutocomplete(),$.ui.autocomplete.filter=function(array,term){var matcher=new RegExp("^"+$.ui.autocomplete.escapeRegex(term),"i");return $.grep(array,function(value){return matcher.test(value.label||value.value||value)})},self.shown(!0)},self.hide=function(){self.shown(!1)},self.doAction=function(){$("#password").val(self.dispFullPassphrase()),$("#password").change(),self.resetForm(),self.shown(!1),LOGON_VIEW_MODEL.openWallet()}};
/*----------------js/components/misc.js---------------*/
function SupportModalViewModel(){var self=this;self.shown=ko.observable(!1),self.type=ko.observable(null),self.show=function(type){assert(["general","balancesPage","exchangePage"].indexOf(type)!==-1,"Unknown support modal type"),self.type(type),self.shown(!0)},self.hide=function(){self.shown(!1)}}function CreateSupportCaseViewModel(){var self=this;self.shown=ko.observable(!1),self.name=ko.observable("").extend({required:!0,minLength:3,maxLength:75}),self.email=ko.observable("").extend({required:!0,email:!0}),self.problem=ko.observable("").extend({required:!0,minLength:20,maxLength:MAX_SUPPORT_CASE_PROBLEM_LEN}),self.includeScreenshot=ko.observable(!0),self.dispCharactersRemaining=ko.computed(function(){return!self.problem()||self.problem().length>MAX_SUPPORT_CASE_PROBLEM_LEN?"":" (<b>"+(MAX_SUPPORT_CASE_PROBLEM_LEN-self.problem().length)+"</b> characters remaining)"},self),self.validationModel=ko.validatedObservable({name:self.name,email:self.email,problem:self.problem}),self.resetForm=function(){self.name(""),self.email(""),self.problem(""),self.includeScreenshot(!0),self.validationModel.errors.showAllMessages(!1)},self.submitForm=function(){if(!self.validationModel.isValid())return self.validationModel.errors.showAllMessages(),!1;$("#createSupportCaseModal form").submit()},self.sendSupportCase=function(screenshotData){var caseInfo={name:self.name(),from_email:self.email(),problem:self.problem(),screenshot:screenshotData,addtl_info:JSON.stringify({currentBlockID:WALLET.networkBlockHeight(),currentMsgID:MESSAGE_FEED.lastMessageIndexReceived(),useTestnet:USE_TESTNET,devMode:IS_DEV,walletID:WALLET.identifier(),originURL:window.location.origin,multiAPIList:cwURLs()?cwURLs().join(", "):"UNKNOWN",failoverIdx:MESSAGE_FEED.failoverCurrentIndex(),browserEngine:$.layout.className,resolution:screen.width+"x"+screen.height,userAgent:navigator.userAgent})};failoverAPI("create_support_case",caseInfo,function(data,endpoint){bootbox.alert("Thank you, your information has been sent to our support team. You will receive further ticket information in your email."),trackEvent("Support","CaseCreated")})},self.doAction=function(){self.hide(),self.includeScreenshot()?html2canvas($("body").get(0),{logging:!0,onrendered:function(canvas){self.sendSupportCase(canvas.toDataURL("image/png"))}}):self.sendSupportCase(null)},self.show=function(resetForm){typeof resetForm=="undefined"&&(resetForm=!0),resetForm&&self.resetForm(),self.shown(!0),trackDialogShow("CreateSupportCase")},self.hide=function(){self.shown(!1)}};
/*----------------js/components/feed_notifications.js---------------*/
NOTIFIED_RPS_RESULT={};function NotificationViewModel(category,message){var self=this;self.CATEGORY=category,assert(category!="balances"&&category!="debits"&&category!="credits","Trying to notify on a category that we don't notify on: "+category),self.WHEN=(new Date).getTime(),self.ICON_CLASS=NotificationViewModel.calcIconClass(category),self.COLOR_CLASS=NotificationViewModel.calcColorClass(category),self.MESSAGE=message,self.MESSAGE_TEXT=NotificationViewModel.calcText(category,message)}NotificationViewModel.calcIconClass=function(category){return category=="user"?"fa-user":category=="alert"?"fa-exclamation":category=="security"?"fa-shield":ENTITY_ICONS[category]?ENTITY_ICONS[category]:"fa-question"},NotificationViewModel.calcColorClass=function(category){return category=="user"?"bg-color-lighten":category=="alert"?"bg-color-redLight":category=="security"?"bg-color-redLight":ENTITY_NOTO_COLORS[category]?ENTITY_NOTO_COLORS[category]:"bg-color-white"},NotificationViewModel.calcText=function(category,message){var desc="";if(category=="sends")WALLET.getAddressObj(message.source)&&WALLET.getAddressObj(message.destination)?desc="You transferred <Am>"+smartFormat(normalizeQuantity(message.quantity,message._divisible))+"</Am> <As>"+message.asset+"</As> from <Ad>"+getAddressLabel(message.source)+"</Ad> to <Ad>"+getAddressLabel(message.destination)+"</Ad>":WALLET.getAddressObj(message.source)?desc="You sent <Am>"+smartFormat(normalizeQuantity(message.quantity,message._divisible))+"</Am> <As>"+message.asset+"</As> from <Ad>"+getAddressLabel(message.source)+"</Ad> to address <Ad>"+getAddressLabel(message.destination)+"</Ad>":WALLET.getAddressObj(message.destination)&&(desc="You received <Am>"+smartFormat(normalizeQuantity(message.quantity,message._divisible))+"</Am> <As>"+message.asset+"</As> from <Ad>"+getAddressLabel(message.source)+"</Ad> to your address <Ad>"+getAddressLabel(message.destination)+"</Ad>");else if(category=="btcpays"&&(WALLET.getAddressObj(message.source)||WALLET.getAddressObj(message.destination)))desc="BTCPay from <Ad>"+getAddressLabel(message.source)+"</Ad> to <Ad>"+getAddressLabel(message.destination)+"</Ad> for <Am>"+smartFormat(normalizeQuantity(message.btc_amount))+"</Am> <As>"+BTC+"</As>";else if(category=="burns"&&WALLET.getAddressObj(message.source))desc="Your address <Ad>"+getAddressLabel(message.source)+"</Ad> has burned <Am>"+smartFormat(normalizeQuantity(message.burned))+"</Am> <As>"+BTC+"</As> for <Am>"+smartFormat(normalizeQuantity(message.earned))+"</Am> <As>"+XCP+"</As>";else if(category=="cancels"&&WALLET.getAddressObj(message.source))desc="Order/Bid ID <b>"+message.tx_index+"</b> for your address <Ad>"+getAddressLabel(message.source)+"</Ad> was cancelled";else if(category=="callbacks"||category=="dividend"){var addressesWithAsset=WALLET.getAddressesWithAsset(message.asset);if(!addressesWithAsset.length)return;category=="callbacks"?desc="<As>"+XCP+"<</As> balance adjusted on your address(es) <Ad>"+addressesWithAsset.join(", ")+"</Ad> due to <Am>"+(parseFloat(message.fraction)*100).toString()+"%</Am> callback option being exercised for token <As>"+message.asset+"</As>":desc="<As>"+message.dividend_asset+"</As> balance adjusted on your address(es) <Ad>"+addressesWithAsset.join(", ")+"</Ad> due to <Am>"+message.quantity_per_unit+"</Am> distribution being issued for token <As>"+message.asset+"</As>"}else if(category=="issuances"){var addresses=WALLET.getAddressesList(),assetObj=null,addressesWithAsset=WALLET.getAddressesWithAsset(message.asset);addressesWithAsset.length&&(assetObj=WALLET.getAddressObj(addressesWithAsset[0]).getAssetObj(message.asset));if(message.transfer){if(addresses.indexOf(message["source"])!=-1||addresses.indexOf(message["issuer"])!=-1)desc="Token <As>"+message.asset+"</As> was transferred from <Ad>"+getLinkForCPData("address",message.source,getAddressLabel(message.source))+"</Ad> to <Ad>"+getLinkForCPData("address",message.issuer,getAddressLabel(message.issuer))+"</Ad>"}else if(assetObj)if(message.locked)assert(!assetObj.locked()),desc="Token <As>"+message.asset+"</As> was locked against additional issuance";else if(message["description"]!=assetObj.description())desc="Token <As>"+message.asset+"</As> had its description changed from <b>"+assetObj.description()+"</b> to <b>"+message.description+"</b>";else{var additionalQuantity=message.quantity;additionalQuantity?desc="Additional <Am>"+smartFormat(normalizeQuantity(additionalQuantity,assetObj.DIVISIBLE))+"</Am> units issued for token <As>"+message.asset+"</As>":desc="Token <As>"+message.asset+"</As> was issued with an initial quantity of <Am>"+smartFormat(normalizeQuantity(message.quantity,message.divisible))+"</Am> units"}}else if(category=="orders"&&WALLET.getAddressObj(message.source))desc="Your order to buy <Am>"+smartFormat(normalizeQuantity(message.get_quantity,message._get_asset_divisible))+"</Am> <As>"+message.get_asset+"</As> from <Ad>"+getAddressLabel(message.source)+"</Ad> in exchange for <Am>"+smartFormat(normalizeQuantity(message.give_quantity,message._give_asset_divisible))+"</Am> <As>"+message.give_asset+"</As> is active";else if(category=="order_matches"&&(WALLET.getAddressObj(message.tx0_address)||WALLET.getAddressObj(message.tx1_address)))desc="Order matched between <Ad>"+getAddressLabel(message.tx0_address)+"</Ad> (gave <Am>"+smartFormat(normalizeQuantity(message.forward_quantity,message._forward_asset_divisible))+"</Ad> <As>"+message.forward_asset+"</As>) and <Ad>"+getAddressLabel(message.tx1_address)+"</Ad> (gave <Am>"+smartFormat(normalizeQuantity(message.backward_quantity,message._backward_asset_divisible))+"</Ad> <As>"+message.backward_asset+"</As>)";else if(category=="order_expirations"&&WALLET.getAddressObj(message.source))desc="Your order ID <b>"+message.order_index+"</b> from address <Ad>"+getAddressLabel(message.source)+"</Ad> has expired";else if(category=="order_match_expirations")WALLET.getAddressObj(message.tx0_address)&&WALLET.getAddressObj(message.tx1_address)?desc="An order match between your addresses <Ad>"+getAddressLabel(message.tx0_address)+"</Ad> and <Ad>"+getAddressLabel(message.tx1_address)+"</Ad> has expired":WALLET.getAddressObj(message.tx0_address)?desc="An order match between your address <Ad>"+getAddressLabel(message.tx0_address)+"</Ad> and address <Ad>"+getAddressLabel(message.tx1_address)+"</Ad> has expired":WALLET.getAddressObj(message.tx1_address)&&(desc="An order match between your address <Ad>"+getAddressLabel(message.tx1_address)+"</Ad> and address <Ad>"+getAddressLabel(message.tx0_address)+"</Ad> has expired");else if(category=="broadcasts"&&WALLET.getAddressObj(message.source))message.locked?desc="You have locked the feed at address <Ad>"+getAddressLabel(message.source)+"</Ad>":desc="You have broadcast value <Am>"+message.value+"</Am> from address <Ad>"+getAddressLabel(message.source)+"</Ad>";else if(category=="bets"&&WALLET.getAddressObj(message.source))desc="You bet <Am>"+smartFormat(normalizeQuantity(message.wager_quantity))+"</Am> <As>"+XCP+"</As> on the feed @"+" <Ad>"+getAddressLabel(message.source)+"</Ad>";else if(category=="bet_matches"&&(WALLET.getAddressObj(message.tx0_address)||WALLET.getAddressObj(message.tx1_address)))desc="Bet @ feed <Ad>"+message.feed_address+"</Ad> matched between <Ad>"+getAddressLabel(message.tx0_address)+"</Ad> (gave <Am>"+smartFormat(normalizeQuantity(message.forward_quantity))+"</Ad> <As>"+XCP+"</As>) and <Ad>"+getAddressLabel(message.tx1_address)+"</Ad> (gave <Am>"+smartFormat(normalizeQuantity(message.backward_quantity))+"</Ad> <As>"+XCP+"</As>)";else if(category=="bet_expirations"&&WALLET.getAddressObj(message.source))desc="Your bet ID <b>"+message.bet_index+"</b> from address <Ad>"+getAddressLabel(message.source)+"</Ad> has expired";else if(category=="bet_match_expirations")WALLET.getAddressObj(message.tx0_address)&&WALLET.getAddressObj(message.tx1_address)?desc="A bet match between your addresses <Ad>"+getAddressLabel(message.tx0_address)+"</Ad> and <Ad>"+getAddressLabel(message.tx1_address)+"</Ad> has expired":WALLET.getAddressObj(message.tx0_address)?desc="A bet match between your address <Ad>"+getAddressLabel(message.tx0_address)+"</Ad> and address <Ad>"+getAddressLabel(message.tx1_address)+"</Ad> has expired":WALLET.getAddressObj(message.tx1_address)&&(desc="A bet match between your address <Ad>"+getAddressLabel(message.tx1_address)+"</Ad> and address <Ad>"+getAddressLabel(message.tx0_address)+"</Ad> has expired");else if(category=="rps"&&WALLET.getAddressObj(message.source))desc="You play Rock-Paper-Scissors with <Am>"+smartFormat(normalizeQuantity(message.wager))+"</Am> <As>"+XCP+"</As>",desc+=" with <Ad>"+getAddressLabel(message.source)+"</Ad>";else if(category=="rpsresolves"&&WALLET.getAddressObj(message.source)){var move_names=["NA","ROCK","PAPER","SCISSORS","SPOCK","LIZARD"],move_name=move_names[message.move]||message.move;desc="Your move <Am>"+move_name+"</Am> with <Ad>"+getAddressLabel(message.source)+"</Ad> is confirmed"}else if(category=="rps_expirations"&&WALLET.getAddressObj(message.source))desc="Your RPS game ID <b>"+message.rps_index+"</b> from address <Ad>"+getAddressLabel(message.source)+"</Ad> has expired";else if(category=="rps_match_expirations")WALLET.getAddressObj(message.tx0_address)&&WALLET.getAddressObj(message.tx1_address)?desc="A RPS match between your addresses <Ad>"+getAddressLabel(message.tx0_address)+"</Ad> and <Ad>"+getAddressLabel(message.tx1_address)+"</Ad> has expired":WALLET.getAddressObj(message.tx0_address)?desc="A RPS match between your address <Ad>"+getAddressLabel(message.tx0_address)+"</Ad> and address <Ad>"+getAddressLabel(message.tx1_address)+"</Ad> has expired":WALLET.getAddressObj(message.tx1_address)&&(desc="A RPS match between your address <Ad>"+getAddressLabel(message.tx1_address)+"</Ad> and address <Ad>"+getAddressLabel(message.tx0_address)+"</Ad> has expired");else if(category=="rps_matches")if(!message.tx0_address){var params={filters:[{field:"id",op:"=",value:message.rps_match_id}]},onReceiveRpsMatch=function(data){for(var i in data){var rps_match=data[i];NOTIFICATION_FEED.add(category,rps_match)}};failoverAPI("get_rps_matches",params,onReceiveRpsMatch)}else{WALLET.getAddressObj(message.tx0_address)&&(message["status"]=="concluded: first player wins"?desc="RPS: You win "+smartFormat(normalizeQuantity(message.wager))+"</Am> <As>"+XCP+"</As>"+" with <Ad>"+getAddressLabel(message.tx0_address)+"</Ad>":message["status"]=="concluded: second player wins"?desc="RPS: You lose "+smartFormat(normalizeQuantity(message.wager))+"</Am> <As>"+XCP+"</As>"+" with <Ad>"+getAddressLabel(message.tx0_address)+"</Ad>":message["status"]=="concluded: tie"&&(desc="RPS: Tie with <Ad>"+getAddressLabel(message.tx0_address)+"</Ad>"),desc&&(desc+=" ("+message.tx0_index+")"));var desc2="";WALLET.getAddressObj(message.tx1_address)&&(message["status"]=="concluded: first player wins"?desc2="RPS: You lose "+smartFormat(normalizeQuantity(message.wager))+"</Am> <As>"+XCP+"</As>"+" with <Ad>"+getAddressLabel(message.tx1_address)+"</Ad>":message["status"]=="concluded: second player wins"?desc2="RPS: You win "+smartFormat(normalizeQuantity(message.wager))+"</Am> <As>"+XCP+"</As>"+" with <Ad>"+getAddressLabel(message.tx1_address)+"</Ad>":message["status"]=="concluded: tie"&&(desc2="RPS: Tie with <Ad>"+getAddressLabel(message.tx1_address)+"</Ad>"),desc&&(desc2+=" ("+message.tx1_index+")"),desc2!=""&&(desc=desc+"<br />"+desc2)),desc&&NOTIFIED_RPS_RESULT[desc]?desc=null:desc&&(NOTIFIED_RPS_RESULT[desc]=!0)}return desc&&(desc=desc.replace(/<Am>/g,'<b class="notoQuantityColor">').replace(/<\/Am>/g,"</b>"),desc=desc.replace(/<Ad>/g,'<b class="notoAddrColor">').replace(/<\/Ad>/g,"</b>"),desc=desc.replace(/<As>/g,'<b class="notoAssetColor">').replace(/<\/As>/g,"</b>")),desc};function NotificationFeedViewModel(initialCount){var self=this;self.entries=ko.observableArray([]),self.lastUpdated=ko.observable(new Date),self.count=ko.observable(initialCount||0),self.unackedCount=ko.observable(initialCount||0),self.ack=function(){self.unackedCount(0)},self.add=function(category,message){if(category=="balances"||category=="debits"||category=="credits")return;var noto=new NotificationViewModel(category,message);if(!noto.MESSAGE_TEXT)return;self.entries.unshift(noto),self.unackedCount(self.unackedCount()+1),self.entries().length>40&&self.entries.pop(),self.lastUpdated(new Date),WALLET.refreshBTCBalances()}};
/*----------------js/components/feed_pending_actions.js---------------*/
function PendingActionViewModel(txHash,category,data,when){var self=this;self.WHEN=when,self.TX_HASH=txHash,self.CATEGORY=category,self.DATA=data,self.ICON_CLASS=ENTITY_ICONS[category],self.COLOR_CLASS=ENTITY_NOTO_COLORS[category],self.ACTION_TEXT=PendingActionViewModel.calcText(category,data)}PendingActionViewModel.calcText=function(category,data){var desc="",divisible=null,pending=data.mempool?"Unconfirmed":"Pending";data.source&&data.asset&&(divisible=data.divisible!==undefined?data.divisible:data._divisible!==undefined?data._divisible:WALLET.getAddressObj(data.source).getAssetObj(data.asset).DIVISIBLE);if(category=="burns")desc=pending+" burn of <Am>"+normalizeQuantity(data.quantity)+"</Am> <As>"+BTC+"</As>";else if(category=="sends")desc=pending+" send of <Am>"+numberWithCommas(normalizeQuantity(data.quantity,divisible))+"</Am> <As>"+data.asset+"</As> from <Ad>"+getLinkForCPData("address",data.source,getAddressLabel(data.source))+"</Ad>"+" to <Ad>"+getLinkForCPData("address",data.destination,getAddressLabel(data.destination))+"</Ad>";else if(category=="orders")desc=pending+" order to sell <Am>"+numberWithCommas(normalizeQuantity(data.give_quantity,data._give_divisible))+"</Am> <As>"+data.give_asset+"</As> for <Am>"+numberWithCommas(normalizeQuantity(data.get_quantity,data._get_divisible))+"</Am> <As>"+data.get_asset+"</As>";else if(category=="issuances")if(data.transfer_destination)desc=pending+" transfer of token <As>"+data.asset+"</As> from <Ad>"+getLinkForCPData("address",data.source,getAddressLabel(data.source))+"</Ad> to <Ad>"+getLinkForCPData("address",data.transfer_destination,getAddressLabel(data.transfer_destination))+"</Ad>";else if(data.locked)desc=pending+" lock of token <As>"+data.asset+"</As> against additional issuance";else if(data["quantity"]==0)desc=pending+" change of description for token <As>"+data.asset+"</As> to <b>"+data.description+"</b>";else{var assetObj=null,addressesWithAsset=WALLET.getAddressesWithAsset(data.asset);addressesWithAsset.length&&(assetObj=WALLET.getAddressObj(addressesWithAsset[0]).getAssetObj(data.asset)),assetObj?desc=pending+" issuance of <Am>"+numberWithCommas(normalizeQuantity(data.quantity,data.divisible))+"</Am> additional units for token <As>"+data.asset+"</As>":desc=pending+" creation of token <As>"+data.asset+"</As> with initial quantity of <Am>"+numberWithCommas(normalizeQuantity(data.quantity,data.divisible))+"</Am> units"}else if(category=="broadcasts")desc=pending+" broadcast:<br/>Text: "+data.text+"<br/>Value:"+data.value;else if(category=="bets")desc=pending+" <b>"+data.bet_type+"</b> bet on feed @ <Ad>"+getLinkForCPData("address",data.feed_address,getAddressLabel(data.feed_address))+"</Ad><br/>"+"Wager: <Am>"+numberWithCommas(normalizeQuantity(data.wager_quantity))+"</Am> <As>XCP</As>, Counterwager: <Am>"+numberWithCommas(normalizeQuantity(data.counterwager_quantity))+"</Am> <As>XCP</As>";else if(category=="dividends"){var divUnitDivisible;WALLET.getAddressObj(data.source)?(divUnitDivisible=WALLET.getAddressObj(data.source).getAssetObj(data.dividend_asset).DIVISIBLE,desc=pending+" dividend payment "):(divUnitDivisible=data.dividend_asset_divisible,desc=pending+" dividend reception "),desc+="of <Am>"+numberWithCommas(normalizeQuantity(data.quantity_per_unit,divUnitDivisible))+"</Am> <As>"+data.dividend_asset+"</As> on token <As>"+data.asset+"</As>"}else category=="cancels"?desc=pending+" cancellation of "+data._type+" ID <b>"+data._tx_index+"</b>":category=="callbacks"?desc=pending+" callback for <Am>"+(data.fraction*100).toFixed(4)+"%</Am> outstanding on token <As>"+data.asset+"</As>":category=="btcpays"?desc=pending+" BTC Payment from <Ad>"+getAddressLabel(data.source)+"</Ad>":category=="rps"?(desc=pending+"  RPS game with <Ad>"+getAddressLabel(data.source)+"</Ad>: ",desc+=" <Am>"+numberWithCommas(normalizeQuantity(data.wager))+"</Am> <As>XCP</As>"):category=="rpsresolves"?desc=pending+" RPS resolution with <Ad>"+getAddressLabel(data.source)+"</Ad>":category=="order_matches"?WALLET.getAddressObj(data.tx1_address)&&data["forward_asset"]==BTC&&data["_status"]=="pending"?desc="Waiting <Am>"+numberWithCommas(normalizeQuantity(data.forward_quantity))+"</Am> <As>BTC</As> payment from <Ad>"+getAddressLabel(data.tx0_address)+"</Ad>":WALLET.getAddressObj(data.tx0_address)&&data["backward_asset"]==BTC&&data["_status"]=="pending"&&(desc="Waiting <Am>"+numberWithCommas(normalizeQuantity(data.backward_quantity))+"</Am> <As>BTC</As> payment from <Ad>"+getAddressLabel(data.tx1_address)+"</Ad>"):desc="UNHANDLED TRANSACTION CATEGORY";return desc=desc.replace(/<Am>/g,'<b class="notoQuantityColor">').replace(/<\/Am>/g,"</b>"),desc=desc.replace(/<Ad>/g,'<b class="notoAddrColor">').replace(/<\/Ad>/g,"</b>"),desc=desc.replace(/<As>/g,'<b class="notoAssetColor">').replace(/<\/As>/g,"</b>"),desc};function PendingActionFeedViewModel(){var self=this;self.entries=ko.observableArray([]),self.lastUpdated=ko.observable(new Date),self.ALLOWED_CATEGORIES=["sends","orders","issuances","broadcasts","bets","dividends","burns","cancels","callbacks","btcpays","rps","rpsresolves","order_matches"],self.dispCount=ko.computed(function(){return self.entries().length},self),self.pendingSellBTCOrdersCount=ko.computed(function(){return $.map(self.entries(),function(item){var sellingBTC="orders"==item.CATEGORY&&BTC==item.DATA.give_asset||"btcpays"==item.CATEGORY;return sellingBTC?item:null}).length},self),self.pendingRPS=ko.computed(function(){return $.map(self.entries(),function(item){var game="rps"==item.CATEGORY;return game?item:null}).length},self),self.getLocalStorageKey=function(){return"pendingActions_"+WALLET.identifier()},self.add=function(txHash,category,data,when){typeof when=="undefined"&&(when=new Date),assert(self.ALLOWED_CATEGORIES.indexOf(category)!=-1,"Illegal pending action category: "+category);var pendingAction=new PendingActionViewModel(txHash,category,data,when);if(!pendingAction.ACTION_TEXT)return;self.entries.unshift(pendingAction),$.jqlog.debug("pendingAction:add:"+txHash+":"+category+": "+JSON.stringify(data));var pendingActionsStorage=localStorage.getObject(self.getLocalStorageKey());pendingActionsStorage===null&&(pendingActionsStorage=[]),pendingActionsStorage.unshift({txHash:txHash,category:category,data:data,when:when}),localStorage.setObject(self.getLocalStorageKey(),pendingActionsStorage),self.lastUpdated(new Date),PendingActionFeedViewModel.modifyBalancePendingFlag(category,data,!0),WALLET.refreshBTCBalances()},self.remove=function(txHash,category,btcRefreshSpecialLogic){typeof btcRefreshSpecialLogic=="undefined"&&(btcRefreshSpecialLogic=!1);if(!txHash)return;if(self.ALLOWED_CATEGORIES.indexOf(category)==-1)return;var match=ko.utils.arrayFirst(self.entries(),function(item){return item.TX_HASH==txHash});if(match){if(btcRefreshSpecialLogic){assert(category=="sends");if(match["CATEGORY"]!=category||match["DATA"]["asset"]!=BTC)return;NOTIFICATION_FEED.add("sends",match.DATA)}self.entries.remove(match),$.jqlog.debug("pendingAction:remove:"+txHash+":"+category),self.lastUpdated(new Date),PendingActionFeedViewModel.modifyBalancePendingFlag(category,match.DATA,!1)}else $.jqlog.debug("pendingAction:NOT FOUND:"+txHash+":"+category);var pendingActionsStorage=localStorage.getObject(self.getLocalStorageKey());pendingActionsStorage===null&&(pendingActionsStorage=[]),pendingActionsStorage=pendingActionsStorage.filter(function(item){return item.txHash!==txHash}),localStorage.setObject(self.getLocalStorageKey(),pendingActionsStorage)},self.restoreFromLocalStorage=function(onSuccess){var pendingActionsStorage=localStorage.getObject(self.getLocalStorageKey()),txHashes=[],i=null;pendingActionsStorage===null&&(pendingActionsStorage=[]);for(var i=0;i<pendingActionsStorage.length;i++)pendingActionsStorage[i]["txHash"].length==64&&txHashes.push(pendingActionsStorage[i].txHash);if(!txHashes.length)return onSuccess?onSuccess():null;var newPendingActionsStorage=[],pendingAction=null;failoverAPI("get_chain_txns_status",{txn_hashes:txHashes},function(txInfo,endpoint){for(i=0;i<txInfo.length;i++)pendingAction=$.grep(pendingActionsStorage,function(e){return e["txHash"]==txInfo[i]["tx_hash"]})[0],pendingAction&&txInfo[i]["confirmations"]==0?($.jqlog.debug("pendingAction:restoreFromStorage:load: "+txInfo[i].tx_hash+":"+pendingAction.category),newPendingActionsStorage.push(pendingAction),self.add(txInfo[i].tx_hash,pendingAction.category,pendingAction.data,Date.parse(pendingAction.when))):$.jqlog.debug("pendingAction:restoreFromStorage:remove: "+txInfo[i].tx_hash),self.entries.sort(function(left,right){return left.WHEN==right.WHEN?0:left.WHEN<right.WHEN?1:-1});localStorage.setObject(self.getLocalStorageKey(),newPendingActionsStorage),onSuccess&&onSuccess()})}}PendingActionFeedViewModel.modifyBalancePendingFlag=function(category,data,flagSetting){assert(flagSetting===!0||flagSetting===!1);var updateAssetObj=function(assetObj,quantity,dividend){assetObj.balanceChangePending(flagSetting),dividend=="source"?quantity=quantity*assetObj.holdersSupply*-1:dividend=="destination"&&(quantity*=assetObj.rawBalance);var newUnconfirmedBalance=normalizeQuantity(quantity,assetObj.DIVISIBLE);flagSetting?assetObj.unconfirmedBalance(assetObj.unconfirmedBalance()+newUnconfirmedBalance):assetObj.unconfirmedBalance(assetObj.unconfirmedBalance()-newUnconfirmedBalance)},updateUnconfirmedBalance=function(address,asset,quantity,dividend,assetInfo){var addrObj=WALLET.getAddressObj(address);if(addrObj){var assetObj=addrObj.getAssetObj(asset);!assetObj&&flagSetting?assetInfo?(addrObj.addOrUpdateAsset(asset,assetInfo,0),assetObj=addrObj.getAssetObj(asset),updateAssetObj(assetObj,quantity,dividend)):failoverAPI("get_asset_info",{assets:[asset]},function(assetsInfo,endpoint){addrObj.addOrUpdateAsset(asset,assetsInfo[0],0),assetObj=addrObj.getAssetObj(asset),updateAssetObj(assetObj,quantity,dividend)}):assetObj&&updateAssetObj(assetObj,quantity,dividend)}},addressObj=null;if(category=="burns")addressObj=WALLET.getAddressObj(data.source),addressObj.getAssetObj(XCP).balanceChangePending(flagSetting),updateUnconfirmedBalance(data.source,BTC,data.quantity*-1);else if(category=="sends")updateUnconfirmedBalance(data.source,data.asset,data.quantity*-1),updateUnconfirmedBalance(data.destination,data.asset,data.quantity);else if(category=="btcpays")updateUnconfirmedBalance(data.source,BTC,data.quantity*-1),updateUnconfirmedBalance(data.destination,BTC,data.quantity);else if(category=="issuances"&&!data.locked&&!data.transfer_destination){addressObj=WALLET.getAddressObj(data.source);var assetObj=addressObj.getAssetObj(data.asset);assetObj&&assetObj.isMine()?updateUnconfirmedBalance(data.source,data.asset,data.quantity):assetObj||updateUnconfirmedBalance(data.source,XCP,-ASSET_CREATION_FEE_XCP*UNIT)}else category=="dividend"?(updateUnconfirmedBalance(data.source,data.dividend_asset,data.quantity_per_unit,"source"),updateUnconfirmedBalance(data.destination,data.dividend_asset,data.quantity_per_unit,"destination")):category=="orders"?data["give_asset"]!=BTC&&updateUnconfirmedBalance(data.source,data.give_asset,data.give_quantity*-1):category=="bets"?updateUnconfirmedBalance(data.source,XCP,data.wager_quantity*-1):category=="rps"&&updateUnconfirmedBalance(data.source,XCP,data.wager*-1)};
/*----------------js/components/feed_btcpays.js---------------*/
function BTCPayFeedViewModel(){var self=this;self.dispCount=ko.computed(function(){return WAITING_BTCPAY_FEED.entries().length+UPCOMING_BTCPAY_FEED.entries().length},self),self.dispLastUpdated=ko.computed(function(){return WAITING_BTCPAY_FEED.lastUpdated()>=UPCOMING_BTCPAY_FEED.lastUpdated()?WAITING_BTCPAY_FEED.lastUpdated():UPCOMING_BTCPAY_FEED.lastUpdated()},self)}function WaitingBTCPayViewModel(btcPayData){var self=this;self.BTCPAY_DATA=btcPayData,self.now=ko.observable(new Date),self.MATCH_EXPIRE_INDEX=self.BTCPAY_DATA.matchExpireIndex,self.dispBTCQuantity=smartFormat(self.BTCPAY_DATA.btcQuantity),self.dispMyAddr=getAddressLabel(self.BTCPAY_DATA.myAddr),self.dispMyOrderTxHash=getTxHashLink(self.BTCPAY_DATA.myOrderTxHash),self.expiresInNumBlocks=ko.computed(function(){return self.BTCPAY_DATA.matchExpireIndex-WALLET.networkBlockHeight()},self),self.approxExpiresInTime=ko.computed(function(){return self.now().getTime()+self.expiresInNumBlocks()*APPROX_SECONDS_PER_BLOCK*1e3},self),self.displayColor=ko.computed(function(){return self.approxExpiresInTime()-self.now()>72e5?"bg-color-greenLight":self.approxExpiresInTime()-self.now()>36e5?"bg-color-yellow":self.approxExpiresInTime()-self.now()>18e5?"bg-color-orange":"bg-color-red"},self),self.completeBTCPay=function(){if(PROCESSED_BTCPAY[btcPayData.orderMatchID])return $.jqlog.error("Attempt to make duplicate btcpay: "+btcPayData.orderMatchID),!1;if(self.expiresInNumBlocks()<3)return $.jqlog.error("Attempt to make expired btcpay: "+btcPayData.orderMatchID),!1;PROCESSED_BTCPAY[btcPayData.orderMatchID]=!0,WALLET.retrieveBTCBalance(self.BTCPAY_DATA.myAddr,function(balance){if(balance<self.BTCPAY_DATA.btcQuantityRaw+MIN_PRIME_BALANCE){bootbox.alert("You do not have the required <b class='notoAssetColor'>BTC</b> balance to settle this order. Please deposit more <b class='notoAssetColor'>BTC</b> into address <b class='notoAddrColor'>"+getAddressLabel(self.BTCPAY_DATA.myAddr)+"</b> and try again.");return}bootbox.dialog({message:"Confirm a payment of <b class='notoQuantityColor'>"+self.BTCPAY_DATA.btcQuantity+"</b>"+" <b class='notoAssetColor'>BTC</b>"+" to address"+" <b class='notoAddrColor'>"+getAddressLabel(self.BTCPAY_DATA.btcDestAddr)+"</b> to settle order ID"+" <b>"+self.BTCPAY_DATA.myOrderTxIndex+"</b>?",title:"Confirm Order Settlement (BTC Payment)",buttons:{cancel:{label:"Cancel",className:"btn-default",callback:function(){}},confirm:{label:"Confirm and Pay",className:"btn-success",callback:function(){WALLET.doTransaction(self.BTCPAY_DATA.myAddr,"create_btcpay",{order_match_id:self.BTCPAY_DATA.orderMatchID,source:self.BTCPAY_DATA.myAddr,destBtcPay:self.BTCPAY_DATA.btcDestAddr},function(txHash,data,endpoint,addressType,armoryUTx){WAITING_BTCPAY_FEED.remove(self.BTCPAY_DATA.orderMatchID)})}}}})})}}function WaitingBTCPayFeedViewModel(){var self=this;self.entries=ko.observableArray([]),self.lastUpdated=ko.observable(new Date),self.entries.subscribe(function(){WALLET.isSellingBTC(self.entries().length+UPCOMING_BTCPAY_FEED.entries().length?!0:!1)}),setInterval(function(){var now=new Date;for(var i=0;i<self.entries().length;i++)self.entries()[i].now(now)},6e4),self.add=function(btcPayData,resort){assert(btcPayData&&btcPayData.orderMatchID),typeof resort=="undefined"&&(resort=!0),self.entries.unshift(new WaitingBTCPayViewModel(btcPayData)),resort&&self.sort(),self.lastUpdated(new Date)},self.remove=function(orderHashOrMatchHash,data){var match=ko.utils.arrayFirst(self.entries(),function(item){if(orderHashOrMatchHash==item.BTCPAY_DATA["orderMatchID"])return!0;var orderHash1=item.BTCPAY_DATA.orderMatchID.substring(0,64),orderHash2=item.BTCPAY_DATA.orderMatchID.substring(64);return orderHashOrMatchHash==orderHash1||orderHashOrMatchHash==orderHash2});match&&(self.entries.remove(match),self.lastUpdated(new Date))},self.sort=function(){self.entries.sort(function(left,right){return left.expiresInNumBlocks()==right.expiresInNumBlocks()?0:left.expiresInNumBlocks()<right.expiresInNumBlocks()?-1:1})},self.restore=function(){var addresses=WALLET.getAddressesList(),filters=[];for(var i=0;i<addresses.length;i++)filters.push({field:"tx0_address",op:"==",value:addresses[i]}),filters.push({field:"tx1_address",op:"==",value:addresses[i]});failoverAPI("get_order_matches",{filters:filters,filterop:"or",status:"pending"},function(data,endpoint){$.jqlog.debug("Order matches: "+JSON.stringify(data));for(var i=0;i<data.length;i++){if(WALLET.getAddressObj(data.tx0_address)&&data["forward_asset"]==BTC||WALLET.getAddressObj(data.tx1_address)&&data["backward_asset"]==BTC)continue;var orderMatchID=data[i].tx0_hash+data[i].tx1_hash,pendingBTCPay=$.grep(PENDING_ACTION_FEED.entries(),function(e){return e["CATEGORY"]=="btcpays"&&e["DATA"]["order_match_id"]==orderMatchID})[0];if(pendingBTCPay)$.jqlog.debug("pendingBTCPay:restore:not showing btcpay request for order match ID: "+orderMatchID);else{var btcPayData=WaitingBTCPayFeedViewModel.makeBTCPayData(data[i]);btcPayData&&(WALLET.networkBlockHeight()-btcPayData.blockIndex<NUM_BLOCKS_TO_WAIT_FOR_BTCPAY?UPCOMING_BTCPAY_FEED.add(btcPayData):WAITING_BTCPAY_FEED.add(btcPayData))}}UPCOMING_BTCPAY_FEED.sort(),WAITING_BTCPAY_FEED.sort()})}}WaitingBTCPayFeedViewModel.makeBTCPayData=function(data){var firstInPair=WALLET.getAddressObj(data.tx0_address)&&data["forward_asset"]==BTC?!0:!1;if(!firstInPair)if(!WALLET.getAddressObj(data.tx1_address)||data["backward_asset"]!=BTC)return!1;return{blockIndex:data.tx1_block_index,matchExpireIndex:data.match_expire_index,orderMatchID:data.tx0_hash+data.tx1_hash,myAddr:firstInPair?data.tx0_address:data.tx1_address,btcDestAddr:firstInPair?data.tx1_address:data.tx0_address,btcQuantity:normalizeQuantity(firstInPair?data.forward_quantity:data.backward_quantity,!0),btcQuantityRaw:firstInPair?data.forward_quantity:data.backward_quantity,myOrderTxIndex:firstInPair?data.tx0_index:data.tx1_index,myOrderTxHash:firstInPair?data.tx0_hash:data.tx1_hash,otherOrderTxIndex:firstInPair?data.tx1_index:data.tx0_index,otherOrderAsset:firstInPair?data.backward_asset:data.forward_asset,otherOrderQuantity:normalizeQuantity(firstInPair?data.backward_quantity:data.forward_quantity,firstInPair?data._backward_asset_divisible:data._forward_asset_divisible),otherOrderQuantityRaw:firstInPair?data.backward_quantity:data.forward_quantity}};function UpcomingBTCPayViewModel(btcPayData){var self=this;self.BTCPAY_DATA=btcPayData,self.now=ko.observable(new Date),self.dispBTCQuantity=smartFormat(self.BTCPAY_DATA.btcQuantity),self.dispMyOrderTxHash=getTxHashLink(self.BTCPAY_DATA.myOrderTxHash),self.numBlocksUntilEligible=ko.computed(function(){return Math.max(NUM_BLOCKS_TO_WAIT_FOR_BTCPAY-(WALLET.networkBlockHeight()-self.BTCPAY_DATA.blockIndex),0)},self),self.approxTimeUntilEligible=ko.computed(function(){return self.now().getTime()+self.numBlocksUntilEligible()*APPROX_SECONDS_PER_BLOCK*1e3},self)}function UpcomingBTCPayFeedViewModel(){var self=this;self.entries=ko.observableArray([]),self.lastUpdated=ko.observable(new Date),self.entries.subscribe(function(){WALLET.isSellingBTC(WAITING_BTCPAY_FEED.entries().length+self.entries().length?!0:!1)}),setInterval(function(){var now=new Date;for(var i=0;i<self.entries().length;i++)self.entries()[i].now(now),self.entries()[i].numBlocksUntilEligible()==0&&self.process(self.entries()[i].BTCPAY_DATA)},6e4),self.add=function(btcPayData,resort){assert(btcPayData&&btcPayData.orderMatchID),typeof resort=="undefined"&&(resort=!0);for(var e in self.entries)if(self.entries[e].BTCPAY_DATA&&self.entries[e].BTCPAY_DATA["orderMatchID"]==btcPayData["orderMatchID"])return $.jqlog.error("Attempt to make duplicate btcpay: "+btcPayData.orderMatchID),!1;self.entries.unshift(new UpcomingBTCPayViewModel(btcPayData)),resort&&self.sort(),self.lastUpdated(new Date)},self.remove=function(orderHashOrMatchHash){var match=ko.utils.arrayFirst(self.entries(),function(item){if(orderHashOrMatchHash==item.BTCPAY_DATA["orderMatchID"])return!0;var orderHash1=item.BTCPAY_DATA.orderMatchID.substring(0,64),orderHash2=item.BTCPAY_DATA.orderMatchID.substring(64);return orderHashOrMatchHash==orderHash1||orderHashOrMatchHash==orderHash2});match&&(self.entries.remove(match),self.lastUpdated(new Date))},self.sort=function(){self.entries.sort(function(left,right){return left.numBlocksUntilEligible()==right.numBlocksUntilEligible()?0:left.numBlocksUntilEligible()<right.numBlocksUntilEligible()?-1:1})},self.process=function(btcPayData){if(PROCESSED_BTCPAY[btcPayData.orderMatchID])return $.jqlog.error("Attempt to make duplicate btcpay: "+btcPayData.orderMatchID),!1;if(btcPayData.matchExpireIndex-WALLET.networkBlockHeight()<3)return $.jqlog.error("Attempt to make expired btcpay: "+btcPayData.orderMatchID),!1;PROCESSED_BTCPAY[btcPayData.orderMatchID]=!0,self.remove(btcPayData.orderMatchID);if(PREFERENCES.auto_btcpay)WALLET.getBalance(btcPayData.myAddr,BTC,!1)>=btcPayData.btcQuantityRaw+MIN_PRIME_BALANCE?WALLET.doTransaction(btcPayData.myAddr,"create_btcpay",{order_match_id:btcPayData.orderMatchID,source:btcPayData.myAddr,destBtcPay:btcPayData.btcDestAddr},function(txHash,data,endpoint,addressType,armoryUTx){var message="Automatic <b class='notoAssetColor'>BTC</b> payment of <b class='notoQuantityColor'>"+btcPayData.btcQuantity+"</b>"+" <b class='notoAssetColor'>BTC</b> made from address"+" <b class='notoAddrColor'>"+btcPayData.myAddr+"</b> for"+" <b class='notoQuantityColor'>"+btcPayData.otherOrderQuantity+"</b> "+" <b class='notoAssetColor'>"+btcPayData.otherOrderAsset+"</b>. ";WALLET.showTransactionCompleteDialog(message+ACTION_PENDING_NOTICE,message,armoryUTx)},function(){WAITING_BTCPAY_FEED.add(btcPayData),bootbox.alert("There was an error processing an automatic <b class='notoAssetColor'>BTC</b> payment. This payment has been placed in a pending state. Please try again manually.")}):(WAITING_BTCPAY_FEED.add(btcPayData),WALLET.showTransactionCompleteDialog("A payment on a matched order for <b class='notoQuantityColor'>"+btcPayData.btcQuantity+"</b>"+"<b class='notoAssetColor'>BTC</b> is required, however, the address that made the order ("+"<b class='notoAddrColor'>"+getAddressLabel(btcPayData.myAddr)+"</b>"+") lacks the balance necessary to do this automatically. This order has been placed in a pending state."+"<br/><br/>Please deposit the necessary <b class='notoAssetColor'>BTC</b> into this address and"+"manually make the payment from the Bitcoin icon in the top bar of the site."));else{var prompt="An order match for <b class='notoQuantityColor'>"+btcPayData.otherOrderQuantity+"</b>"+" <b class='notoAssetColor'>"+btcPayData.otherOrderAsset+"</b> was successfully made. "+" To finalize, this requires payment of <b class='notoQuantityColor'>"+btcPayData.btcQuantity+"</b>"+" <b class='notoAssetColor'>BTC</b>"+" from address"+" <b class='notoAddressColor'>"+getAddressLabel(btcPayData.myAddr)+"</b>."+"<br/><br/><b>You must pay within 10 blocks time, or lose the purchase. Pay now?</b>";bootbox.dialog({message:prompt,title:"Order Settlement (BTC Pay)",buttons:{success:{label:"No, hold off",className:"btn-danger",callback:function(){WAITING_BTCPAY_FEED.add(btcPayData)}},danger:{label:"Yes",className:"btn-success",callback:function(){WALLET.doTransaction(btcPayData.myAddr,"create_btcpay",{order_match_id:btcPayData.orderMatchID,source:btcPayData.myAddr,destBtcPay:btcPayData.btcDestAddr},function(txHash,data,endpoint,addressType,armoryUTx){var message="Automatic <b class='notoAssetColor'>BTC</b> payment of <b class='notoQuantityColor'>"+btcPayData.btcQuantity+"</b> <b class='notoAssetColor'>BTC</b> "+(armoryUTx?"to be made":"made")+" from address <b class='notoAddressColor'>"+getAddressLabel(btcPayData.myAddr)+"</b>"+" for <b class='notoQuantityColor'>"+btcPayData.otherOrderQuantity+"</b>"+" <b class='notoAssetColor'>"+btcPayData.otherOrderAsset+"</b>. ";WALLET.showTransactionCompleteDialog(message+ACTION_PENDING_NOTICE,message,armoryUTx)},function(){WAITING_BTCPAY_FEED.add(btcPayData),bootbox.alert("There was an error processing an automatic <b class='notoAssetColor'>BTC</b> payment.<br/><br/><b>Please manually make the payment from the Bitcoin icon in the top bar of the site.</b>")})}}}})}}};
/*----------------js/components/chatfeed.js---------------*/
function ChatLineViewModel(handle,text,is_op,is_private){var self=this;self.HANDLE=handle,self.IS_OP=is_op||!1,self.IS_PRIVATE=is_private||!1,self.text=ko.observable(text),self.lineHead=ko.computed(function(){return self.HANDLE?self.IS_OP?"<span class='chatLineOpEmote'>"+self.HANDLE+(self.IS_PRIVATE?"(PRIVATE)":"")+":</span>&nbsp;&nbsp;":self.HANDLE==CHAT_FEED.handle()?"<span class='chatLineSelfEmote'>"+self.HANDLE+":</span>&nbsp;&nbsp;":"<span class='chatLineEmote'>"+self.HANDLE+(self.IS_PRIVATE?"(PRIVATE)":"")+":</span>&nbsp;&nbsp;":(assert(self.HANDLE===null),"<span class='chatLineSystem'>SYSTEM:</span>&nbsp;&nbsp;")},self)}function ChatFeedViewModel(){var self=this;self.lines=ko.observableArray([]),self.myLines=ko.observableArray([]),self.lastUpdated=ko.observable(new Date),self.handle=ko.observable(null),self.isOp=ko.observable(!1),self.bannedUntil=ko.observable(null),self.feedConnections=[],self._historyKeyIndex=0,self._handleTabCompletionIndex=null,self._handleTabCompletionPrefixText="",self._firstAvailableChatServer=0,self.lastSetWalletIDAttempt=null,self.headerText=ko.computed(function(){var header="<b>Chatbox</b>";return self.handle()&&self.isOp()&&(header+=" (<span class='chatLineOpEmote'>"+self.handle()+"</span>)"),self.handle()&&!self.isOp()&&(header+=" (<span class='chatLineSelfEmote'>"+self.handle()+"</span>)"),header}),self.numUsersOnline=ko.observable("??"),self.init=function(){if(self.feedConnections.length)return;$.jqlog.debug("Starting chat feeds: "+JSON.stringify(cwBaseURLs()));for(var i=0;i<cwBaseURLs().length;i++){var socket=io.connect(cwBaseURLs()[i],{"connect timeout":5e3,reconnect:!0,"reconnection delay":5e3,"reconnection limit":6e4,"max reconnection attempts":5e4,"try multiple transports":!1,"force new connection":!0,resource:USE_TESTNET?"_t_chat":"_chat"});self.feedConnections.push(socket),self._registerConnectCallback(i)}self.updateOnlineUserCount(),setTimeout(function(){self.updateOnlineUserCount()},CHAT_NUM_USERS_ONLINE_REFRESH_EVERY)},self.updateOnlineUserCount=function(){failoverAPI("get_num_users_online",{},function(numUsersOnline,endpoint){self.numUsersOnline(numUsersOnline),$("div.openChatPane").show()})},self._showChatWindow=function(){$("#chatPane").append($("div.openChatPane")),$("div.openChatPane").html("▲"),$("body").width()>680?($("#main").animate({marginRight:"280px"},{duration:600,queue:!1}),$("#chatPane").css("width","280px")):$("#chatPane").css("width",$("#main").width()-5+"px"),self.scrollToBottomIfNecessary(),$("#chatPane").show("slide",{direction:"right",queue:!1},600,function(){self.scrollToBottomIfNecessary()})},self._hideChatWindow=function(){$("#main").animate({marginRight:"0px"},{duration:600,queue:!1,complete:function(){$("body").append($("div.openChatPane")),$("div.openChatPane").html("CHAT")}}),$("#chatPane").hide("slide",{direction:"right",queue:!1},600)},self.showChat=function(){if(self.handle()){self._showChatWindow();return}multiAPINewest("get_chat_handle",{wallet_id:WALLET.identifier()},"last_updated",function(data,endpoint){if(data){assert(data&&data.hasOwnProperty("handle")),self.handle(data.handle),self.isOp(data.is_op),self.bannedUntil(data.banned_until),$.jqlog.debug("Chat handle: "+self.handle()+", op: "+self.isOp()+", banned until: "+self.bannedUntil()/1e3),self._showChatWindow();var initialLineSetNumReplies=0,initialLineSet=[];function _startChattingAndGetLastLines(num){self._registerCallbacks(num),self.feedConnections[num].emit("start_chatting",WALLET.identifier(),num==0,function(data){self.feedConnections[num].emit("get_lastlines",function(linesList){$.jqlog.debug("chat.get_lastlines(feed-"+num+"): len = "+linesList.length+"; initialLineSet.len = "+initialLineSet.length),initialLineSet=initialLineSet.concat(linesList),initialLineSetNumReplies+=1;if(initialLineSetNumReplies==cwBaseURLs().length){initialLineSet.sort(function(a,b){return a.when<b.when?-1:a.when>b.when?1:0});for(var i=0;i<initialLineSet.length;i++)self.addLine(initialLineSet[i].handle,initialLineSet[i].text,initialLineSet[i].is_op,!1);self.scrollToBottomIfNecessary()}})})}for(var i=0;i<self.feedConnections.length;i++)_startChattingAndGetLastLines(i)}else CHAT_SET_HANDLE_MODAL.show()})},self._registerConnectCallback=function(num){var socket=self.feedConnections[num];socket.on("connect",function(){$.jqlog.log("socket.io(chat): Connected to server: "+cwBaseURLs()[num]),socket.emit("ping",WALLET.identifier())})},self._registerCallbacks=function(num){var socket=self.feedConnections[num];socket.on("emote",function(handle,text,is_op,is_private,via_command){$.jqlog.debug("chat.emote(feed-"+num+"): handle: "+handle+", viaCommand: "+via_command+", isOp: "+is_op+", text: "+text);if(via_command&&num==self._firstAvailableChatServer||!via_command)self.addLine(handle,text,is_op,is_private),handle==self.handle()&&text==$("#chatTextBox").val()&&$("#chatTextBox").val("")}),socket.on("oped",function(op_handle,handle){if(num!=self._firstAvailableChatServer)return;handle==self.handle()&&self.isOp(!0),self.addLine(null,op_handle+" has oped "+handle,null,null)}),socket.on("unoped",function(op_handle,handle){if(num!=self._firstAvailableChatServer)return;handle==self.handle()&&self.isOp(!1),self.addLine(null,op_handle+" has unoped "+handle,null,null)}),socket.on("banned",function(op_handle,handle,time,until_ts){if(num!=self._firstAvailableChatServer)return;self.addLine(null,op_handle+" has banned "+handle+(time==-1?" permanently ^_^":" for "+time+" seconds"),null,null)}),socket.on("unbanned",function(op_handle,handle){if(num!=self._firstAvailableChatServer)return;self.addLine(null,op_handle+" has unbanned "+handle,null,null)}),socket.on("handle_changed",function(op_handle,old_handle,new_handle){if(num!=self._firstAvailableChatServer)return;old_handle==self.handle()&&self.handle(new_handle),self.addLine(null,op_handle+" has changed the chat handle for "+old_handle+" to "+new_handle,null,null)}),socket.on("online_status",function(handle,is_online){if(num!=self._firstAvailableChatServer)return;self.addLine(null,handle+(is_online?" is online":" is not online"),null,null)}),socket.on("error",function(error_name,error_message){$.jqlog.debug("chat.error(feed-"+num+"): "+error_name+" -- "+error_message),error_name=="invalid_state"?(!self.lastSetWalletIDAttempt||(new Date).getTime()/1e3-self.lastSetWalletIDAttempt>10)&&socket.emit("start_chatting",WALLET.identifier(),num==0,function(data){self.lastSetWalletIDAttempt=(new Date).getTime()/1e3,num==self._firstAvailableChatServer&&self.addLine(null,"Lost chat feed link and attempted to correct. Please try sending your chat line again.",null,null)}):error_name=="invalid_id"&&self.handle()?multiAPI("store_chat_handle",{wallet_id:WALLET.identifier(),handle:self.handle()},function(data,endpoint){$.jqlog.info("Synced handle '"+self.handle()+"' to all servers.")}):num==self._firstAvailableChatServer&&self.addLine(null,error_message,null,null)})},self.hideChat=function(){self._hideChatWindow()},self.scrollToBottomIfNecessary=function(){if($("#chatContentInnerDiv").prop("scrollHeight")>=$("#chatContentInnerDiv").height()){var scrollTo_val=$("#chatContentInnerDiv").prop("scrollHeight")+"px";$("#chatContentInnerDiv").slimScroll({scrollTo:scrollTo_val})}},self.addLine=function(handle,text,is_op,is_private){var newLine=new ChatLineViewModel(handle,text,is_op,is_private);self.lines.push(newLine),self.lines().length>205&&self.lines.splice(0,5),handle==self.handle()&&(self.myLines.push(newLine),self.myLines().length>105&&self.myLines(self.lines.splice(0,5))),self.scrollToBottomIfNecessary()},self.onKeyUp=function(data,event){if(event.keyCode==13)CHAT_FEED.sendLine();else if(event.keyCode==38){var text=$("#chatTextBox").val();if(!text)self._historyKeyIndex=self.myLines().length-1;else{for(var i=self.myLines().length-1;i>=0;--i)if(self.myLines()[i].text()==text)break;if(i==-1||i==0)return;self._historyKeyIndex-=1}$("#chatTextBox").val(self.myLines()[self._historyKeyIndex].text())}else if(event.keyCode==40){var text=$("#chatTextBox").val();if(!text)return;for(var i=self.myLines().length-1;i>=0;--i)if(self.myLines()[i].text()==text)break;i!=-1&&(i==self.myLines().length-1?$("#chatTextBox").val(""):(self._historyKeyIndex+=1,$("#chatTextBox").val(self.myLines()[self._historyKeyIndex].text())))}else if(event.keyCode==9){var words=$("#chatTextBox").val().replace(/[ :]+$/g,"").split(" ");if(!words[words.length-1])return;var handles=[];for(var i=self.lines().length-1;i>=Math.max(self.lines().length-50,0);--i)self.lines()[i].HANDLE&&handles.push(self.lines()[i].HANDLE);handles=_.uniq(handles),handles=_.without(handles,self.handle());var toComplete=null,lastWord=words[words.length-1],subsequentTabbing=!1;handles.filter(function(e){return e==lastWord}).length&&self._handleTabCompletionPrefixText?(toComplete=self._handleTabCompletionPrefixText,subsequentTabbing=!0):(toComplete=words[words.length-1],self._handleTabCompletionPrefixText=toComplete);var matchingHandles=handles.filter(function(e){return e.toLowerCase().indexOf(toComplete.toLowerCase())==0});$.jqlog.debug("Chatbox tab competion on: '"+toComplete+"', subsequent tabbing: "+subsequentTabbing+", candidates: "+JSON.stringify(matchingHandles));if(!matchingHandles.length)return;self._handleTabCompletionIndex==null||self._handleTabCompletionIndex+1>=matchingHandles.length?self._handleTabCompletionIndex=0:self._handleTabCompletionIndex+=1;var choice=matchingHandles[self._handleTabCompletionIndex];$("#chatTextBox").val(words.slice(0,-1).join(" ")+(words.length==1?"":" ")+choice+(words.length==1?": ":" "))}},self.sendLine=function(){var text=$("#chatTextBox").val().trim();if(!text)return;assert(self.feedConnections.length>=1,"Not connected to any chat servers!");if(_.startsWith(text,"/")){var parts=text.replace("/","").split(" "),command=parts[0],args=parts.slice(1);for(var i=0;i<self.feedConnections.length;i++)self.feedConnections[i].socket.connected&&i<self._firstAvailableChatServer&&(self._firstAvailableChatServer=i),$.jqlog.debug("chat.sendLine(feed-"+i+"\\command): "+command+", args: "+JSON.stringify(args)),self.feedConnections[i].emit("command",command,args);$("#chatTextBox").val("")}else{function _doChatEmote(num){self.feedConnections[num].emit("emote",text,function(data){})}for(var i=0;i<self.feedConnections.length;i++)if(self.feedConnections[i].socket.connected){self._firstAvailableChatServer!=i&&($.jqlog.info("chat.sendLine: Chat server "+self._firstAvailableChatServer+" not connected. Sending out chat server "+i+" instead."),self._firstAvailableChatServer=i),$.jqlog.debug("chat.sendLine(feed-"+i+"\\emote): "+text),_doChatEmote(i);break}}}}ko.validation.rules.handleIsNotInUse={async:!0,message:"Handle is already in use",validator:function(val,self,callback){failoverAPI("is_chat_handle_in_use",{handle:val},function(isInUse,endpoint){return $.jqlog.debug("Handle in use: "+isInUse),CHAT_SET_HANDLE_MODAL.startEnable(!isInUse),$("#startChatBtn").prop("disabled",isInUse),callback(!isInUse)})}},ko.validation.rules.isValidHandle={validator:function(val,self){return val.match(/[A-Za-z0-9_-]{4,12}/g)},message:"Invalid handle, must be between 4 and 12 characters with only alphanumeric, underscore or hyphen allowed."},ko.validation.registerExtenders();function ChatSetHandleModalViewModel(){var self=this;self.shown=ko.observable(!1),self.startEnable=ko.observable(!1),self.newHandle=ko.observable("").extend({required:!0,throttle:600,isValidHandle:self,handleIsNotInUse:self}),self.validationModel=ko.validatedObservable({newHandle:self.newHandle}),self.resetForm=function(){self.newHandle(""),self.validationModel.errors.showAllMessages(!1)},self.submitForm=function(){if($("#startChatBtn").prop("disabled"))return;if(self.newHandle.isValidating()){setTimeout(function(){self.submitForm()},50);return}if(!self.validationModel.isValid())return self.validationModel.errors.showAllMessages(),!1;$("#chatSetHandleModal form").submit()},self.doAction=function(){if($("#startChatBtn").prop("disabled"))return;multiAPI("store_chat_handle",{wallet_id:WALLET.identifier(),handle:self.newHandle()},function(data,endpoint){self.hide(),CHAT_FEED.showChat()})},self.show=function(resetForm){typeof resetForm=="undefined"&&(resetForm=!0),resetForm&&self.resetForm(),self.shown(!0)},self.hide=function(){self.shown(!1)}}$(document).ready(function(){$("div.openChatPane").click(function(){$("#chatPane").is(":hidden")?CHAT_FEED.showChat():CHAT_FEED.hideChat()}),$("#chatTextBox").keydown(function(e){e.keyCode==9&&e.preventDefault()}),$("input[name=newHandle]").keydown(function(e){e.keyCode!=13&&$("#startChatBtn").prop("disabled",!0)}),$("#chatSetHandleModal form").submit(function(event){return!$("#startChatBtn").prop("disabled")})});
/*----------------js/components/balances.js---------------*/
function ChangeAddressLabelModalViewModel(){var self=this;self.shown=ko.observable(!1),self.address=ko.observable(null),self.existingLabel=ko.observable(null),self.newLabel=ko.observable("").trimmed().extend({required:!0,validation:{validator:function(val,self){return val.length<=75},message:"Invalid label (max 75 characters)",params:self}}),self.validationModel=ko.validatedObservable({newLabel:self.newLabel}),self.resetForm=function(){self.newLabel(""),self.validationModel.errors.showAllMessages(!1)},self.submitForm=function(){if(!self.validationModel.isValid())return self.validationModel.errors.showAllMessages(),!1;$("#changeAddressLabelModal form").submit()},self.doAction=function(){var addressHash=hashToB64(self.address()),label=_.stripTags($("<div/>").html(self.newLabel()).text());PREFERENCES.address_aliases[addressHash]=label,WALLET.storePreferences(function(data,endpoint){WALLET.getAddressObj(self.address()).label(label),self.shown(!1)}),trackEvent("Balances","ChangeAddressLabel")},self.show=function(address,existingLabel,resetForm){typeof resetForm=="undefined"&&(resetForm=!0),resetForm&&self.resetForm(),self.address(address),self.existingLabel(existingLabel),self.newLabel(existingLabel),self.shown(!0),selectText("newAddressLabel"),trackDialogShow("ChangeAddressLabel")},self.hide=function(){self.shown(!1)}}ko.validation.rules.canGetAddressPubKey={async:!0,message:"Can't find the public key for this address. Please make a transaction with it and try again.",validator:function(val,self,callback){if(self.addressType()!="armory")return!0;failoverAPI("get_pubkey_for_address",{address:val},function(data,endpoint){return self.armoryPubKey(data),data?callback(!0):callback(!1)})}};function CreateNewAddressModalViewModel(){var self=this;self.shown=ko.observable(!1),self.addressType=ko.observable(null),self.armoryPubKey=ko.observable(null),self.watchAddress=ko.observable("").extend({isValidBitcoinAddressIfSpecified:self,validation:[{validator:function(val,self){return self.addressType()=="watch"||self.addressType()=="armory"?val:!0},message:"This field is required.",params:self},{validator:function(val,self){return val?!WALLET.getAddressObj(val):!0},message:"This address is already in your wallet.",params:self}],canGetAddressPubKey:self}),self.description=ko.observable("").extend({required:!0,validation:{validator:function(val,self){return val.length<=70},message:"Address description is more than 70 characters long.",params:self}}),self.validationModel=ko.validatedObservable({description:self.description,watchAddress:self.watchAddress}),self.dispWindowTitle=ko.computed(function(){return self.addressType()=="normal"?"Create New Address":self.addressType()=="watch"?"Add Watch Address":"Add Armory Offline Address"},self),self.resetForm=function(){self.addressType(null),self.watchAddress(""),self.description(""),self.validationModel.errors.showAllMessages(!1)},self.submitForm=function(){if(self.addressType()=="armory"&&self.watchAddress.isValidating()){setTimeout(function(){self.submitForm()},50);return}if(!self.validationModel.isValid())return self.validationModel.errors.showAllMessages(),!1;$("#createNewAddressModal form").submit()},self.doAction=function(){var newAddress=null;self.addressType()=="normal"?newAddress=WALLET.addAddress(self.addressType()):(newAddress=self.watchAddress(),newAddress=WALLET.addAddress(self.addressType(),newAddress,self.armoryPubKey()));var newAddressHash=hashToB64(newAddress);self.addressType()=="normal"?PREFERENCES.num_addresses_used+=1:self.addressType()=="watch"?PREFERENCES.watch_only_addresses.push(newAddress):(assert(self.addressType()=="armory"),PREFERENCES.armory_offline_addresses.push({address:newAddress,pubkey_hex:self.armoryPubKey()}));var sanitizedDescription=_.stripTags(self.description());PREFERENCES.address_aliases[newAddressHash]=sanitizedDescription,WALLET.getAddressObj(newAddress).label(sanitizedDescription),WALLET.storePreferences(function(data,endpoint){self.shown(!1),self.addressType()!="normal"?setTimeout(function(){WALLET.refreshCounterpartyBalances([newAddress],checkURL)}):setTimeout(checkURL,800)}),trackEvent("Balances",self.addressType()=="normal"?"CreateNewAddress":self.addressType()=="watch"?"CreateNewWatchAddress":"CreateNewArmoryOfflineAddress")},self.show=function(addressType,resetForm){typeof resetForm=="undefined"&&(resetForm=!0),resetForm&&self.resetForm(),self.addressType(addressType),self.shown(!0),trackDialogShow(self.addressType()=="normal"?"CreateNewAddress":self.addressType()=="watch"?"CreateNewWatchAddress":"CreateNewArmoryOfflineAddress")},self.hide=function(){self.shown(!1)}}function SendModalViewModel(){var self=this;self.shown=ko.observable(!1),self.address=ko.observable(null),self.asset=ko.observable(),self.rawBalance=ko.observable(null),self.divisible=ko.observable(),self.destAddress=ko.observable("").trimmed().extend({required:!0,isValidBitcoinAddress:self,isNotSameBitcoinAddress:self}),self.quantity=ko.observable().extend({required:!0,isValidPositiveQuantity:self,isValidQtyForDivisibility:self,validation:{validator:function(val,self){return normalizeQuantity(self.rawBalance(),self.divisible())-parseFloat(val)<0?!1:!0},message:"Quantity entered exceeds your current balance.",params:self}}),self.normalizedBalance=ko.computed(function(){return self.address()===null||self.rawBalance()===null?null:normalizeQuantity(self.rawBalance(),self.divisible())},self),self.dispNormalizedBalance=ko.computed(function(){return smartFormat(self.normalizedBalance())},self),self.normalizedBalRemaining=ko.computed(function(){if(!isNumber(self.quantity()))return null;var curBalance=normalizeQuantity(self.rawBalance(),self.divisible()),balRemaining=Decimal.round((new Decimal(curBalance)).sub(parseFloat(self.quantity())),8,Decimal.MidpointRounding.ToEven).toFloat();return balRemaining<0?null:balRemaining},self),self.dispNormalizedBalRemaining=ko.computed(function(){return smartFormat(self.normalizedBalRemaining())},self),self.normalizedBalRemainingIsSet=ko.computed(function(){return self.normalizedBalRemaining()!==null},self),self.validationModel=ko.validatedObservable({destAddress:self.destAddress,quantity:self.quantity}),self.resetForm=function(){self.destAddress(""),self.quantity(null),self.validationModel.errors.showAllMessages(!1)},self.submitForm=function(){if(!self.validationModel.isValid())return self.validationModel.errors.showAllMessages(),!1;$("#sendModal form").submit()},self.maxAmount=function(){assert(self.normalizedBalance(),"No balance present?"),self.asset()==BTC?self.quantity(subFloat(self.normalizedBalance(),normalizeQuantity(MIN_FEE))):self.quantity(self.normalizedBalance())},self.doAction=function(){WALLET.doTransaction(self.address(),"create_send",{source:self.address(),destination:self.destAddress(),quantity:denormalizeQuantity(parseFloat(self.quantity()),self.divisible()),asset:self.asset(),_divisible:self.divisible()},function(txHash,data,endpoint,addressType,armoryUTx){var message="<b>Your funds "+(armoryUTx?"will be":"were")+" sent. ";WALLET.showTransactionCompleteDialog(message+ACTION_PENDING_NOTICE,message,armoryUTx)}),self.shown(!1),trackEvent("Balances","Send",self.asset())},self.show=function(fromAddress,asset,rawBalance,isDivisible,resetForm){if(asset==BTC&&rawBalance==null)return bootbox.alert("Cannot send <b class='notoAssetColor'>"+BTC+"</b> right now, as we cannot currently get"+" in touch with the server to get your balance. Please try again later.");assert(rawBalance,"Balance is null or undefined?"),typeof resetForm=="undefined"&&(resetForm=!0),resetForm&&self.resetForm(),self.address(fromAddress),self.asset(asset),self.rawBalance(rawBalance),self.divisible(isDivisible),self.shown(!0),trackDialogShow("Send")},self.hide=function(){self.shown(!1)}}var BalancesAddressInDropdownItemModel=function(address,label,wif){this.ADDRESS=address,this.LABEL=label,this.SELECT_LABEL=label?"<b>"+label+"</b><br/>"+address:address,this.WIF=wif},SweepAssetInDropdownItemModel=function(asset,rawBalance,normalizedBalance,assetInfo){this.ASSET=asset,this.RAW_BALANCE=rawBalance,this.NORMALIZED_BALANCE=normalizedBalance,this.SELECT_LABEL=asset+" (bal: "+normalizedBalance+")",this.ASSET_INFO=assetInfo},privateKeyValidator=function(required){return{required:required,validation:{validator:function(val,self){return(new CWPrivateKey(val)).isValid()},message:"Not a valid"+(USE_TESTNET?" TESTNET ":" ")+"private key.",params:self},rateLimit:{timeout:500,method:"notifyWhenChangesStop"}}};function SweepModalViewModel(){var self=this;self.shown=ko.observable(!1),self.notEnoughBTC=ko.observable(!1),self.privateKey=ko.observable("").trimmed().extend(privateKeyValidator(!0)),self.privateKeyForFees=ko.observable("").trimmed().extend(privateKeyValidator(!1)),self.addressForFeesBalanceMessage=ko.observable(""),self.addressForFeesBalance=ko.observable(0),self.availableAssetsToSweep=ko.observableArray([]),self.selectedAssetsToSweep=ko.observableArray([]).extend({required:!0,validation:{validator:function(val,self,callback){var sweepingCost=0;for(var i=0;i<self.selectedAssetsToSweep().length;i++){var assetName=self.selectedAssetsToSweep()[i],assetCost=self.sweepAssetsCost[assetName];sweepingCost+=parseInt(assetCost)}self.txoutsCountForPrivateKey>1&&(self.mergeCost=Math.ceil(self.txoutsCountForPrivateKey/4)*MIN_FEE,sweepingCost+=self.mergeCost);var totalBtcBalanceForSweeep=self.btcBalanceForPrivateKey()+Math.max(0,self.addressForFeesBalance()-MIN_FEE);return self.missingBtcForFees=Math.max(MULTISIG_DUST_SIZE,sweepingCost-self.btcBalanceForPrivateKey()),totalBtcBalanceForSweeep<sweepingCost?(this.message="We're not able to sweep all of the tokens you selected. Please send "+normalizeQuantity(self.missingBtcForFees)+" "+BTC+" transactions to address "+self.addressForPrivateKey()+" and try again."+" OR use the following fields to pay fees with another address",self.notEnoughBTC(!0),!1):(self.btcBalanceForPrivateKey()>=sweepingCost&&(self.privateKeyForFees(""),self.addressForFeesBalance(0)),self.notEnoughBTC(!1),!0)},params:self}}),self.destAddress=ko.observable("").trimmed().extend({required:!0,isValidBitcoinAddress:self}),self.availableAddresses=ko.observableArray([]),self.availableOldAddresses=ko.observableArray([]),self.excludedOldAddresses=ko.observableArray([]),self.privateKeyValidated=ko.validatedObservable({privateKey:self.privateKey}),self.privateKeyForFeesValidated=ko.validatedObservable({privateKeyForFees:self.privateKeyForFees}),self.addressForPrivateKey=ko.computed(function(){return self.privateKeyValidated.isValid()?(new CWPrivateKey(self.privateKey())).getAddress():null},self),self.addressForPrivateKeyForFees=ko.computed(function(){return!self.privateKeyForFeesValidated.isValid()||self.privateKeyForFees()==""?(self.addressForFeesBalanceMessage(""),self.addressForFeesBalance(0),null):(new CWPrivateKey(self.privateKeyForFees())).getAddress()},self),self.btcBalanceForPrivateKey=ko.observable(0),self.sweepingProgressionMessage=ko.observable(""),self.sweepingProgressWidth=ko.observable("0%"),self.txoutsCountForPrivateKey=0,self.sweepingCurrentStep=1,self.missingBtcForFees=0,self.sweepAssetsCost={},self.mergeCost=0,self.fromOldWallet=ko.observable(!1),self.oldPrivateKey=ko.observable(""),self.oldPrivateKey.subscribe(function(value){self.fromOldWallet()&&self.privateKey(value)}),self.validationModel=ko.validatedObservable({privateKey:self.privateKey,selectedAssetsToSweep:self.selectedAssetsToSweep,destAddress:self.destAddress}),self.addressForPrivateKey.subscribe(function(address){self.sweepAssetsCost={},self.sweepAssetsCost[BTC]=MIN_FEE+REGULAR_DUST_SIZE;if(!address||address=="")return;failoverAPI("get_normalized_balances",{addresses:[address]},function(balancesData,endpoint){var assets=[],assetInfo=null;for(var i=0;i<balancesData.length;i++)assets.push(balancesData[i].asset);getAssetInfo(assets).then(function(assetsInfo){for(var i=0;i<balancesData.length;i++){assetInfo=$.grep(assetsInfo,function(e){return e["asset"]==balancesData[i]["asset"]})[0],self.availableAssetsToSweep.push(new SweepAssetInDropdownItemModel(balancesData[i].asset,balancesData[i].quantity,balancesData[i].normalized_quantity,assetInfo));var cost=0;balancesData[i].quantity>0&&(cost+=MIN_FEE+2*MULTISIG_DUST_SIZE),assetInfo["owner"]==self.addressForPrivateKey()&&(cost+=MIN_FEE+4*MULTISIG_DUST_SIZE),self.sweepAssetsCost[balancesData[i].asset]=cost}WALLET.retriveBTCAddrsInfo([address],function(data){self.btcBalanceForPrivateKey(0),self.txoutsCountForPrivateKey=0;var unconfirmedRawBal=data[0].confirmedRawBal;if(unconfirmedRawBal>0){var viewModel=new SweepAssetInDropdownItemModel(BTC,unconfirmedRawBal,normalizeQuantity(unconfirmedRawBal));self.availableAssetsToSweep.unshift(viewModel),assets.push(BTC),self.btcBalanceForPrivateKey(data[0].confirmedRawBal),self.txoutsCountForPrivateKey=data[0].rawUtxoData.length}$("#availableAssetsToSweep").val(assets),$("#availableAssetsToSweep").change()})})})}),self.addressForPrivateKeyForFees.subscribe(function(address){if(!address||address==""){self.addressForFeesBalanceMessage(""),self.addressForFeesBalance(0);return}WALLET.retriveBTCAddrsInfo([address],function(data){$.jqlog.debug(data),self.addressForFeesBalanceMessage(normalizeQuantity(data[0].confirmedRawBal)+" "+BTC+" in "+address),self.addressForFeesBalance(data[0].confirmedRawBal)})}),self.resetForm=function(fromOldWallet){self.fromOldWallet(fromOldWallet),self.privateKey(""),self.availableAssetsToSweep([]),self.selectedAssetsToSweep([]),self.destAddress(""),self.sweepingProgressionMessage(""),self.sweepingProgressWidth("0%"),self.addressForFeesBalanceMessage(""),self.addressForFeesBalance(0),self.privateKeyForFees(""),self.notEnoughBTC(!1),self.txoutsCountForPrivateKey=0,self.sweepingCurrentStep=1,self.missingBtcForFees=0,self.mergeCost=0,self.availableAddresses([]);var addresses=WALLET.getAddressesList(!0);for(var i=0;i<addresses.length;i++)self.availableAddresses.push(new BalancesAddressInDropdownItemModel(addresses[i][0],addresses[i][1]));self.availableOldAddresses([]),self.fromOldWallet()&&WALLET.BITCOIN_WALLET.getOldAddressesInfos(function(data){for(var address in data)self.excludedOldAddresses.indexOf(address)==-1&&self.availableOldAddresses.push(new BalancesAddressInDropdownItemModel(address,address,data[address][BTC].privkey))}),self.validationModel.errors.showAllMessages(!1)},self.showNextMessage=function(message){var width=self.sweepingCurrentStep*(100/self.availableAssetsToSweep().length);self.sweepingProgressWidth(width+"%");var message="Step "+self.sweepingCurrentStep+"/"+self.availableAssetsToSweep().length+" : "+message;self.sweepingProgressionMessage(message),$.jqlog.debug(message)},self.submitForm=function(){if(!self.validationModel.isValid())return self.validationModel.errors.showAllMessages(),!1;$("#sweepModal form").submit()},self._sweepCompleteDialog=function(opsComplete){var assetDisplayList=[];for(var i=0;i<opsComplete.length;i++)opsComplete[i].result?opsComplete[i]["type"]=="send"?assetDisplayList.push("<li><b class='notoAssetColor'>"+opsComplete[i].asset+":</b> Sent"+" <b class='notoQuantityColor'>"+opsComplete[i].normalized_quantity+"</b>"+" <b class='notoAssetColor'>"+opsComplete[i].asset+"</b>"+" to <b class='notoAddrColor'>"+getAddressLabel(opsComplete[i].to)+"</b></li>"):(assert(opsComplete[i]["type"]=="transferOwnership"),assetDisplayList.push("<li><b class='notoAssetColor'>"+opsComplete[i].asset+":</b> Transferred ownership"+" to <b class='notoAddrColor'>"+getAddressLabel(opsComplete[i].to)+"</b></li>")):opsComplete[i]["type"]=="send"?assetDisplayList.push("<li><b class='notoAssetColor'>"+opsComplete[i].asset+"</b>: Funds not sent due to failure.</li>"):(assert(opsComplete[i]["type"]=="transferOwnership"),assetDisplayList.push("<li><b class='notoAssetColor'>"+opsComplete[i].asset+"</b>: Ownership not transferred due to failure.</li>"));var alertCallback=null;self.fromOldWallet()&&self.availableOldAddresses().length>1&&(alertCallback=function(){self.show(!0,!0,self.addressForPrivateKey())}),bootbox.alert("The sweep from address <b class='notoAddrColor'>"+self.addressForPrivateKey()+"</b> is complete.<br/>Sweep results:<br/><br/><ul>"+assetDisplayList.join("")+"</ul>"+ACTION_PENDING_NOTICE,alertCallback)},self.waitTxoutCountIncrease=function(callback){setTimeout(function(){WALLET.retriveBTCAddrsInfo([self.addressForPrivateKey()],function(data){$.jqlog.debug("initial txo count: "+self.txoutsCountForPrivateKey),$.jqlog.debug("new txo count: "+data[0].rawUtxoData.length),self.txoutsCountForPrivateKey<data[0].rawUtxoData.length?(self.txoutsCountForPrivateKey=data[0].rawUtxoData.length,callback()):self.waitTxoutCountIncrease(callback)})},TRANSACTION_DELAY)},self.sendBtcForFees=function(callback){var cwk=new CWPrivateKey(self.privateKeyForFees()),pubkey=cwk.getPub();self.txoutsCountForPrivateKey==1&&(self.missingBtcForFees+=2*MIN_FEE);var sweepBTC=!1;for(var i=0;i<self.selectedAssetsToSweep().length;i++){var assetName=self.selectedAssetsToSweep()[i];assetName==BTC&&(sweepBTC=!0)}sweepBTC&&(self.missingBtcForFees+=REGULAR_DUST_SIZE),$.jqlog.debug("missingBtcForFees: "+self.missingBtcForFees);var sendData={source:self.addressForPrivateKeyForFees(),destination:self.addressForPrivateKey(),quantity:self.missingBtcForFees,asset:BTC,encoding:"multisig",pubkey:pubkey,allow_unconfirmed_inputs:!0},onTransactionBroadcasted=function(sendTxHash,endpoint){$.jqlog.debug("waiting "+TRANSACTION_DELAY+"ms");var newBalance=self.btcBalanceForPrivateKey()+self.missingBtcForFees;self.btcBalanceForPrivateKey(newBalance),self.waitTxoutCountIncrease(callback)},onTransactionCreated=function(unsignedTxHex,numTotalEndpoints,numConsensusEndpoints){var signedHex=cwk.checkAndSignRawTransaction(unsignedTxHex,self.addressForPrivateKey());WALLET.broadcastSignedTx(signedHex,onTransactionBroadcasted,onBroadcastError)},onTransactionError=function(){arguments.length==4?(self.shown(!1),bootbox.alert(arguments[1])):(self.shown(!1),bootbox.alert("Consensus Error!"))},onConsensusError=onTransactionError,onSysError=onTransactionError,onBroadcastError=onTransactionError,message="Sending "+normalizeQuantity(self.missingBtcForFees)+" "+BTC+" from "+self.addressForPrivateKeyForFees()+" to pay sweeping fees.";self.sweepingProgressionMessage(message),$.jqlog.debug(message),multiAPIConsensus("create_send",sendData,onTransactionCreated,onConsensusError,onSysError)},self.mergeOutputs=function(key,pubkey,callback,fees){if(self.txoutsCountForPrivateKey>1){var message="Preparing output for transactions chaining";self.sweepingProgressionMessage(message),$.jqlog.debug(message),fees=typeof fees=="undefined"?self.mergeCost:fees,$.jqlog.debug("MERGE COST: "+normalizeQuantity(fees));var sendData={source:self.addressForPrivateKey(),destination:self.addressForPrivateKey(),quantity:self.btcBalanceForPrivateKey()-fees,asset:BTC,encoding:"multisig",pubkey:pubkey,allow_unconfirmed_inputs:!0,fee:fees},onTransactionError=function(){if(arguments.length==4){var match=arguments[1].match(new RegExp("Insufficient "+BTC_NAME+"s at address [^\\s]+. \\(Need approximately ([\\d]+\\.[\\d]+) "+BTC+"\\)"));if(match!=null){$.jqlog.debug(arguments[1]);var minEstimateFee=denormalizeQuantity(parseFloat(match[1]))-(self.btcBalanceForPrivateKey()-self.mergeCost);$.jqlog.debug("Insufficient fees. Need approximately "+normalizeQuantity(minEstimateFee)),minEstimateFee>self.btcBalanceForPrivateKey()?(self.shown(!1),bootbox.alert(arguments[1])):($.jqlog.debug("Retry with estimated fees."),setTimeout(function(){self.mergeOutputs(key,pubkey,callback,minEstimateFee)},500))}else self.shown(!1),bootbox.alert(arguments[1])}else bootbox.alert("Consensus Error!")},onConsensusError=onTransactionError,onSysError=onTransactionError,onBroadcastError=onTransactionError,onTransactionBroadcasted=function(sendTxHash,endpoint){$.jqlog.debug("waiting "+TRANSACTION_DELAY+"ms"),setTimeout(function(){callback()},TRANSACTION_DELAY)},onTransactionCreated=function(unsignedTxHex,numTotalEndpoints,numConsensusEndpoints){var signedHex=key.checkAndSignRawTransaction(unsignedTxHex,self.addressForPrivateKey());WALLET.broadcastSignedTx(signedHex,onTransactionBroadcasted,onBroadcastError)};$.jqlog.debug("Create merge outputs transactions"),multiAPIConsensus("create_send",sendData,onTransactionCreated,onConsensusError,onSysError)}else callback()},self._doTransferAsset=function(selectedAsset,key,pubkey,opsComplete,callback){assert(selectedAsset.ASSET&&selectedAsset.ASSET_INFO),self.showNextMessage("Transferring asset "+selectedAsset.ASSET+" from "+self.addressForPrivateKey()+" to "+self.destAddress());var transferData={source:self.addressForPrivateKey(),quantity:0,asset:selectedAsset.ASSET,divisible:selectedAsset.ASSET_INFO.divisible,description:selectedAsset.ASSET_INFO.description,callable_:selectedAsset.ASSET_INFO.callable,call_date:selectedAsset.ASSET_INFO.call_date?selectedAsset.ASSET_INFO.call_date:null,call_price:selectedAsset.ASSET_INFO.call_price?parseFloat(selectedAsset.ASSET_INFO.call_price):null,transfer_destination:self.destAddress(),encoding:"multisig",pubkey:pubkey,allow_unconfirmed_inputs:!0};multiAPIConsensus("create_issuance",transferData,function(unsignedTxHex,numTotalEndpoints,numConsensusEndpoints){var signedHex=key.checkAndSignRawTransaction(unsignedTxHex,self.destAddress());WALLET.broadcastSignedTx(signedHex,function(issuanceTxHash,endpoint){opsComplete.push({type:"transferOwnership",result:!0,asset:selectedAsset.ASSET,from:self.addressForPrivateKey(),to:self.destAddress()}),PENDING_ACTION_FEED.add(issuanceTxHash,"issuances",transferData);var newBtcBalance=CWBitcore.extractChangeTxoutValue(transferData.source,unsignedTxHex);return $.jqlog.debug("New "+BTC+" balance: "+newBtcBalance),self.btcBalanceForPrivateKey(newBtcBalance),self.sweepingCurrentStep++,callback()},function(jqXHR,textStatus,errorThrown,endpoint){return $.jqlog.debug("broadcasting error: "+textStatus),callback(!0,{type:"transferOwnership",result:!1,asset:selectedAsset.ASSET,selectedAsset:selectedAsset})})},function(unmatchingResultsList){return opsComplete.push({type:"transferOwnership",result:!1,asset:selectedAsset.ASSET,selectedAsset:selectedAsset}),self.showSweepError(selectedAsset.ASSET,opsComplete)},function(jqXHR,textStatus,errorThrown,endpoint){return $.jqlog.debug("onSysError: "+textStatus),callback(!0,{type:"transferOwnership",result:!1,asset:selectedAsset.ASSET,selectedAsset:selectedAsset})})},self._doSendAsset=function(asset,key,pubkey,opsComplete,adjustedBTCQuantity,callback){$.jqlog.debug("_doSendAsset: "+asset),asset==BTC?assert(adjustedBTCQuantity!==null):assert(adjustedBTCQuantity===null);var selectedAsset=ko.utils.arrayFirst(self.availableAssetsToSweep(),function(item){return asset==item.ASSET}),sendTx=null,i=null;$.jqlog.debug("btcBalanceForPrivateKey: "+self.btcBalanceForPrivateKey());var quantity=asset==BTC?self.btcBalanceForPrivateKey()-MIN_FEE:selectedAsset.RAW_BALANCE,normalizedQuantity=asset==BTC?normalizeQuantity(quantity):selectedAsset.NORMALIZED_BALANCE;assert(selectedAsset);if(!quantity){if(asset==XCP||asset==BTC)return callback();self._doTransferAsset(selectedAsset,key,pubkey,opsComplete,callback);return}self.showNextMessage("Sweeping "+normalizedQuantity+" "+selectedAsset.ASSET+" from "+self.addressForPrivateKey()+" to "+self.destAddress());var sendData={source:self.addressForPrivateKey(),destination:self.destAddress(),quantity:quantity,asset:selectedAsset.ASSET,encoding:"multisig",pubkey:pubkey,allow_unconfirmed_inputs:!0};multiAPIConsensus("create_send",sendData,function(unsignedTxHex,numTotalEndpoints,numConsensusEndpoints){var signedHex=key.checkAndSignRawTransaction(unsignedTxHex,self.destAddress());WALLET.broadcastSignedTx(signedHex,function(sendTxHash,endpoint){opsComplete.push({type:"send",result:!0,asset:selectedAsset.ASSET,from:self.addressForPrivateKey(),to:self.destAddress(),normalized_quantity:normalizedQuantity}),sendData._divisible=selectedAsset.RAW_BALANCE!=selectedAsset.NORMALIZED_BALANCE,PENDING_ACTION_FEED.add(sendTxHash,"sends",sendData);if(selectedAsset.ASSET!=BTC){var newBtcBalance=CWBitcore.extractChangeTxoutValue(sendData.source,unsignedTxHex);$.jqlog.debug("New "+BTC+" balance: "+newBtcBalance),self.btcBalanceForPrivateKey(newBtcBalance)}if(selectedAsset.ASSET==XCP||selectedAsset.ASSET==BTC||selectedAsset.ASSET_INFO["owner"]!=self.addressForPrivateKey())return self.sweepingCurrentStep++,callback();$.jqlog.debug("waiting "+TRANSACTION_DELAY+"ms"),setTimeout(function(){self._doTransferAsset(selectedAsset,key,pubkey,opsComplete,callback)},TRANSACTION_DELAY)},function(jqXHR,textStatus,errorThrown,endpoint){return $.jqlog.debug("Transaction error: "+textStatus),callback(!0,{type:"send",result:!1,asset:selectedAsset.ASSET,selectedAsset:selectedAsset})})},function(unmatchingResultsList){opsComplete.push({type:"send",result:!1,asset:selectedAsset.ASSET,selectedAsset:selectedAsset}),self.showSweepError(selectedAsset.ASSET,opsComplete)},function(jqXHR,textStatus,errorThrown,endpoint){return $.jqlog.debug("onSysError error: "+textStatus),callback(!0,{type:"send",result:!1,asset:selectedAsset.ASSET,selectedAsset:selectedAsset})})},self.showSweepError=function(asset,opsComplete){$.jqlog.debug("Error sweeping "+asset),self.shown(!1),self._sweepCompleteDialog(opsComplete)},self.doAction=function(){var cwk=new CWPrivateKey(self.privateKey()),pubkey=cwk.getPub(),sendsToMake=[],opsComplete=[],selectedAsset=null,hasBTC=!1;for(var i=0;i<self.selectedAssetsToSweep().length;i++)selectedAsset=self.selectedAssetsToSweep()[i],selectedAsset==BTC?hasBTC=i:sendsToMake.push([selectedAsset,cwk,pubkey,opsComplete,null]);hasBTC!==!1&&sendsToMake.push([BTC,cwk,pubkey,opsComplete,self.btcBalanceForPrivateKey()]);var total=sendsToMake.length,sendParams=!1,retryCounter={},doSweep=function(retry,failedTx){retry!==!0||sendParams===!1?sendParams=sendsToMake.shift():retry&&(sendParams[0]in retryCounter?retryCounter[sendParams[0]]<TRANSACTION_MAX_RETRY?(retryCounter[sendParams[0]]++,$.jqlog.debug("retry count: "+retryCounter[sendParams[0]])):(sendParams=undefined,opsComplete.push(failedTx),$.jqlog.debug("max retry.. stopping")):(retryCounter[sendParams[0]]=1,$.jqlog.debug("retry count: 1"))),sendParams===undefined?(self.shown(!1),self._sweepCompleteDialog(opsComplete)):retry&&failedTx["type"]=="transferOwnership"?self._doTransferAsset(failedTx.selectedAsset,sendParams[1],sendParams[2],opsComplete,function(retry,failedTx){$.jqlog.debug("waiting "+TRANSACTION_DELAY+"ms"),setTimeout(function(){doSweep(retry,failedTx)},TRANSACTION_DELAY)}):self._doSendAsset(sendParams[0],sendParams[1],sendParams[2],sendParams[3],sendParams[4],function(retry,failedTx){$.jqlog.debug("waiting "+TRANSACTION_DELAY+"ms"),setTimeout(function(){doSweep(retry,failedTx)},TRANSACTION_DELAY)})},launchSweep=function(){sendsToMake.length==1&&sendsToMake[0][0]==BTC?doSweep():self.mergeOutputs(cwk,pubkey,doSweep)};trackEvent("Balances",self.fromOldWallet()?"SweepFromOldWallet":"Sweep"),self.missingBtcForFees>0&&self.privateKeyForFeesValidated.isValid()!=""?self.sendBtcForFees(launchSweep):launchSweep()},self.show=function(resetForm,fromOldWallet,excludeOldAddress){typeof resetForm=="undefined"&&(resetForm=!0),typeof fromOldWallet=="undefined"&&(fromOldWallet=!1),typeof excludeOldAddress!="undefined"&&self.excludedOldAddresses.push(excludeOldAddress),resetForm&&self.resetForm(fromOldWallet),self.shown(!0),trackDialogShow(fromOldWallet?"SweepFromOldWallet":"Sweep")},self.hide=function(){self.shown(!1)}}function SignMessageModalViewModel(){var self=this;self.shown=ko.observable(!1),self.address=ko.observable(null),self.message=ko.observable("").extend({required:!0}),self.signatureFormat=ko.observable("base64"),self.signedMessage=ko.observable(),self.validationModel=ko.validatedObservable({message:self.message}),self.resetForm=function(){self.address(null),self.message(""),self.signedMessage(""),self.validationModel.errors.showAllMessages(!1)},self.submitForm=function(){if(!self.validationModel.isValid())return self.validationModel.errors.showAllMessages(),!1;$("#signMessageModal form").submit()},self.show=function(address,resetForm){typeof resetForm=="undefined"&&(resetForm=!0),resetForm&&self.resetForm(),self.address(address),self.shown(!0),trackDialogShow("SignMessage")},self.hide=function(){self.shown(!1)},self.doAction=function(){assert(self.validationModel.isValid(),"Cannot sign");var key=WALLET.getAddressObj(self.address()).KEY,format=self.signatureFormat()=="base64"?"base64":"hex",signedMessage=key.signMessage(self.message(),format);self.signedMessage(signedMessage),$("#signedMessage").effect("highlight",{},1500),trackEvent("Balances","SignMessage")}}function TestnetBurnModalViewModel(){var self=this;self.shown=ko.observable(!1),self.address=ko.observable(""),self.btcAlreadyBurned=ko.observable(null),self.btcBurnQuantity=ko.observable("").extend({required:!0,isValidPositiveQuantity:self,validation:[{validator:function(val,self){return parseFloat(val)>0&&parseFloat(val)<=MAX_BURN_PER_ADDRESS},message:"Quantity entered must be between 0 and "+MAX_BURN_PER_ADDRESS+" "+BTC+".",params:self},{validator:function(val,self){return parseFloat(val)<=WALLET.getBalance(self.address(),BTC)-normalizeQuantity(MIN_FEE)},message:"The quantity of "+BTC+" entered exceeds your available balance.",params:self},{validator:function(val,self){return!(parseFloat(val)>MAX_BURN_PER_ADDRESS-self.btcAlreadyBurned())},message:"You can only burn <b>"+MAX_BURN_PER_ADDRESS+" "+BTC+"</b> total for any given address. Even over multiple burns, the total quantity must be less than <b>"+MAX_BURN_PER_ADDRESS+" "+BTC+"</b>.",params:self}]}),self.quantityXCPToBeCreated=ko.computed(function(){return!self.btcBurnQuantity()||!parseFloat(self.btcBurnQuantity())?null:burnDetermineEarned(WALLET.networkBlockHeight(),self.btcBurnQuantity())},self),self.dispQuantityXCPToBeCreated=ko.computed(function(){return numberWithCommas(self.quantityXCPToBeCreated())},self),self.maxPossibleBurn=ko.computed(function(){return self.btcAlreadyBurned()===null?null:Math.min(MAX_BURN_PER_ADDRESS-self.btcAlreadyBurned(),WALLET.getAddressObj(self.address()).getAssetObj(BTC).normalizedBalance())},self),self.validationModel=ko.validatedObservable({btcBurnQuantity:self.btcBurnQuantity}),self.resetForm=function(){self.btcBurnQuantity(""),self.validationModel.errors.showAllMessages(!1)},self.submitForm=function(){if(!self.validationModel.isValid())return self.validationModel.errors.showAllMessages(),!1;$("#testnetBurnModal form").submit()},self.doAction=function(){WALLET.doTransaction(self.address(),"create_burn",{source:self.address(),quantity:denormalizeQuantity(self.btcBurnQuantity())},function(txHash,data,endpoint,addressType,armoryUTx){self.shown(!1);var message="You "+(armoryUTx?"will be burning":"have burned")+" <b class='notoQuantityColor'>"+self.btcBurnQuantity()+"</b>"+" <b class='notoAssetColor'>"+BTC+"</b> for approximately"+" <b class='notoQuantityColor'>"+self.quantityXCPToBeCreated()+"</b>"+" <b class='notoAssetColor'>"+XCP+"</b>. ";WALLET.showTransactionCompleteDialog(message+ACTION_PENDING_NOTICE,message,armoryUTx)}),trackEvent("Balances","TestnetBurn")},self.show=function(address,resetForm){typeof resetForm=="undefined"&&(resetForm=!0),resetForm&&self.resetForm(),self.address(address),failoverAPI("get_burns",{filters:{field:"source",op:"==",value:address}},function(data,endpoint){var totalBurned=0;for(var i=0;i<data.length;i++)totalBurned+=data[i].burned;self.btcAlreadyBurned(normalizeQuantity(totalBurned)),self.shown(!0),trackDialogShow("TestnetBurn")})},self.hide=function(){self.shown(!1)}}function DisplayPrivateKeyModalViewModel(){var self=this;self.shown=ko.observable(!1),self.address=ko.observable(null),self.privateKeyText=ko.observable(null),self.resetForm=function(){self.address(null),self.privateKeyText(null)},self.show=function(address,resetForm){typeof resetForm=="undefined"&&(resetForm=!0),resetForm&&self.resetForm(),self.address(address),self.shown(!0),trackDialogShow("DisplayPrivateKey")},self.hide=function(){self.shown(!1)},self.displayPrivateKey=function(){var wif=WALLET.getAddressObj(self.address()).KEY.getWIF();self.privateKeyText(wif),trackEvent("Balances","DisplayPrivateKey")}}function BroadcastModalViewModel(){var self=this;self.addressObj=null,self.shown=ko.observable(!1),self.address=ko.observable(null).extend({required:!0}),self.textValue=ko.observable("").extend({required:!0}),self.numericalValue=ko.observable(-1).extend({number:!0}),self.feeFraction=ko.observable(0).extend({max:42.94967295,isValidPositiveQuantityOrZero:self}),self.broadcastDate=ko.observable(new Date).extend({date:!0}),self.validationModel=ko.validatedObservable({address:self.address,textValue:self.textValue,numericalValue:self.numericalValue,feeFraction:self.feeFraction,broadcastDate:self.broadcastDate}),self.resetForm=function(){self.addressObj=null,self.address(null),self.textValue(""),self.numericalValue(-1),self.feeFraction(0),self.broadcastDate(new Date),self.validationModel.errors.showAllMessages(!1)},self.show=function(addressObj,resetForm){typeof resetForm=="undefined"&&(resetForm=!0),resetForm&&self.resetForm(),self.addressObj=addressObj,self.address(self.addressObj.ADDRESS),self.shown(!0),trackDialogShow("Broadcast")},self.hide=function(){self.shown(!1)},self.submitForm=function(){if(!self.validationModel.isValid())return self.validationModel.errors.showAllMessages(),!1;$("#broadcastModal form").submit()},self.doAction=function(){var params={source:self.address(),fee_fraction:Decimal.round((new Decimal(self.feeFraction())).div(100),8,Decimal.MidpointRounding.ToEven).toFloat(),text:self.textValue(),timestamp:self.broadcastDate()?parseInt(self.broadcastDate().getTime()/1e3):null,value:parseFloat(self.numericalValue())},onSuccess=function(txHash,data,endpoint,addressType,armoryUTx){self.hide(),WALLET.showTransactionCompleteDialog("Broadcast transmitted. "+ACTION_PENDING_NOTICE,"Broadcast to be transmitted",armoryUTx)},onError=function(jqXHR,textStatus,errorThrown,endpoint){self.hide(),bootbox.alert(textStatus)};WALLET.doTransaction(self.address(),"create_broadcast",params,onSuccess,onError),trackEvent("Balances","Broadcast")}}function SignTransactionModalViewModel(){var self=this;self.shown=ko.observable(!1),self.address=ko.observable(null),self.unsignedTx=ko.observable("").extend({required:!0}),self.signedTx=ko.observable(),self.validTx=ko.observable(!1),self.validationModel=ko.validatedObservable({unsignedTx:self.unsignedTx}),self.resetForm=function(){self.address(null),self.unsignedTx(""),self.signedTx(""),self.validTx(!1),self.validationModel.errors.showAllMessages(!1)},self.show=function(address,resetForm){typeof resetForm=="undefined"&&(resetForm=!0),resetForm&&self.resetForm(),self.address(address),self.shown(!0),trackDialogShow("SignTransaction")},self.hide=function(){self.shown(!1)},self.signTransaction=function(){assert(self.validationModel.isValid(),"Cannot sign");var cwk=WALLET.getAddressObj(self.address()).KEY,signed="";try{signed=cwk.signRawTransaction(self.unsignedTx()),self.validTx(!0)}catch(e){signed=e.message,self.validTx(!1)}self.signedTx(signed),$("#signedMessage").effect("highlight",{},1500),trackEvent("Balances","SignTransaction")},self.signAndBroadcastTransaction=function(){self.signTransaction(),trackEvent("Balances","BroadcastTransaction");if(self.validTx()){var onSuccess=function(txHash,endpoint){self.shown(!1),bootbox.alert("Your transaction were broacasted successfully:<br /><br /><b>"+txHash+"</b>")};WALLET.broadcastSignedTx(self.signedTx(),onSuccess,defaultErrorHandler)}}}function ArmoryBroadcastTransactionModalViewModel(){var self=this;self.shown=ko.observable(!1),self.address=ko.observable(null),self.signedTx=ko.observable("").extend({required:!0}),self.validationModel=ko.validatedObservable({signedTx:self.signedTx}),self.resetForm=function(){self.address(null),self.signedTx(""),self.validationModel.errors.showAllMessages(!1)},self.show=function(address,resetForm){typeof resetForm=="undefined"&&(resetForm=!0),resetForm&&self.resetForm(),self.address(address),self.shown(!0),trackDialogShow("ArmoryBroadcastTransaction")},self.hide=function(){self.shown(!1)},self.submitForm=function(){if(!self.validationModel.isValid())return self.validationModel.errors.showAllMessages(),!1;$("#armoryBroadcastTransactionModal form").submit()},self.doAction=function(){var onSuccess=function(txHash,data,endpoint,addressType,armoryUTx){self.hide();var message="Transaction successful broadcast!<br/><br/>Transaction ID: "+txHash;WALLET.showTransactionCompleteDialog(message,message,armoryUTx)};failoverAPI("convert_armory_signedtx_to_raw_hex",{signed_tx_ascii:self.signedTx()},function(data,endpoint){WALLET.broadcastSignedTx(data,onSuccess)}),trackEvent("Balances","ArmoryBroadcastTransaction")}};
/*----------------js/components/balances_assets.js---------------*/
ko.validation.rules.assetNameIsTaken={async:!0,message:"Token name is already taken",validator:function(val,self,callback){failoverAPI("get_issuances",{filters:{field:"asset",op:"==",value:val}},function(data,endpoint){return data.length?callback(!1):callback(!0)})}},ko.validation.rules.assetNameExists={async:!0,message:"Token name does not exist",validator:function(val,self,callback){failoverAPI("get_issuances",{filters:{field:"asset",op:"==",value:val}},function(data,endpoint){return $.jqlog.debug("Asset exists: "+data.length),data.length?callback(!0):callback(!1)})}},ko.validation.rules.isValidAssetNameLength={validator:function(val,self){var n=0;for(var i=0;i<val.length;i++)n*=26,assert(B26_DIGITS.indexOf(val[i])!=-1),n+=B26_DIGITS.indexOf(val[i]);return assert(n>=Math.pow(26,3)),n<=MAX_INT},message:"Asset name is too long, or too short"},ko.validation.rules.isValidAssetDescription={validator:function(val,self){return byteCount(val)<=MAX_ASSET_DESC_LENGTH},message:"Token description is more than "+MAX_ASSET_DESC_LENGTH+" bytes long."},ko.validation.registerExtenders();function CreateAssetModalViewModel(){var self=this;self.shown=ko.observable(!1),self.address=ko.observable(""),self.name=ko.observable("").extend({required:!0,pattern:{message:"Must contain uppercase letters only (A-Z), be at least 4 characters in length, and cannot start with 'A'.",params:"^[B-Z][A-Z]{3,}$"},isValidAssetNameLength:self,assetNameIsTaken:self}),self.description=ko.observable("").extend({required:!1,isValidAssetDescription:self}),self.divisible=ko.observable(!0),self.quantity=ko.observable().extend({required:!0,isValidPositiveQuantityOrZero:self,isValidQtyForDivisibility:self}),self.callable=ko.observable(!1),self.callDate=ko.observable(new Date((new Date).getTime()+2592e6)).extend({date:!0,required:{message:"Call date is required if the token is callable",onlyIf:function(){return self.callable()===!0}}}),self.callPrice=ko.observable(0).extend({required:{message:"Call price is required if the token is callable",onlyIf:function(){return self.callable()===!0}},isValidPositiveQuantityOrZero:self}),self.validationModel=ko.validatedObservable({name:self.name,description:self.description,quantity:self.quantity,callDate:self.callDate,callPrice:self.callPrice}),self.resetForm=function(){self.name(""),self.description(""),self.divisible(!0),self.quantity(null),self.validationModel.errors.showAllMessages(!1)},self.submitForm=function(){if(self.name.isValidating()){setTimeout(function(){self.submitForm()},50);return}if(!self.validationModel.isValid())return self.validationModel.errors.showAllMessages(),!1;$("#createAssetModal form").submit()},self.doAction=function(){var quantity=parseFloat(self.quantity()),rawQuantity=denormalizeQuantity(quantity,self.divisible());if(rawQuantity>MAX_INT)return bootbox.alert("The quantity desired to be issued for this token is too high."),!1;if(self.callable()&&self.callDate()<=new Date)return bootbox.alert("Call date cannot be in the past."),!1;WALLET.doTransaction(self.address(),"create_issuance",{source:self.address(),asset:self.name(),quantity:rawQuantity,divisible:self.divisible(),description:self.description(),callable_:self.callable(),call_date:self.callable()?parseInt(self.callDate().getTime()/1e3):null,call_price:self.callable()?parseFloat(self.callPrice()):null,transfer_destination:null},function(txHash,data,endpoint,addressType,armoryUTx){var message="Your token <b class='notoAssetColor'>"+self.name()+"</b> "+(armoryUTx?"will be created":"has been created")+".<br/><br/>"+"It will automatically appear under the appropriate address once the network"+" has confirmed it, and your address <b class='notoAddrColor'>"+getAddressLabel(self.address())+"</b> will be deducted by <b class='notoQuantityColor'>"+ASSET_CREATION_FEE_XCP+"</b> <b class='notoAssetColor'>"+XCP+"</b>. ";WALLET.showTransactionCompleteDialog(message+ACTION_PENDING_NOTICE,message,armoryUTx)}),self.shown(!1),trackEvent("Assets","CreateAsset")},self.show=function(address,resetForm){typeof resetForm=="undefined"&&(resetForm=!0),resetForm&&self.resetForm(),self.address(address),self.shown(!0),trackDialogShow("CreateAsset")},self.hide=function(){self.shown(!1)}}function IssueAdditionalAssetModalViewModel(){var self=this;self.shown=ko.observable(!1),self.address=ko.observable(""),self.divisible=ko.observable(),self.asset=ko.observable(),self.additionalIssue=ko.observable("").extend({required:!0,isValidPositiveQuantity:self,isValidQtyForDivisibility:self,validation:{validator:function(val,self){return self.rawAdditionalIssue()+self.asset().rawSupply()<=MAX_INT},message:"This issuance would exceed the hard limit for maximum quantity.",params:self}}),self.dispTotalIssued=ko.computed(function(){return self.asset()?self.asset().dispTotalIssued():null},self),self.rawAdditionalIssue=ko.computed(function(){return!self.asset()||!isNumber(self.additionalIssue())?null:denormalizeQuantity(self.additionalIssue(),self.asset().DIVISIBLE)},self),self.validationModel=ko.validatedObservable({additionalIssue:self.additionalIssue}),self.resetForm=function(){self.additionalIssue(null),self.validationModel.errors.showAllMessages(!1)},self.submitForm=function(){if(!self.validationModel.isValid())return self.validationModel.errors.showAllMessages(),!1;$("#issueAdditionalAssetModal form").submit()},self.doAction=function(){WALLET.doTransaction(self.address(),"create_issuance",{source:self.address(),quantity:self.rawAdditionalIssue(),asset:self.asset().ASSET,divisible:self.asset().DIVISIBLE,description:self.asset().description(),callable_:self.asset().CALLABLE,call_date:self.asset().CALLABLE?self.asset().CALLDATE:0,call_price:self.asset().CALLABLE?self.asset().CALLPRICE:0,transfer_destination:null},function(txHash,data,endpoint,addressType,armoryUTx){self.shown(!1);var message="You "+(armoryUTx?"will be issuing":"have issued")+" <b class='notoQuantityColor'>"+self.additionalIssue()+"</b> additional"+" quantity on your token <b class='notoAssetColor'>"+self.asset().ASSET+"</b>. ";WALLET.showTransactionCompleteDialog(message+ACTION_PENDING_NOTICE,message,armoryUTx)}),trackEvent("Assets","IssueAdditionalAsset")},self.show=function(address,divisible,asset,resetForm){typeof resetForm=="undefined"&&(resetForm=!0),resetForm&&self.resetForm(),self.address(address),self.divisible(divisible),self.asset(asset),self.shown(!0),trackDialogShow("IssueAdditionalAsset")},self.hide=function(){self.shown(!1)}}function TransferAssetModalViewModel(){var self=this;self.shown=ko.observable(!1),self.address=ko.observable(""),self.asset=ko.observable(),self.destAddress=ko.observable("").trimmed().extend({required:!0,isValidBitcoinAddress:self,isNotSameBitcoinAddress:self}),self.validationModel=ko.validatedObservable({destAddress:self.destAddress}),self.resetForm=function(){self.destAddress(""),self.validationModel.errors.showAllMessages(!1)},self.submitForm=function(){if(!self.validationModel.isValid())return self.validationModel.errors.showAllMessages(),!1;$("#transferAssetModal form").submit()},self.doAction=function(){WALLET.doTransaction(self.address(),"create_issuance",{source:self.address(),quantity:0,asset:self.asset().ASSET,divisible:self.asset().DIVISIBLE,description:self.asset().description(),callable_:self.asset().CALLABLE,call_date:self.asset().CALLABLE?self.asset().CALLDATE:0,call_price:self.asset().CALLABLE?self.asset().CALLPRICE:0,transfer_destination:self.destAddress()},function(txHash,data,endpoint,addressType,armoryUTx){self.shown(!1);var message="<b class='notoAssetColor'>"+self.asset().ASSET+"</b> "+(armoryUTx?"will be":"has been")+" transferred to <b class='notoAddressColor'>"+self.destAddress()+"</b>. ";WALLET.showTransactionCompleteDialog(message+ACTION_PENDING_NOTICE,message,armoryUTx)}),trackEvent("Assets","TransferAsset")},self.show=function(sourceAddress,asset,resetForm){typeof resetForm=="undefined"&&(resetForm=!0),resetForm&&self.resetForm(),self.address(sourceAddress),self.asset(asset),self.shown(!0),trackDialogShow("TransferAsset")},self.hide=function(){self.shown(!1)}}function ChangeAssetDescriptionModalViewModel(){var self=this;self.shown=ko.observable(!1),self.address=ko.observable(""),self.asset=ko.observable(),self.newDescription=ko.observable("").extend({required:!0,isValidAssetDescription:self,validation:{validator:function(val,self){return self.newDescription()!=self.asset().description()},message:"This description is the same as the current description.",params:self},newDescIsNotSameAsCurrentDesc:self}),self.dispAssetDescription=ko.computed(function(){return self.asset()?self.asset().description():""},self),self.dispCharactersRemaining=ko.computed(function(){return!self.newDescription()||self.newDescription().length>MAX_ASSET_DESC_LENGTH?"":" (<b>"+(MAX_ASSET_DESC_LENGTH-byteCount(self.newDescription()))+"</b> bytes remaining)"},self),self.validationModel=ko.validatedObservable({newDescription:self.newDescription}),self.resetForm=function(){self.newDescription(""),self.validationModel.errors.showAllMessages(!1)},self.submitForm=function(){if(!self.validationModel.isValid())return self.validationModel.errors.showAllMessages(),!1;$("#changeAssetDescriptionModal form").submit()},self.doAction=function(){WALLET.doTransaction(self.address(),"create_issuance",{source:self.address(),quantity:0,asset:self.asset().ASSET,divisible:self.asset().DIVISIBLE,description:self.newDescription(),callable_:self.asset().CALLABLE,call_date:self.asset().CALLABLE?self.asset().CALLDATE:0,call_price:self.asset().CALLABLE?self.asset().CALLPRICE:0,transfer_destination:null},function(txHash,data,endpoint,addressType,armoryUTx){self.shown(!1);var message="The description for token <b class='notoAssetColor'>"+self.asset().ASSET+"</b> "+(armoryUTx?"will be":"has been")+" changed to <b>"+self.newDescription()+"</b>. ";WALLET.showTransactionCompleteDialog(message+ACTION_PENDING_NOTICE,message,armoryUTx)}),trackEvent("Assets","ChangeAssetDescription")},self.show=function(address,asset,resetForm){typeof resetForm=="undefined"&&(resetForm=!0),resetForm&&self.resetForm(),self.address(address),self.asset(asset),self.shown(!0),trackDialogShow("ChangeAssetDescription")},self.hide=function(){self.shown(!1)}}var DividendAssetInDropdownItemModel=function(asset,rawBalance,normalizedBalance){this.ASSET=asset,this.RAW_BALANCE=rawBalance,this.NORMALIZED_BALANCE=normalizedBalance,this.SELECT_LABEL=asset+" (bal: "+normalizedBalance+")"};function PayDividendModalViewModel(){var self=this;self.shown=ko.observable(!1),self.addressVM=ko.observable(null),self.assetData=ko.observable(null),self.assetName=ko.observable("").extend({required:!0,pattern:{message:"Must contain uppercase letters only (A-Z), be at least 4 characters in length, and cannot start with 'A'.",params:"^[B-Z][A-Z]{3,}$"},isValidAssetNameLength:self,assetNameExists:self,rateLimit:{timeout:500,method:"notifyWhenChangesStop"},validation:{validator:function(val,self){if(!self.assetData())return!0;var supply=new Decimal(normalizeQuantity(self.assetData().supply,self.assetData().divisible)),userAsset=self.addressVM().getAssetObj(self.assetName());return userAsset&&(supply=supply.sub(new Decimal(userAsset.normalizedBalance()))),supply>0},message:"No dividend to distribute.",params:self}}),self.assetName.subscribe(function(name){if(!name)return;failoverAPI("get_asset_info",{assets:[name]},function(assetsData,endpoint){self.assetData(assetsData[0])})}),self.availableDividendAssets=ko.observableArray([]),self.selectedDividendAsset=ko.observable(null).extend({required:!0}),self.quantityPerUnit=ko.observable("").extend({required:!0,isValidPositiveQuantity:self,validation:[{validator:function(val,self){return self.dividendAssetBalRemainingPostPay()===null?!0:self.dividendAssetBalRemainingPostPay()>=0},message:"The total distribution would exceed the address' balance for the selected Distribution Token.",params:self}]}),self.totalPay=ko.computed(function(){if(!self.assetData()||!isNumber(self.quantityPerUnit())||!parseFloat(self.quantityPerUnit()))return null;var supply=new Decimal(normalizeQuantity(self.assetData().supply,self.assetData().divisible)),userAsset=self.addressVM().getAssetObj(self.assetName());userAsset&&(supply=supply.sub(new Decimal(userAsset.normalizedBalance())));var totalPay=(new Decimal(self.quantityPerUnit())).mul(supply);return Decimal.round(totalPay,8,Decimal.MidpointRounding.ToEven).toFloat()},self),self.dispTotalPay=ko.computed(function(){return smartFormat(self.totalPay())},self),self.dividendAssetBalance=ko.computed(function(){return self.selectedDividendAsset()?WALLET.getBalance(self.addressVM().ADDRESS,self.selectedDividendAsset()):null},self),self.dividendAssetBalRemainingPostPay=ko.computed(function(){return!self.assetData()||self.dividendAssetBalance()===null||self.totalPay()===null?null:Decimal.round((new Decimal(self.dividendAssetBalance())).sub(self.totalPay()),8,Decimal.MidpointRounding.ToEven).toFloat()},self),self.dispDividendAssetBalRemainingPostPay=ko.computed(function(){return smartFormat(self.dividendAssetBalRemainingPostPay())},self),self.validationModel=ko.validatedObservable({quantityPerUnit:self.quantityPerUnit,selectedDividendAsset:self.selectedDividendAsset,assetName:self.assetName}),self.resetForm=function(){self.quantityPerUnit(null),self.availableDividendAssets([]),self.selectedDividendAsset(null),self.validationModel.errors.showAllMessages(!1)},self.submitForm=function(){$("#payDividendModal form").submit()},self.doAction=function(){if(!self.validationModel.isValid())return self.validationModel.errors.showAllMessages(),!1;if(self.selectedDividendAsset()==BTC){var params={filters:[{field:"asset",op:"=",value:self.assetData().asset},{field:"quantity",op:">",value:0}],filterop:"AND"};failoverAPI("get_balances",params,self.sendDividend)}else self.sendDividend()},self.sendDividend=function(data){var params={source:self.addressVM().ADDRESS,quantity_per_unit:denormalizeQuantity(parseFloat(self.quantityPerUnit())),asset:self.assetData().asset,dividend_asset:self.selectedDividendAsset()};if(data){var dests=[];for(var a in data)dests.push(data[a].address);params._btc_dividend_dests=dests}WALLET.doTransaction(self.addressVM().ADDRESS,"create_dividend",params,function(txHash,data,endpoint,addressType,armoryUTx){self.shown(!1);var message="You "+(armoryUTx?"will be paying":"have paid")+" a distribution of <b class='notoQuantityColor'>"+self.quantityPerUnit()+"</b>"+" <b class='notoAssetColor'>"+self.selectedDividendAsset()+"</b> per outstanding unit to holders of token"+" <b class='notoAssetColor'>"+self.assetData().asset+"</b>. ";WALLET.showTransactionCompleteDialog(message+ACTION_PENDING_NOTICE,message,armoryUTx)}),trackEvent("Assets","PayDividend")},self.showModal=function(address,resetForm){typeof resetForm=="undefined"&&(resetForm=!0),resetForm&&self.resetForm(),self.addressVM(address),self.assetName(""),self.assetData(null),self.shown(!0),trackDialogShow("PayDividend"),failoverAPI("get_normalized_balances",{addresses:[address.ADDRESS]},function(data,endpoint){for(var i=0;i<data.length;i++)data[i].quantity!==null&&data[i].quantity!==0&&self.availableDividendAssets.push(new DividendAssetInDropdownItemModel(data[i].asset,data[i].quantity,data[i].normalized_quantity));WALLET.retrieveBTCBalance(address.ADDRESS,function(balance){balance&&self.availableDividendAssets.unshift(new DividendAssetInDropdownItemModel(BTC,balance,normalizeQuantity(balance)))})})},self.show=function(address,resetForm){trackDialogShow("PayDividendAttempt"),checkCountry("dividend",function(){self.showModal(address,resetForm)})},self.hide=function(){self.shown(!1)}}function CallAssetModalViewModel(){var self=this;self.shown=ko.observable(!1),self.address=ko.observable(null),self.asset=ko.observable(null),self.assetObj=ko.observable(null),self.percentageToCall=ko.observable(null).extend({required:!0,isValidPositiveQuantity:self,max:100,min:1e-5,validation:{validator:function(val,self){return self.xcpBalRemainingPostCall()===null?!0:self.xcpBalRemainingPostCall()>=0},message:"The total dividend would exceed the address' balance for the selected Dividend Token.",params:self}}),self.dispCallDate=ko.computed(function(){return self.assetObj()?self.assetObj().dispCallDate():null},self),self.dispCallPrice=ko.computed(function(){return self.assetObj()?self.assetObj().CALLPRICE:null},self),self.dispTotalIssued=ko.computed(function(){return self.assetObj()?self.assetObj().normalizedTotalIssued():null},self),self.dispTotalOutstanding=ko.computed(function(){return self.assetObj()?self.assetObj().normalizedTotalIssued()-self.assetObj().normalizedBalance():null},self),self.unitsToCallback=ko.computed(function(){return!self.dispTotalOutstanding()||!self.percentageToCall()?null:self.dispTotalOutstanding()*Decimal.round((new Decimal(self.percentageToCall())).div(100),8,Decimal.MidpointRounding.ToEven).toFloat()},self),self.dispUnitsToCallback=ko.computed(function(){return smartFormat(self.unitsToCallback(),null,4)},self),self.unitsAfterCallback=ko.computed(function(){return!self.assetObj()||!self.unitsToCallback()?null:self.assetObj().normalizedBalance()+self.unitsToCallback()},self),self.dispUnitsAfterCallback=ko.computed(function(){return smartFormat(self.unitsAfterCallback(),null,4)},self),self.totalXCPPay=ko.computed(function(){return!self.percentageToCall()||!self.assetObj()?null:+(self.percentageToCall()*(self.assetObj().normalizedTotalIssued()-self.assetObj().normalizedBalance())*self.assetObj().CALLPRICE).toFixed(4)},self),self.xcpBalRemainingPostCall=ko.computed(function(){return self.totalXCPPay()===null?null:Decimal.round((new Decimal(WALLET.getBalance(self.address(),XCP))).sub(self.totalXCPPay()),8,Decimal.MidpointRounding.ToEven).toFloat()},self),self.xcpBalRemainingPostCallIsSet=ko.computed(function(){return self.xcpBalRemainingPostCall()!==null},self),self.dispXCPBalRemainingPostCall=ko.computed(function(){return smartFormat(self.xcpBalRemainingPostCall(),null,4)},self),self.validationModel=ko.validatedObservable({percentageToCall:self.percentageToCall}),self.resetForm=function(){self.percentageToCall(null),self.validationModel.errors.showAllMessages(!1)},self.submitForm=function(){if(!self.validationModel.isValid())return self.validationModel.errors.showAllMessages(),!1;$("#callAssetModal form").submit()},self.doAction=function(){WALLET.doTransaction(self.address(),"create_callback",{source:self.address(),fraction:Decimal.round((new Decimal(self.percentageToCall())).div(100),8,Decimal.MidpointRounding.ToEven).toFloat(),asset:self.asset()},function(txHash,data,endpoint,addressType,armoryUTx){self.shown(!1);var message="You "+(armoryUTx?"will be calling back":"have called back")+" <b class='notoQuantityColor'>"+self.percentageToCall()+"%</b>"+" of token <b class='notoAssetColor'>"+self.asset()+"</b>"+" for the price of <b class='notoQuantityColor'>"+self.totalXCPPay()+"</b> <b class='notoAssetColor'>"+XCP+"</b>. ";WALLET.showTransactionCompleteDialog(message+ACTION_PENDING_NOTICE,message,armoryUTx)}),trackEvent("Assets","CallAsset")},self.show=function(address,asset,resetForm){typeof resetForm=="undefined"&&(resetForm=!0),resetForm&&self.resetForm(),self.address(address),self.asset(asset),self.assetObj(WALLET.getAddressObj(address).getAssetObj(asset));var now=new Date,nowUTC=new Date(now.getUTCFullYear(),now.getUTCMonth(),now.getUTCDate(),now.getUTCHours(),now.getUTCMinutes(),now.getUTCSeconds());assert(self.assetObj().isMine(),"Token is not yours!"),assert(self.assetObj().CALLABLE,"Token is not callable!");var callDate=new Date(0);callDate.setUTCSeconds(self.assetObj().CALLDATE);if(callDate>nowUTC){bootbox.alert("Token <b class='notoAssetColor'>"+self.asset()+"</b> cannot be called until "+self.assetObj().dispCallDate());return}self.shown(!0),trackDialogShow("CallAsset")},self.hide=function(){self.shown(!1)}}var AssetHistoryItemModel=function(historyObj){var self=this;self.HISTORYOBJ=historyObj,self.dispBlockTime=function(){return moment(self.HISTORYOBJ.at_block_time).format("M/D/YY h:mm:ssa")},self.dispDescription=function(){var desc="";return self.HISTORYOBJ["type"]=="created"?desc="Token created with description '<b>"+self.HISTORYOBJ.description+"</b>' and total issuance of <Am>"+numberWithCommas(self.HISTORYOBJ.total_issued_normalized)+"</Am> units."+" Owned by address <Ad>"+getAddressLabel(self.HISTORYOBJ.owner)+"</Ad>":self.HISTORYOBJ["type"]=="issued_more"?desc="An additional <Am>"+numberWithCommas(self.HISTORYOBJ.additional_normalized)+"</Am> units issued."+" Total issuance increased to <Am>"+numberWithCommas(self.HISTORYOBJ.total_issued_normalized)+"</Am> units":self.HISTORYOBJ["type"]=="changed_description"?desc="Description changed to '<b>"+self.HISTORYOBJ.new_description+"</b>'":self.HISTORYOBJ["type"]=="locked"?desc="Token locked":self.HISTORYOBJ["type"]=="transferred"?desc="Token transferred from address <Ad>"+getAddressLabel(self.HISTORYOBJ.prev_owner)+"</Ad> to address <Ad>"+getAddressLabel(self.HISTORYOBJ.new_owner)+"</Ad>":self.HISTORYOBJ["type"]=="called_back"?desc="<Am>"+self.HISTORYOBJ.percentage+"%</Am> of token called back":desc="UNKNOWN OP: <b>"+self.HISTORYOBJ.type+"</b>",desc=desc.replace(/<Am>/g,'<b class="notoQuantityColor">').replace(/<\/Am>/g,"</b>"),desc=desc.replace(/<Ad>/g,'<b class="notoAddrColor">').replace(/<\/Ad>/g,"</b>"),desc}};function ShowAssetInfoModalViewModel(){var self=this;self.shown=ko.observable(!1),self.address=ko.observable(null),self.asset=ko.observable(null),self.owner=ko.observable(null),self.description=ko.observable(null),self.totalIssued=ko.observable(null),self.locked=ko.observable(null),self.divisible=ko.observable(null),self.callable=ko.observable(null),self.callDate=ko.observable(null),self.callPrice=ko.observable(null),self.history=ko.observableArray([]),self.extImageURL=ko.observable(null),self.extWebsite=ko.observable(null),self.extDescription=ko.observable(null),self.extPGPSigURL=ko.observable(null),self.dispTotalIssued=ko.computed(function(){return smartFormat(self.totalIssued())},self),self.showHistory=ko.computed(function(){return self.history().length?!0:!1},self),self.show=function(assetObj){self.address(assetObj.ADDRESS),self.asset(assetObj.ASSET),self.owner(assetObj.owner()),self.description(assetObj.description()),self.totalIssued(assetObj.normalizedTotalIssued()),self.locked(assetObj.locked()),self.divisible(assetObj.DIVISIBLE),self.callable(assetObj.CALLABLE),self.callDate(assetObj.dispCallDate()),self.callPrice(assetObj.CALLPRICE),self.history([]),failoverAPI("get_asset_extended_info",{asset:assetObj.ASSET},function(ext_info,endpoint){if(!ext_info)return;ext_info.image&&self.extImageURL((USE_TESTNET?"/_t_asset_img/":"/_asset_img/")+assetObj.ASSET+".png"),self.extWebsite(ext_info.website),self.extDescription(ext_info.description),self.extPGPSigURL(ext_info.pgpsig)}),failoverAPI("get_asset_history",{asset:assetObj.ASSET,reverse:!0},function(history,endpoint){for(var i=0;i<history.length;i++)self.history.push(new AssetHistoryItemModel(history[i]))}),self.shown(!0),trackDialogShow("ShowAssetInfo")},self.hide=function(){self.shown(!1)}};
/*----------------js/components/exchange.js---------------*/
var BuySellAddressInDropdownItemModel=function(address,label,asset,balance){this.ADDRESS=address,this.LABEL=label,this.SELECT_LABEL=label?"<b>"+label+"</b><br/>"+address+"<br/>"+asset+" Bal: "+balance:address+"<br/>"+asset+" Bal: "+balance,this.BALANCE=parseFloat(balance)};ko.validation.rules.ordersIsExistingAssetName={validator:function(asset,self){if(asset==XCP||asset==BTC)return!0;var match=ko.utils.arrayFirst(self.allAssets(),function(item){return item==asset});return match},message:"Asset doesn't exist."},ko.validation.registerExtenders();function ExchangeViewModel(){var self=this;self.dexHome=ko.observable(!0),self._lastWindowWidth=null,self.latestTrades=ko.observableArray([]),self.allAssets=ko.observableArray([]),self.tradeHistory=ko.observableArray([]),self.askBook=ko.observableArray([]),self.bidBook=ko.observableArray([]),self.asset1IsDivisible=ko.observable(null),self.asset2IsDivisible=ko.observable(null),self.asset1=ko.observable("").extend({required:!0,ordersIsExistingAssetName:self}),self.asset2=ko.observable("").extend({required:!0,ordersIsExistingAssetName:self,validation:{validator:function(val,self){return val!==self.asset1()},message:"Same as other asset",params:self}}),self.selectedQuoteAsset=ko.observable(),self.selectedQuoteAsset.subscribe(function(value){value==BTC||value==XCP?self.asset2(value):self.asset2("")}),self.assetPair=ko.computed(function(){if(!self.asset1()||!self.asset2())return null;var pair=assetsToAssetPair(self.asset1(),self.asset2());return pair},self),self.dispAssetPair=ko.computed(function(){if(!self.assetPair())return null;var pair=self.assetPair();return pair[0]+"/"+pair[1]},self),self.baseAsset=ko.computed(function(){return self.assetPair()?self.assetPair()[0]:null},self),self.quoteAsset=ko.computed(function(){return self.assetPair()?self.assetPair()[1]:null},self),self.baseAssetIsDivisible=ko.computed(function(){return self.assetPair()?self.baseAsset()==self.asset1()?self.asset1IsDivisible():self.asset2IsDivisible():null},self),self.quoteAssetIsDivisible=ko.computed(function(){return self.assetPair()?self.quoteAsset()==self.asset1()?self.asset1IsDivisible():self.asset2IsDivisible():null},self),self.delayedAssetPairSelection=ko.computed(self.assetPair).extend({rateLimit:{method:"notifyWhenChangesStop",timeout:400}}),self.delayedAssetPairSelection.subscribeChanged(function(newValue,prevValue){if(newValue==null||!self.validationModelBaseOrders.isValid()||self.asset1()==self.asset2()){self.dexHome(!0);return}self.buyAmount(0),self.sellAmount(0),self.buyTotal(0),self.sellTotal(0),self.selectedAddressForBuy(null),self.selectedAddressForSell(null),$("table.buySellForm span.invalid").hide(),self.baseAssetImage(""),self.dexHome(!1),self.fetchMarketDetails(),$("a.top_user_pair").removeClass("selected_pair"),$("a.top_user_pair.pair_"+self.baseAsset()+self.quoteAsset()).addClass("selected_pair")}),self.validationModelBaseOrders=ko.validatedObservable({asset1:self.asset1,asset2:self.asset2}),self.balances={},self.currentMarketPrice=ko.observable(),self.marketProgression24h=ko.observable(),self.baseAssetImage=ko.observable(""),self.marketProgression24hDisp=ko.computed(function(){var span=$("<span></span>").css("font-size","12px").css("color","#000");return self.marketProgression24h()==0?span.text("0%"):self.marketProgression24h()>0?span.text("+"+self.marketProgression24h()+"%").addClass("txt-color-greenDark"):span.text("-"+self.marketProgression24h()+"%").addClass("txt-color-red"),$("<div>").append(span).html()}),self.highestBidPrice=ko.observable(),self.sellPrice=ko.observable(),self.sellAmount=ko.observable(0),self.sellTotal=ko.observable(0),self.sellPriceHasFocus=ko.observable(),self.sellAmountHasFocus=ko.observable(),self.sellTotalHasFocus=ko.observable(),self.obtainableForSell=ko.observable(),self.selectedAddressForSell=ko.observable(),self.availableBalanceForSell=ko.observable(),self.availableAddressesForSell=ko.computed(function(){if(!self.baseAsset())return null;var addresses=WALLET.getAddressesList(!0),addressesWithBalance=[],bal=null,address=null,addressObj=null;for(var i=0;i<addresses.length;i++){address=addresses[i][0],addressObj=WALLET.getAddressObj(address),bal=WALLET.getBalance(address,self.baseAsset());if(addressObj.IS_WATCH_ONLY)continue;bal&&(addressesWithBalance.push(new BuySellAddressInDropdownItemModel(addresses[i][0],addresses[i][1],self.baseAsset(),bal)),self.balances[addresses[i][0]+"_"+self.baseAsset()]=parseFloat(bal))}return addressesWithBalance.sort(function(left,right){return left.BALANCE==right.BALANCE?0:left.BALANCE>right.BALANCE?-1:1}),addressesWithBalance.length==0?($("#sellButton").addClass("disabled"),$("div.sellForm").addClass("disabled"),self.availableBalanceForSell(0),self.obtainableForSell(0)):($("#sellButton").removeClass("disabled"),$("div.sellForm").removeClass("disabled")),addressesWithBalance},self),self.selectedAddressForSell.subscribe(function(value){if(!value)return;var bal=self.balances[value+"_"+self.baseAsset()];self.availableBalanceForSell(bal),self.obtainableForSell(mulFloat(bal,self.highestBidPrice()))}),self.sellPrice.subscribe(function(price){if(!self.sellPriceHasFocus()||!self.sellAmount())return;self.sellTotal(mulFloat(self.sellAmount(),price))}),self.sellAmount.subscribe(function(amount){if(!self.sellAmountHasFocus()||!self.sellPrice())return;self.sellTotal(mulFloat(self.sellPrice(),amount))}),self.sellTotal.subscribe(function(total){if(!self.sellTotalHasFocus()||!self.sellPrice())return;self.sellAmount(divFloat(total,self.sellPrice()))}),self.sellAmount.extend({required:!0,isValidPositiveQuantity:self,validation:{validator:function(val,self){return parseFloat(val)<=self.availableBalanceForSell()},message:"Amount entered exceeds the address balance.",params:self}}),self.sellValidation=ko.validatedObservable({sellAmount:self.sellAmount}),self.sellFee=ko.computed(function(){var give_quantity=denormalizeQuantity(self.sellAmount(),self.baseAssetIsDivisible()),fee_provided=MIN_FEE;return self.baseAsset()==BTC&&(fee_provided=mulFloat(give_quantity,WALLET_OPTIONS_MODAL.defaultBTCFeeProvidedPct()/100),fee_provided=Math.ceil(fee_provided)),normalizeQuantity(fee_provided)}),self.selectBuyOrder=function(order){self.sellPrice(parseFloat(order.price));var amount=Math.min(self.availableBalanceForSell(),parseFloat(order.base_depth));self.sellAmount(amount),self.sellPrice()&&self.sellTotal(mulFloat(self.sellPrice(),amount)),self.selectSellOrder(order)},self.setMaxSellAmount=function(){var amount=self.availableBalanceForSell();self.sellAmount(amount),self.sellPrice()&&self.sellTotal(mulFloat(self.sellPrice(),amount))},self.doSell=function(){var give_quantity=denormalizeQuantity(self.sellAmount(),self.baseAssetIsDivisible()),get_quantity=denormalizeQuantity(self.sellTotal(),self.quoteAssetIsDivisible()),fee_required=0,fee_provided=MIN_FEE,expiration=ORDER_DEFAULT_EXPIRATION;self.quoteAsset()==BTC&&(fee_required=mulFloat(get_quantity,WALLET_OPTIONS_MODAL.defaultBTCFeeRequiredPct()/100),fee_required=Math.ceil(fee_required)),self.baseAsset()==BTC&&(fee_provided=mulFloat(give_quantity,WALLET_OPTIONS_MODAL.defaultBTCFeeProvidedPct()/100),fee_provided=Math.ceil(fee_provided),expiration=ORDER_BTCSELL_DEFAULT_EXPIRATION);var params={source:self.selectedAddressForSell(),give_quantity:give_quantity,give_asset:self.baseAsset(),_give_divisible:self.baseAssetIsDivisible(),get_quantity:get_quantity,get_asset:self.quoteAsset(),_get_divisible:self.quoteAssetIsDivisible(),fee_required:fee_required,fee_provided:fee_provided,expiration:expiration},onSuccess=function(txHash,data,endpoint,addressType,armoryUTx){trackEvent("Exchange","Sell",self.dispAssetPair());var message="Your order to sell <b class='notoQuantityColor'>"+self.sellAmount()+"</b>"+" <b class='notoAssetColor'>"+self.baseAsset()+"</b> "+(armoryUTx?"will be placed":"has been placed")+". ";WALLET.showTransactionCompleteDialog(message+ACTION_PENDING_NOTICE,message,armoryUTx),self.baseAsset()==BTC&&addressType!=="armory"&&multiAPI("record_btc_open_order",{wallet_id:WALLET.identifier(),order_tx_hash:txHash})};WALLET.doTransaction(self.selectedAddressForSell(),"create_order",params,onSuccess)},self.sell=function(){if(!self.sellValidation.isValid())return self.sellValidation.errors.showAllMessages(),!1;var buyOrders=self.bidBook(),amountCumul=0,estimatedTotalPrice=0;for(var i=0;i<buyOrders.length;i++)if(buyOrders[i].price>=self.sellPrice()&&amountCumul<self.sellAmount()){var vol=Math.min(self.sellAmount()-amountCumul,buyOrders[i].amount);estimatedTotalPrice+=mulFloat(vol,buyOrders[i].price),amountCumul+=vol}amountCumul<self.sellAmount()&&(estimatedTotalPrice+=mulFloat(self.sellAmount()-amountCumul,self.sellPrice())),message='<table class="confirmOrderBox">',message+='<tr><td><b>Price: </b></td><td style="text-align:right">'+self.sellPrice()+"</td><td>"+self.quoteAsset()+"/"+self.baseAsset()+"</td></tr>",message+='<tr><td><b>Amount: </b></td><td style="text-align:right">'+self.sellAmount()+"</td><td>"+self.baseAsset()+"</td></tr>",message+='<tr><td><b>Total: </b></td><td style="text-align:right">'+self.sellTotal()+"</td><td>"+self.quoteAsset()+"</td></tr>",message+='<tr><td><b>Real estimated total: </b></td><td style="text-align:right">'+estimatedTotalPrice+"</td><td>"+self.quoteAsset()+"</td></tr>",message+="</table>",bootbox.dialog({title:"Confirm your order",message:message,buttons:{cancel:{label:"Close",className:"btn-danger",callback:function(){return bootbox.hideAll(),!1}},confirm:{label:"Confirm Order",className:"btn-primary",callback:function(){return bootbox.hideAll(),self.doSell(),!0}}}})},self.lowestAskPrice=ko.observable(),self.buyPrice=ko.observable(),self.buyAmount=ko.observable(0),self.buyTotal=ko.observable(0),self.buyPriceHasFocus=ko.observable(),self.buyAmountHasFocus=ko.observable(),self.buyTotalHasFocus=ko.observable(),self.obtainableForBuy=ko.observable(),self.selectedAddressForBuy=ko.observable(),self.availableBalanceForBuy=ko.observable(),self.availableAddressesForBuy=ko.computed(function(){if(!self.quoteAsset())return null;var addresses=WALLET.getAddressesList(!0),addressesWithBalance=[],bal=null,address=null,addressObj=null;for(var i=0;i<addresses.length;i++){address=addresses[i][0],addressObj=WALLET.getAddressObj(address),bal=WALLET.getBalance(address,self.quoteAsset());if(addressObj.IS_WATCH_ONLY)continue;bal&&(addressesWithBalance.push(new BuySellAddressInDropdownItemModel(addresses[i][0],addresses[i][1],self.quoteAsset(),bal)),self.balances[addresses[i][0]+"_"+self.quoteAsset()]=parseFloat(bal))}return addressesWithBalance.sort(function(left,right){return left.BALANCE==right.BALANCE?0:left.BALANCE>right.BALANCE?-1:1}),addressesWithBalance.length==0?($("#buyButton").addClass("disabled"),$("div.buyForm").addClass("disabled"),self.availableBalanceForBuy(0),self.obtainableForBuy(0)):($("#buyButton").removeClass("disabled"),$("div.buyForm").removeClass("disabled")),addressesWithBalance},self),self.selectedAddressForBuy.subscribe(function(value){var bal=self.balances[value+"_"+self.quoteAsset()];self.availableBalanceForBuy(bal),self.lowestAskPrice()&&self.obtainableForBuy(divFloat(bal,self.lowestAskPrice()))}),self.buyPrice.subscribe(function(price){if(!self.buyPriceHasFocus()||!self.buyAmount())return;self.buyTotal(mulFloat(self.buyAmount(),price))}),self.buyAmount.subscribe(function(amount){if(!self.buyAmountHasFocus()||!self.buyPrice())return;self.buyTotal(mulFloat(self.buyPrice(),amount))}),self.buyTotal.subscribe(function(total){if(!self.buyTotalHasFocus()||!self.buyPrice())return;self.buyAmount(divFloat(total,self.buyPrice()))}),self.buyTotal.extend({required:!0,isValidPositiveQuantity:self,validation:{validator:function(val,self){return parseFloat(val)<=self.availableBalanceForBuy()},message:"Amount entered exceeds the address balance.",params:self}}),self.buyValidation=ko.validatedObservable({buyTotal:self.buyTotal}),self.buyFee=ko.computed(function(){var give_quantity=denormalizeQuantity(self.buyTotal(),self.quoteAssetIsDivisible()),fee_provided=MIN_FEE;return self.quoteAsset()==BTC&&(fee_provided=mulFloat(give_quantity,WALLET_OPTIONS_MODAL.defaultBTCFeeProvidedPct()/100),fee_provided=Math.ceil(fee_provided)),normalizeQuantity(fee_provided)}),self.selectSellOrder=function(order){self.buyPrice(parseFloat(order.price));var amount=parseFloat(order.base_depth);self.buyAmount(amount),self.buyPrice()&&self.buyTotal(mulFloat(self.buyPrice(),amount)),self.selectBuyOrder(order)},self.setMaxBuyAmount=function(){var total=self.availableBalanceForBuy();self.buyTotal(total),self.buyPrice()&&self.buyAmount(divFloat(total,self.buyPrice()))},self.doBuy=function(){var give_quantity=denormalizeQuantity(self.buyTotal(),self.quoteAssetIsDivisible()),get_quantity=denormalizeQuantity(self.buyAmount(),self.baseAssetIsDivisible()),fee_required=0,fee_provided=MIN_FEE,expiration=ORDER_DEFAULT_EXPIRATION;self.baseAsset()==BTC&&(fee_required=mulFloat(get_quantity,WALLET_OPTIONS_MODAL.defaultBTCFeeRequiredPct()/100),fee_required=Math.ceil(fee_required)),self.quoteAsset()==BTC&&(fee_provided=mulFloat(give_quantity,WALLET_OPTIONS_MODAL.defaultBTCFeeProvidedPct()/100),fee_provided=Math.ceil(fee_provided),expiration=ORDER_BTCSELL_DEFAULT_EXPIRATION);var params={source:self.selectedAddressForBuy(),give_quantity:give_quantity,give_asset:self.quoteAsset(),_give_divisible:self.quoteAssetIsDivisible(),get_quantity:get_quantity,get_asset:self.baseAsset(),_get_divisible:self.baseAssetIsDivisible(),fee_required:fee_required,fee_provided:fee_provided,expiration:expiration},onSuccess=function(txHash,data,endpoint,addressType,armoryUTx){trackEvent("Exchange","Buy",self.dispAssetPair());var message="Your order to buy <b class='notoQuantityColor'>"+self.buyAmount()+"</b>"+" <b class='notoAssetColor'>"+self.baseAsset()+"</b> "+(armoryUTx?"will be placed":"has been placed")+". ";WALLET.showTransactionCompleteDialog(message+ACTION_PENDING_NOTICE,message,armoryUTx),self.quoteAsset()==BTC&&addressType!=="armory"&&multiAPI("record_btc_open_order",{wallet_id:WALLET.identifier(),order_tx_hash:txHash})};WALLET.doTransaction(self.selectedAddressForBuy(),"create_order",params,onSuccess)},self.buy=function(){if(!self.buyValidation.isValid())return self.buyValidation.errors.showAllMessages(),!1;var sellOrders=self.askBook(),amountCumul=0,estimatedTotalPrice=0;for(var i=0;i<sellOrders.length;i++)if(sellOrders[i].price<=self.buyPrice()&&amountCumul<self.buyAmount()){var vol=Math.min(self.buyAmount()-amountCumul,sellOrders[i].amount);estimatedTotalPrice+=mulFloat(vol,sellOrders[i].price),amountCumul+=vol}amountCumul<self.buyAmount()&&(estimatedTotalPrice+=mulFloat(self.buyAmount()-amountCumul,self.buyPrice()),$.jqlog.debug("estimatedTotalPrice 2:"+estimatedTotalPrice)),message='<table class="confirmOrderBox">',message+='<tr><td><b>Price: </b></td><td style="text-align:right">'+self.buyPrice()+"</td><td>"+self.quoteAsset()+"/"+self.baseAsset()+"</td></tr>",message+='<tr><td><b>Amount: </b></td><td style="text-align:right">'+self.buyAmount()+"</td><td>"+self.baseAsset()+"</td></tr>",message+='<tr><td><b>Total: </b></td><td style="text-align:right">'+self.buyTotal()+"</td><td>"+self.quoteAsset()+"</td></tr>",message+='<tr><td><b>Real estimated total: </b></td><td style="text-align:right">'+estimatedTotalPrice+"</td><td>"+self.quoteAsset()+"</td></tr>",self.quoteAsset()==BTC&&(message+='<tr><td><b>Provided fee: </b></td><td style="text-align:right">'+self.buyFee()+"</td><td>"+self.quoteAsset()+"</td></tr>",message+='<tr><td colspan="3"><i>These fees are optional, go directly miners (not to us) and are non-refundable.</i></td></tr>'),message+="</table>",bootbox.dialog({title:"Confirm your order",message:message,buttons:{cancel:{label:"Close",className:"btn-danger",callback:function(){return bootbox.hideAll(),!1}},confirm:{label:"Confirm Order",className:"btn-primary",callback:function(){return bootbox.hideAll(),self.doBuy(),!0}}}})},self.topUserPairs=ko.observableArray([]),self.displayTopUserPairs=function(data){for(var p in data){var classes=["top_user_pair"];data[p].trend>0?classes.push("txt-color-greenDark"):data[p].trend<0&&classes.push("txt-color-red"),parseFloat(data[p].progression)>0?classes.push("progression-up"):parseFloat(data[p].progression)<0&&classes.push("progression-down"),data[p].my_order_count&&classes.push("with-open-order"),classes.push("pair_"+data[p].base_asset+data[p].quote_asset),data[p].pair_classes=classes.join(" ")}self.topUserPairs(data)},self.fetchTopUserPairs=function(){var params={addresses:WALLET.getAddressesList(),max_pairs:12};failoverAPI("get_users_pairs",params,self.displayTopUserPairs)},self.userOpenOrders=ko.observableArray([]),self.displayOpenUserOrders=function(data){for(var i in data)data[i].amount=normalizeQuantity(data[i].amount,self.baseAssetIsDivisible()),data[i].total=normalizeQuantity(data[i].total,self.quoteAssetIsDivisible()),data[i].price=parseFloat(data[i].price);self.userOpenOrders(data)},self.fetchOpenUserOrders=function(){self.userOpenOrders([]);var params={asset1:self.asset1(),asset2:self.asset2(),addresses:WALLET.getAddressesList(),min_fee_provided:WALLET_OPTIONS_MODAL.minBTCFeeProvidedPct(),max_fee_required:WALLET_OPTIONS_MODAL.maxBTCFeeRequiredPct()};failoverAPI("get_market_orders",params,self.displayOpenUserOrders)},self.userLastTrades=ko.observableArray([]),self.displayUserLastTrades=function(data){for(var i in data)data[i].amount=normalizeQuantity(data[i].amount,self.baseAssetIsDivisible()),data[i].total=normalizeQuantity(data[i].total,self.quoteAssetIsDivisible()),data[i].block_time=moment(data[i].block_time*1e3).format("YYYY/MM/DD hh:mm:ss A Z"),data[i].price=parseFloat(data[i].price);self.userLastTrades(data)},self.fetchUserLastTrades=function(){self.userOpenOrders([]);var params={asset1:self.asset1(),asset2:self.asset2(),addresses:WALLET.getAddressesList()};failoverAPI("get_market_trades",params,self.displayUserLastTrades)},self.allPairs=ko.observableArray([]),self.displayAllPairs=function(data){for(var i in data)data[i].volume=normalizeQuantity(data[i].volume,data[i].divisible),data[i].supply=normalizeQuantity(data[i].supply,data[i].divisible),data[i].market_cap=normalizeQuantity(data[i].market_cap,data[i].divisible),parseFloat(data[i].progression)>0?(data[i].prog_class="UP",data[i].progression="+"+data[i].progression):parseFloat(data[i].progression)<0?data[i].prog_class="DOWN":data[i].prog_class="",data[i].progression+="%",parseFloat(data[i].trend)>0?data[i].price_class="UP":parseFloat(data[i].trend)<0?data[i].price_class="DOWN":data[i].price_class="",data[i].price=parseFloat(data[i].price);self.allPairs(data),self.allPairs().length&&runDataTables("#assetPairMarketInfo",!0,{aaSorting:[[0,"asc"]]})},self.fetchAllPairs=function(){try{self.allPairs([]),$("#assetPairMarketInfo").dataTable().fnClearTable()}catch(e){}failoverAPI("get_markets_list",[],self.displayAllPairs)},self.displayMarketDetails=function(data){data.base_asset_infos&&data.base_asset_infos.valid_image&&self.baseAssetImage(assetImageUrl(data.base_asset)),self.asset1()==data["base_asset"]?(self.asset1IsDivisible(data.base_asset_divisible),self.asset2IsDivisible(data.quote_asset_divisible)):(self.asset1IsDivisible(data.quote_asset_divisible),self.asset2IsDivisible(data.base_asset_divisible)),self.currentMarketPrice(parseFloat(data.price)),self.marketProgression24h(data.progression),self.bidBook([]),self.askBook([]);try{$("#asset1OpenBuyOrders").dataTable().fnClearTable()}catch(err){}try{$("#asset2OpenBuyOrders").dataTable().fnClearTable()}catch(err){}base_depth=0;var buy_orders=[];for(var i in data.buy_orders)data["base_asset"]==BTC&&data.buy_orders[i].amount<BTC_ORDER_MIN_AMOUNT||data["quote_asset"]==BTC&&data.buy_orders[i].total<BTC_ORDER_MIN_AMOUNT?data.buy_orders[i].exclude=!0:(base_depth==0&&(self.highestBidPrice(data.buy_orders[i].price),self.sellPrice(data.buy_orders[i].price),self.obtainableForSell(mulFloat(self.availableBalanceForSell(),self.highestBidPrice()))),data.buy_orders[i].exclude=!1,data.buy_orders[i].price=parseFloat(data.buy_orders[i].price),data.buy_orders[i].amount=normalizeQuantity(data.buy_orders[i].amount,data.base_asset_divisible),data.buy_orders[i].total=normalizeQuantity(data.buy_orders[i].total,data.quote_asset_divisible),data.buy_orders[i].base_depth=data.buy_orders[i].amount+base_depth,base_depth=data.buy_orders[i].base_depth);base_depth=0;for(var i in data.sell_orders)data["base_asset"]==BTC&&data.sell_orders[i].amount<BTC_ORDER_MIN_AMOUNT||data["quote_asset"]==BTC&&data.sell_orders[i].total<BTC_ORDER_MIN_AMOUNT||data.buy_orders.length>0&&data.sell_orders[i].price<=data.buy_orders[0].price?data.sell_orders[i].exclude=!0:(base_depth==0&&(self.lowestAskPrice(data.sell_orders[i].price),self.buyPrice(data.sell_orders[i].price),self.obtainableForBuy(divFloat(self.availableBalanceForBuy(),self.lowestAskPrice()))),data.sell_orders[i].exclude=!1,data.sell_orders[i].price=parseFloat(data.sell_orders[i].price),data.sell_orders[i].amount=normalizeQuantity(data.sell_orders[i].amount,data.base_asset_divisible),data.sell_orders[i].total=normalizeQuantity(data.sell_orders[i].total,data.quote_asset_divisible),data.sell_orders[i].base_depth=data.sell_orders[i].amount+base_depth,base_depth=data.sell_orders[i].base_depth);self.bidBook(data.buy_orders),self.askBook(data.sell_orders),self.tradeHistory([]);try{$("#tradeHistory").dataTable().fnClearTable()}catch(err){}for(var i in data.last_trades)data.last_trades[i].price=parseFloat(data.last_trades[i].price),data.last_trades[i].amount=normalizeQuantity(data.last_trades[i].amount,self.baseAssetIsDivisible()),data.last_trades[i].total=normalizeQuantity(data.last_trades[i].total,self.quoteAssetIsDivisible()),data.last_trades[i].block_time=moment(data.last_trades[i].block_time*1e3).format("YYYY/MM/DD hh:mm:ss A Z");self.tradeHistory(data.last_trades),self.tradeHistory().length&&runDataTables("#tradeHistory",!0,{aaSorting:[[1,"desc"]]}),self.fetchOpenUserOrders(),self.fetchUserLastTrades()},self.selectMarket=function(item){self.asset1(item.base_asset),item.quote_asset==BTC||item.quote_asset==XCP?self.selectedQuoteAsset(item.quote_asset):(self.selectedQuoteAsset("Other"),self.asset2(item.quote_asset)),trackEvent("Exchange","MarketSelected",self.dispAssetPair())},self.fetchMarketDetails=function(item){self.highestBidPrice(0),self.lowestAskPrice(0),self.sellPrice(0),self.buyPrice(0),self.obtainableForSell(0),self.obtainableForBuy(0),self.metricsRefreshPriceChart();var params={asset1:self.asset2(),asset2:self.asset1(),min_fee_provided:WALLET_OPTIONS_MODAL.minBTCFeeProvidedPct(),max_fee_required:WALLET_OPTIONS_MODAL.maxBTCFeeRequiredPct()};failoverAPI("get_market_details",params,self.displayMarketDetails)},self.init=function(){self.fetchTopUserPairs(),self.fetchAllPairs(),failoverAPI("get_asset_names",{},function(data,endpoint){data=[XCP,BTC].concat(data),self.allAssets(data);var assets=new Bloodhound({datumTokenizer:Bloodhound.tokenizers.whitespace,queryTokenizer:Bloodhound.tokenizers.whitespace,local:self.allAssets()});assets.initialize(),$("#asset1, #asset2").typeahead(null,{source:assets.ttAdapter(),displayKey:function(obj){return $.jqlog.debug(obj),obj}}).on("typeahead:selected",function($e,datum){$($e.target).attr("name")=="asset1"?self.asset1(datum):$($e.target).attr("name")=="asset2"&&self.asset2(datum)})})},self.refresh=function(){self.dexHome()?(self.fetchTopUserPairs(),self.fetchAllPairs()):self.fetchMarketDetails()},self.metricsRefreshPriceChart=function(){var deferred=$.Deferred();failoverAPI("get_market_price_history",{asset1:self.asset1(),asset2:self.asset2()},function(data,endpoint){deferred.resolve(),data.length&&ExchangeViewModel.doChart(self.dispAssetPair(),$("#priceHistory"),data)},function(jqXHR,textStatus,errorThrown,endpoint){return deferred.resolve(),defaultErrorHandler(jqXHR,textStatus,errorThrown,endpoint)})},self.cancelOpenOrder=function(order){var params={offer_hash:order.tx_hash,source:order.source,_type:"order",_tx_index:order.tx_index},onSuccess=function(txHash,data,endpoint,addressType,armoryUTx){trackEvent("Exchange","OrderCanceled"),WALLET.showTransactionCompleteDialog("<b>Your order was canceled successfully.</b> "+ACTION_PENDING_NOTICE,"<b>Your order will be cancelled.</b>",armoryUTx)};WALLET.doTransaction(order.source,"create_cancel",params,onSuccess)}}ExchangeViewModel.doChart=function(dispAssetPair,chartDiv,data){var ohlc=[],midline=[],volume=[];for(var i=0;i<data.length;i++)ohlc.push([data[i][0],data[i][1],data[i][2],data[i][3],data[i][4]]),midline.push([data[i][0],data[i][7]]),volume.push([data[i][0],data[i][5]]);var groupingUnits=[["week",[1]],["month",[1,2,3,4,6]]];chartDiv.highcharts("StockChart",{xAxis:{type:"datetime"},legend:{enabled:!1},plotOptions:{candlestick:{color:"#f01717",upColor:"#0ab92b"},volume:{color:"#0000FF"}},scrollbar:{enabled:!1},navigator:{enabled:!0},rangeSelector:{selected:0},tooltip:{crosshairs:!0,shared:!0,valueDecimals:8},credits:{enabled:!1},yAxis:[{labels:{style:{color:"#CC3300"}},title:{text:"Price",style:{color:"#CC3300"}}},{title:{text:"Amount",style:{color:"#4572A7"}},labels:{style:{color:"#4572A7"}},opposite:!0}],series:[{type:"column",name:"Volume",data:volume,yAxis:1,dataGrouping:{units:groupingUnits}},{type:"candlestick",name:dispAssetPair,data:ohlc,yAxis:0,dataGrouping:{units:groupingUnits}},{name:"Trace Line",id:"primary",type:"line",data:midline,yAxis:0,visible:!1,showInLegend:!1},{name:"7-Sample SMA",linkedTo:"primary",showInLegend:!0,yAxis:0,type:"trendline",algorithm:"SMA",periods:7}]})};function OpenOrdersViewModel(){self=this,self.openOrders=ko.observableArray([]),self.addressesLabels={},self.init=function(){self.addressesLabels={};var wallet_adressess=WALLET.getAddressesList(!0),addresses=[];for(var i=0;i<wallet_adressess.length;i++)addresses.push(wallet_adressess[i][0]),self.addressesLabels[wallet_adressess[i][0]]=wallet_adressess[i][1];var params={filters:[{field:"source",op:"IN",value:addresses},{field:"give_remaining",op:">",value:0}],status:"open"};failoverAPI("get_orders",params,self.displayOpenOrders)},self.displayOpenOrders=function(data){$.jqlog.debug(data),self.openOrders([]);var orders=[];for(var i=0;i<data.length;i++){var order={};order.tx_index=data[i].tx_index,order.tx_hash=data[i].tx_hash,order.source=data[i].source,order.address_label=self.addressesLabels[order.source],order.give_quantity_str=normalizeQuantity(data[i].give_quantity)+" "+data[i].give_asset,order.get_quantity_str=normalizeQuantity(data[i].get_quantity)+" "+data[i].get_asset,order.give_remaining_str=normalizeQuantity(data[i].give_remaining)+" "+data[i].give_asset,order.get_remaining_str=normalizeQuantity(data[i].get_remaining)+" "+data[i].get_asset,order.expire_index=data[i].expire_index,order.expire_date=expireDate(data[i].expire_index),orders.push(order)}self.openOrders(orders);var openOrdersTable=$("#openOrdersTable").dataTable()},self.cancelOpenOrder=function(order){var params={offer_hash:order.tx_hash,source:order.source,_type:"order",_tx_index:order.tx_index},onSuccess=function(txHash,data,endpoint,addressType,armoryUTx){trackEvent("OpenOrders","OrderCancelled"),WALLET.showTransactionCompleteDialog("<b>Your order was canceled successfully.</b> "+ACTION_PENDING_NOTICE,"<b>Your order will be cancelled.</b>",armoryUTx)};WALLET.doTransaction(order.source,"create_cancel",params,onSuccess)}}function OrderMatchesViewModel(){self=this,self.orderMatches=ko.observableArray([]),self.addressesLabels={},self.init=function(){self.addressesLabels={};var wallet_adressess=WALLET.getAddressesList(!0),addresses=[];for(var i=0;i<wallet_adressess.length;i++)addresses.push(wallet_adressess[i][0]),self.addressesLabels[wallet_adressess[i][0]]=wallet_adressess[i][1];var params={filters:[{field:"tx0_address",op:"IN",value:addresses},{field:"tx1_address",op:"IN",value:addresses}],filterop:"OR",status:["pending","completed","expired"]};failoverAPI("get_order_matches",params,self.displayOrderMatches)},self.displayOrderMatches=function(data){self.orderMatches([]);var order_matches=[];for(var i=0;i<data.length;i++){var order_match={};self.addressesLabels[data[i].tx0_address]?(order_match.address_label=self.addressesLabels[data[i].tx0_address],order_match.give_quantity_str=normalizeQuantity(data[i].forward_quantity)+" "+data[i].forward_asset,order_match.get_quantity_str=normalizeQuantity(data[i].backward_quantity)+" "+data[i].backward_asset):(order_match.address_label=self.addressesLabels[data[i].tx1_address],order_match.give_quantity_str=normalizeQuantity(data[i].backward_quantity)+" "+data[i].backward_asset,order_match.get_quantity_str=normalizeQuantity(data[i].forward_quantity)+" "+data[i].forward_asset),order_match.status=data[i].status;var classes={completed:"success",pending:"primary",expired:"danger"};order_match.status_html='<span class="label label-'+classes[order_match.status]+'">'+order_match.status+"</span>",order_matches.push(order_match)}self.orderMatches(order_matches);var orderMatchesTable=$("#orderMatchesTable").dataTable()}};
/*----------------js/components/history.js---------------*/
function BalanceHistoryViewModel(){var self=this;self.selectedAsset=ko.observable(""),self.availableAssets=USE_TESTNET?ko.observableArray([XCP]):ko.observableArray([XCP,BTC]),self.graphData=null,self.ASSET_LASTCHANGE=null,self.init=function(){failoverAPI("get_owned_assets",{addresses:WALLET.getAddressesList()},function(data,endpoint){var otherAssets=[];for(var i=0;i<data.length;i++)otherAssets.push(data[i].asset);otherAssets.sort(),self.availableAssets(self.availableAssets().concat(otherAssets))}),self.assetChanged()},self.assetChanged=function(){if(self.selectedAsset()==self.ASSET_LASTCHANGE)return;self.ASSET_LASTCHANGE=self.selectedAsset(),$.jqlog.debug("Balance history: Token changed: "+self.selectedAsset());if(self.selectedAsset()==BTC){var addresses=WALLET.getAddressesList();self.graphData=[];for(var i=0;i<addresses.length;i++){var q='select * from html where url="http://blockchain.info/charts/balance?format=json&address='+addresses[i]+'"';$.queryYQL(q,function(data,textStatus,jqXHR){var address=/address%3D([A-Za-z0-9]+)%22/g.exec(jqXHR.url)[1],decodedData=null;try{decodedData=$.parseJSON(data.query.results.body.p.trim()).values}catch(err){decodedData=[]}var addressHash=hashToB64(address),addressName=PREFERENCES.address_aliases[addressHash]?"<b>"+PREFERENCES.address_aliases[addressHash]+"</b> ("+address+")":address;self.graphData.push({name:addressName,data:decodedData}),self.graphData.length==addresses.length&&self.doChart()}).error(function(jqXHR,textStatus,errorThrown){var address=/address%3D([A-Za-z0-9]+)%22/g.exec(jqXHR.url)[1],addressHash=hashToB64(address);$.jqlog.debug("Could not get "+BTC+" balance from blockchain for address "+address+": "+errorThrown);var addressName=PREFERENCES.address_aliases[addressHash]?"<b>"+PREFERENCES.address_aliases[addressHash]+"</b> ("+address+")":address;self.graphData.push({name:addressName,data:[]}),self.graphData.length==addresses.length&&self.doChart()})}}else failoverAPI("get_balance_history",{asset:self.selectedAsset(),addresses:WALLET.getAddressesList()},function(data,endpoint){var i=null,j=null,addressHash=null;for(i=0;i<data.length;i++)data[i].name=getAddressLabel(data[i].name);self.graphData=data,self.doChart()})},self.doChart=function(){$("#balanceHistory").highcharts({chart:{type:"line",zoomType:"x",spacingRight:20},title:{text:"Your Balances for Asset "+self.selectedAsset(),x:-20},xAxis:{type:"datetime",title:{text:null},dateTimeLabelFormats:{month:"%e. %b",year:"%b"}},yAxis:{title:{text:"Quantity"},plotLines:[{value:0,width:1,color:"#808080"}]},tooltip:{shared:!0,valueSuffix:" "+self.selectedAsset()},credits:{enabled:!1},series:self.graphData})}}function TransactionHistoryItemViewModel(data){data.status&&data["status"]=="expired"&&$.jqlog.debug(data);var self=this;self.DATA=data,self.TX_INDEX=self.DATA.tx_index||self.DATA.tx1_index||"",self.TX_HASH=self.DATA.tx_hash||self.DATA.order_hash||self.DATA.id||"",self.BLOCK_INDEX=self.DATA.block_index||self.DATA.tx1_block_index,self.BLOCK_TIME=self.DATA._block_time,self.RAW_TX_TYPE=self.DATA._category,self.SOURCE=self.DATA.source||self.DATA.address||self.DATA.issuer||"",self.dispTXHash=function(){return getTxHashLink(self.TX_HASH)},self.dispBlockIndex=function(){return getLinkForBlock(self.BLOCK_INDEX)},self.dispSource=function(){return getLinkForCPData("address",self.SOURCE,getAddressLabel(self.SOURCE))},self.dispBlockTime=function(){return moment(self.BLOCK_TIME).format("YYYY/MM/DD hh:mm:ss A")+" ---- "+moment(self.BLOCK_TIME).format("YYYY/MM/DD hh:mm:ss A Z")},self.dispTxType=function(){return ENTITY_NAMES[self.DATA._category]+'&nbsp;&nbsp;<i class="fa '+ENTITY_ICONS[self.DATA._category]+'"></i>&nbsp;'},self.dispDescription=function(){var desc="";if(self.RAW_TX_TYPE=="burns")desc=XCP+" Proof-of-Burn<br/>Burned: <Am>"+normalizeQuantity(self.DATA.burned)+"</Am> <As>"+BTC+"</As><br/>"+"Earned: <Am>"+smartFormat(normalizeQuantity(self.DATA.earned))+"</Am> <As>"+XCP+"</As>";else if(self.RAW_TX_TYPE=="sends")desc="Send of <Am>"+smartFormat(normalizeQuantity(self.DATA.quantity,self.DATA._divisible))+"</Am> <As>"+self.DATA.asset+"</As> to <Ad>"+getLinkForCPData("address",self.DATA.destination,getAddressLabel(self.DATA.destination))+"</Ad>";else if(self.RAW_TX_TYPE=="orders")desc="Sell <Am>"+smartFormat(normalizeQuantity(self.DATA.give_quantity,self.DATA._give_asset_divisible))+"</Am> <As>"+self.DATA.give_asset+"</As> for <Am>"+smartFormat(normalizeQuantity(self.DATA.get_quantity,self.DATA._get_asset_divisible))+"</Am> <As>"+self.DATA.get_asset+"</As>";else if(self.RAW_TX_TYPE=="order_matches"){desc="<Ad>"+getAddressLabel(self.DATA.tx0_address)+"</Ad> sent <Am>"+smartFormat(normalizeQuantity(self.DATA.forward_quantity,self.DATA._forward_asset_divisible))+"</Am> <As>"+self.DATA.forward_asset+"</As><br/>"+"<Ad>"+getAddressLabel(self.DATA.tx1_address)+"</Ad> sent <Am>"+smartFormat(normalizeQuantity(self.DATA.backward_quantity,self.DATA._backward_asset_divisible))+"</Am> <As>"+self.DATA.backward_asset+"</As>";if(self.DATA["forward_asset"]==BTC||self.DATA["backward_asset"]==BTC)desc+=" <b>(pending BTCpay)</b>"}else self.RAW_TX_TYPE=="btcpays"?desc="Payment for <Am>"+smartFormat(normalizeQuantity(self.DATA.btc_amount))+"</Am> <As>"+BTC+"</As>":self.RAW_TX_TYPE=="issuances"?self.DATA.transfer?desc="Token <As>"+self.DATA.asset+"</As> transferred to <Ad>"+getLinkForCPData("address",self.DATA.issuer,getAddressLabel(self.DATA.issuer))+"</Ad>":self.DATA.locked?desc="Token <As>"+self.DATA.asset+"</As> locked against additional issuance":desc="Quantity <Am>"+smartFormat(normalizeQuantity(self.DATA.quantity,self.DATA.divisible))+"</Am> of token <As>"+self.DATA.asset+"</As> issued":self.RAW_TX_TYPE=="broadcasts"?desc="Text: "+self.DATA.text+"<br/>Value: "+self.DATA.value:self.RAW_TX_TYPE=="bets"?desc=BET_TYPES[self.DATA.bet_type]+" bet on feed @ <Ad>"+getLinkForCPData("address",self.DATA.feed_address,getAddressLabel(self.DATA.feed_address))+"</Ad><br/>"+"Odds: <b>"+reduce(self.DATA.wager_quantity,self.DATA.counterwager_quantity).join("/")+"</b>, Wager: <Am>"+smartFormat(normalizeQuantity(self.DATA.wager_quantity))+"</Am> <As>"+XCP+"</As>, Counterwager: <Am>"+smartFormat(normalizeQuantity(self.DATA.counterwager_quantity))+"</Am> <As>"+XCP+"</As>":self.RAW_TX_TYPE=="bet_matches"?desc="For feed @ <Ad>"+getLinkForCPData("address",self.DATA.feed_address,getAddressLabel(self.DATA.feed_address))+"</Ad>, <Ad>"+getAddressLabel(self.DATA.tx0_address)+"</Ad> bet <Am>"+smartFormat(normalizeQuantity(self.DATA.forward_quantity))+"</Am> <As>"+XCP+"</As> and <Ad>"+getAddressLabel(self.DATA.tx1_address)+"</Ad> bet <Am>"+smartFormat(normalizeQuantity(self.DATA.backward_quantity))+"</Am> <As>"+XCP+"</As>":self.RAW_TX_TYPE=="dividends"?desc="Paid <Am>"+smartFormat(normalizeQuantity(self.DATA.quantity_per_unit))+"</Am> <As>"+self.DATA.dividend_asset+"</As> per unit of token <As>"+self.DATA.asset+"</As>":self.RAW_TX_TYPE=="cancels"?desc="Order/Bet <b>"+data.offer_hash+"</b> cancelled.":self.RAW_TX_TYPE=="callbacks"?desc="<Am>"+(self.DATA.fraction*100).toFixed(4)+"%</Am> outstanding called back for token <As>"+self.DATA.asset+"</As>":self.RAW_TX_TYPE=="bet_expirations"?desc="Bet <b>"+self.DATA.bet_index+"</b> expired":self.RAW_TX_TYPE=="order_expirations"?desc="Order <b>"+self.DATA.order_index+"</b> expired":self.RAW_TX_TYPE=="bet_match_expirations"?desc="Bet Match <b>"+self.DATA.bet_match_id+"</b> expired":self.RAW_TX_TYPE=="order_match_expirations"?desc="Order Match <b>"+self.DATA.order_match_id+"</b> expired":self.RAW_TX_TYPE=="credits"||self.RAW_TX_TYPE=="debits"?desc="Address <Ad>"+getLinkForCPData("address",self.DATA.address,getAddressLabel(self.DATA.address))+"</Ad>"+(self.RAW_TX_TYPE=="credits"?" credited with ":" debited for ")+smartFormat(normalizeQuantity(self.DATA.quantity,self.DATA._divisible))+"</Am> <As>"+self.DATA.asset+"</As>":self.RAW_TX_TYPE=="rps"?desc="Rock-Paper-Scissors bet, Wager: <Am>"+smartFormat(normalizeQuantity(self.DATA.wager))+"</Am> <As>"+XCP+"</As>":self.RAW_TX_TYPE=="rps_matches"?desc="Rock-Paper-Scissors bet matched between <Ad>"+getAddressLabel(self.DATA.tx0_address)+"</Ad> and <Ad>"+getAddressLabel(self.DATA.tx1_address)+"</Ad>, wagering <Am>"+smartFormat(normalizeQuantity(self.DATA.wager))+"</Am> <As>"+XCP+"</As>":self.RAW_TX_TYPE=="rpsresolves"?desc="Rock-Paper-Scissors bet match <b>"+getTxHashLink(self.DATA.rps_match_id)+"</b> resolved, source: <Ad>"+getAddressLabel(self.DATA.source)+"</Ad>, winning move is <b>"+self.DATA.move+"</b>":self.RAW_TX_TYPE=="rps_expirations"?desc="RPS <b>"+self.DATA.rps_index+"</b> expired":self.RAW_TX_TYPE=="rps_match_expirations"?desc="RPS Match <b>"+getTxHashLink(self.DATA.rps_match_id)+"</b> expired":desc="UNKNOWN TRANSACTION TYPE";return desc=desc.replace(/<Am>/g,'<b class="notoQuantityColor">').replace(/<\/Am>/g,"</b>"),desc=desc.replace(/<Ad>/g,'<b class="notoAddrColor">').replace(/<\/Ad>/g,"</b>"),desc=desc.replace(/<As>/g,'<b class="notoAssetColor">').replace(/<\/As>/g,"</b>"),desc}}var HistoryAddressInDropdownItemModel=function(address,label){this.ADDRESS=address,this.LABEL="<b>"+label+"</b> ("+address+")"};function TransactionHistoryViewModel(){var self=this;self._lastWindowWidth=null,self.selectedAddress=ko.observable(""),self.availableAddresses=ko.observableArray([]),self.transactions=ko.observableArray([]),self.ADDRESS_LASTCHANGE=null,self.init=function(){var addresses=WALLET.getAddressesList(!0);for(var i=0;i<addresses.length;i++)self.availableAddresses.push(new HistoryAddressInDropdownItemModel(addresses[i][0],addresses[i][1]));self.availableAddresses.sort(function(left,right){return left.LABEL==right.LABEL?0:left.LABEL<right.LABEL?-1:1})},self.selectedAddress.subscribeChanged(function(newSelection,prevSelection){if(newSelection==self.ADDRESS_LASTCHANGE)return;self.ADDRESS_LASTCHANGE=newSelection,$.jqlog.debug("Recent Transactions: Address changed called: "+newSelection),$("#txnHistoryLoading").show(),$("#wid-id-txnHistory header span.jarviswidget-loader").show(),self.transactions([]),$("#txnHistory").dataTable().fnClearTable(),$("#txnHistory_wrapper").hide(),failoverAPI("get_raw_transactions",{address:newSelection},function(data,endpoint){for(var i=0;i<data.length;i++)self.transactions.push(new TransactionHistoryItemViewModel(data[i]));runDataTables("#txnHistory",!0,{aaSorting:[[1,"desc"],[0,"desc"]]}),$("#txnHistory_wrapper").show(),$("#wid-id-txnHistory header span.jarviswidget-loader").hide(),$("#txnHistoryLoading").hide()})}),self.dataTableResponsive=function(e){var newWindowWidth=$(window).width();if(self._lastWindowWidth&&newWindowWidth==self._lastWindowWidth)return;self._lastWindowWidth=newWindowWidth;if($("#txnHistory").hasClass("dataTable")){var txnHistory=$("#txnHistory").dataTable();newWindowWidth<1250&&(txnHistory.fnSetColumnVis(1,!1),txnHistory.fnSetColumnVis(2,!1)),newWindowWidth>=1250&&(txnHistory.fnSetColumnVis(1,!0),txnHistory.fnSetColumnVis(2,!0)),txnHistory.fnAdjustColumnSizing()}}};
/*----------------js/components/leaderboard.js---------------*/
var AssetLeaderboardViewModel=CClass.create(function(){var self=this;self.isLeaderboard=null,self.marketInfo=null,self.marketCapHistory=null,self.showPortfolioIn=ko.observable(""),self.marketCapTables=ko.observableArray([{base:XCP,data:ko.observableArray([])},{base:BTC,data:ko.observableArray([])}]),self._lastWindowWidth=null,self.init=function(assets){self.isLeaderboard=!assets,failoverAPI(self.isLeaderboard?"get_market_info_leaderboard":"get_market_info",self.isLeaderboard?{}:{assets:assets},function(data,endpoint){self.marketInfo=data,self.updateMarketInfo(),self.showPortfolioIn(XCP)}),self.isLeaderboard&&failoverAPI("get_market_cap_history",{},function(data,endpoint){self.marketCapHistory=data,self.generateMarketCapHistoryGraph()})},self.updateMarketInfo=function(){var i=null,j=null,marketInfo=null;marketInfo=self.isLeaderboard?self.marketInfo.xcp:self.marketInfo,marketInfo.sort(function(l,r){return l["market_cap_in_xcp"]==r["market_cap_in_xcp"]?0:l.market_cap_in_xcp<r.market_cap_in_xcp?1:-1});for(i=0;i<marketInfo.length;i++)marketInfo[i].position_xcp=i+1;assert(self.marketCapTables()[0]["base"]==XCP);for(i=0;i<marketInfo.length;i++){if(!marketInfo[i].price_in_xcp)continue;self.marketCapTables()[0].data.push({position:marketInfo[i].position_xcp,asset:marketInfo[i].asset,dispAsset:AssetLeaderboardViewModel.formulateExtendedAssetInfo(marketInfo[i].asset,marketInfo[i].extended_image,marketInfo[i].extended_website),marketCap:marketInfo[i].market_cap_in_xcp?smartFormat(marketInfo[i].market_cap_in_xcp,100,0)+" "+XCP:"",price:marketInfo[i].aggregated_price_as_xcp?smartFormat(marketInfo[i].aggregated_price_as_xcp,10,4)+" "+XCP:"",supply:smartFormat(marketInfo[i].total_supply,100,4)+" "+marketInfo[i].asset,volume:marketInfo[i]["24h_summary"]&&marketInfo[i]["24h_summary"].vol&&marketInfo[i].aggregated_price_in_xcp?smartFormat(marketInfo[i]["24h_summary"].vol*marketInfo[i].aggregated_price_in_xcp,10,4)+" "+XCP:"",pctChange:marketInfo[i]["24h_vol_price_change_in_xcp"]?smartFormat(marketInfo[i]["24h_vol_price_change_in_xcp"],0,2)+" %":"",pctChangeColorClass:marketInfo[i]["24h_vol_price_change_in_xcp"]>0?"txt-color-green":marketInfo[i]["24h_vol_price_change_in_xcp"]<0?"txt-color-red":"initial",history:marketInfo[i]["7d_history_in_xcp"],marketCapRaw:marketInfo[i].market_cap_in_xcp,priceRaw:marketInfo[i].aggregated_price_as_xcp,supplyRaw:marketInfo[i].total_supply,volumeRaw:marketInfo[i]["24h_ohlc_in_xcp"]?marketInfo[i]["24h_ohlc_in_xcp"].vol:0,pctChangeRaw:marketInfo[i]["24h_vol_price_change_in_xcp"]})}marketInfo=self.isLeaderboard?self.marketInfo.btc:self.marketInfo,marketInfo.sort(function(l,r){return l["market_cap_in_btc"]==r["market_cap_in_btc"]?0:l.market_cap_in_btc<r.market_cap_in_btc?1:-1});for(i=0;i<marketInfo.length;i++)marketInfo[i].position_btc=i+1;assert(self.marketCapTables()[1]["base"]==BTC);for(i=0;i<marketInfo.length;i++){if(!marketInfo[i].price_in_btc)continue;self.marketCapTables()[1].data.push({position:marketInfo[i].position_btc,asset:marketInfo[i].asset,dispAsset:AssetLeaderboardViewModel.formulateExtendedAssetInfo(marketInfo[i].asset,marketInfo[i].extended_image,marketInfo[i].extended_website),marketCap:marketInfo[i].market_cap_in_btc?smartFormat(marketInfo[i].market_cap_in_btc,100,0)+" "+BTC:"",price:marketInfo[i].aggregated_price_as_btc?smartFormat(marketInfo[i].aggregated_price_as_btc,10,4)+" "+BTC:"",supply:smartFormat(marketInfo[i].total_supply,100,4)+" "+marketInfo[i].asset,volume:marketInfo[i]["24h_summary"]&&marketInfo[i]["24h_summary"].vol&&marketInfo[i].aggregated_price_in_btc?smartFormat(marketInfo[i]["24h_summary"].vol*marketInfo[i].aggregated_price_in_btc,10,4)+" "+BTC:"",pctChange:marketInfo[i]["24h_vol_price_change_in_btc"]?smartFormat(marketInfo[i]["24h_vol_price_change_in_btc"],0,2)+" %":"",pctChangeColorClass:marketInfo[i]["24h_vol_price_change_in_btc"]>0?"txt-color-green":marketInfo[i]["24h_vol_price_change_in_btc"]<0?"txt-color-red":"initial",history:marketInfo[i]["7d_history_in_btc"],marketCapRaw:marketInfo[i].market_cap_in_btc,priceRaw:marketInfo[i].aggregated_price_as_btc,supplyRaw:marketInfo[i].total_supply,volumeRaw:marketInfo[i]["24h_ohlc_in_btc"]?marketInfo[i]["24h_ohlc_in_btc"].vol:0,pctChangeRaw:marketInfo[i]["24h_vol_price_change_in_btc"]})}runDataTables(".assetMarketTable",!0,{iDisplayLength:self.isLeaderboard?50:15,aaSorting:[[0,"asc"]],aoColumns:[{sType:"numeric"},{sType:"string"},{sType:"natural",iDataSort:8},{sType:"natural",iDataSort:9},{sType:"natural",iDataSort:10},{sType:"natural",iDataSort:11},{sType:"natural",iDataSort:12},{sWidth:"180px",bSortable:!1},{bVisible:!1},{bVisible:!1},{bVisible:!1},{bVisible:!1},{bVisible:!1}]}),self.generateAssetMiniCharts()},self.showPortfolioInXCP=function(){self.showPortfolioIn(XCP)},self.showPortfolioInBTC=function(){self.showPortfolioIn(BTC)},self.showPortfolioIn.subscribeChanged(function(newValue,prevValue){if(!prevValue)return;assert(newValue==XCP||newValue==BTC,"Invalid value");if(newValue==prevValue)return;self.isLeaderboard&&self.generateMarketCapHistoryGraph()}),self.generateAssetMiniCharts=function(){var i=null,j=null;for(i=0;i<self.marketCapTables().length;i++)for(j=0;j<self.marketCapTables()[i].data().length;j++)$("#miniChart-"+self.marketCapTables()[i].base+"-"+self.marketCapTables()[i].data()[j].asset).highcharts({title:{text:null},xAxis:{type:"datetime",title:{text:null}},yAxis:{title:{text:null}},credits:{enabled:!1},tooltip:{enabled:!1},legend:{enabled:!1},series:[{name:"data",type:"scatter",data:self.marketCapTables()[i].data()[j].history}]})},self.generateMarketCapHistoryGraph=function(){assert(self.isLeaderboard),$("#marketCapHistoryGraph").highcharts({title:{text:null},xAxis:{type:"datetime",dateTimeLabelFormats:{month:"%e. %b",year:"%b"}},yAxis:{type:"logarithmic"},tooltip:{pointFormat:'<span style="color:{series.color}">{series.name}</span>: <b>{point.y}</b><br/>',valueDecimals:2},credits:{enabled:!1},series:self.marketCapHistory[self.showPortfolioIn()]})},self.dataTableResponsive=function(e){var newWindowWidth=$(window).width();if(self._lastWindowWidth&&newWindowWidth==self._lastWindowWidth)return;self._lastWindowWidth=newWindowWidth;if($("#assetMarketInfo").hasClass("dataTable")){var txnHistory=$("#assetMarketInfo").dataTable();newWindowWidth<1250&&txnHistory.fnSetColumnVis(3,!1),newWindowWidth>=1250&&txnHistory.fnSetColumnVis(3,!0),txnHistory.fnAdjustColumnSizing()}}});AssetLeaderboardViewModel.formulateExtendedAssetInfo=function(asset,hasImage,website){var dispAsset=asset;if(asset==XCP||asset==BTC){dispAsset='<img src="assets/'+asset+'.png" />&nbsp;';var website=asset==XCP?"{{= homepage}}":"http://dogecoin.com/";dispAsset+='<a href="'+website+'" target="_blank">'+asset+"</a>"}else hasImage&&(dispAsset='<img src="'+(USE_TESTNET?"/_t_asset_img/":"/_asset_img/")+asset+'.png" />&nbsp;',dispAsset+=asset);return dispAsset};
/*----------------js/components/portfolio.js---------------*/
var AssetPortfolioViewModel=AssetLeaderboardViewModel.extend(function(){var self=this;self._super(),self.myAssets=ko.observableArray(WALLET.getAssetsInWallet()),self.init(self.myAssets()),self.balancesByAsset={},self.myGraphTables={},self.showPortfolioIn.subscribeChanged(function(newValue,prevValue){assert(self.marketInfo.length),assert(newValue==XCP||newValue==BTC,"Invalid value");if(newValue==prevValue)return;if(Object.getOwnPropertyNames(self.myGraphTables).length==0){var i=null,j=null;self.myGraphTables[XCP]={balByAsset:ko.observableArray([]),rawValByAsset:{},valByAsset:ko.observableArray([]),pctChange:ko.observableArray([])},self.myGraphTables[BTC]={balByAsset:ko.observableArray([]),rawValByAsset:{},valByAsset:ko.observableArray([]),pctChange:ko.observableArray([])};for(i=0;i<self.myAssets().length;i++)self.balancesByAsset[self.myAssets()[i]]=WALLET.getTotalBalance(self.myAssets()[i]);var assetTotalBal=null,info=null;for(var baseAsset in self.myGraphTables)if(self.myGraphTables.hasOwnProperty(baseAsset))for(i=0;i<self.myAssets().length;i++)asset=self.myAssets()[i],assetTotalBal=self.balancesByAsset[asset],self.myGraphTables[baseAsset].balByAsset.push([asset,assetTotalBal]),info=$.grep(self.marketInfo,function(e){return e.asset==asset})[0],info&&(self.myGraphTables[baseAsset].rawValByAsset[asset]=info?assetTotalBal/info[baseAsset==XCP?"price_in_xcp":"price_in_btc"]:null,self.myGraphTables[baseAsset].valByAsset.push([asset,self.myGraphTables[baseAsset].rawValByAsset[asset]]),self.myGraphTables[baseAsset].pctChange.push({name:asset,data:[info?info[baseAsset==XCP?"24h_vol_price_change_in_xcp":"24h_vol_price_change_in_btc"]||0:null]}))}self.generateSummaryCharts()}),self.generateSummaryCharts=function(){$("#portfolioAssetValsPie").highcharts({chart:{plotBackgroundColor:null,plotBorderWidth:null,plotShadow:!1},title:{text:"Composition by Value (in "+self.showPortfolioIn()+")"},tooltip:{pointFormat:"{series.name}: <b>{point.percentage:.2f}%</b><br>(<b>{point.y:.2f} "+self.showPortfolioIn()+"</b> total value)</b>"},plotOptions:{pie:{allowPointSelect:!0,cursor:"pointer",dataLabels:{enabled:!1},showInLegend:!0}},credits:{enabled:!1},series:[{type:"pie",name:"% of Portfolio",data:self.myGraphTables[self.showPortfolioIn()].valByAsset()}]}),$("#portfolioAssetBalsPie").highcharts({chart:{plotBackgroundColor:null,plotBorderWidth:null,plotShadow:!1},title:{text:"Composition by Quantity Owned"},tooltip:{pointFormat:"{series.name}: <b>{point.percentage:.2f}%</b>"},plotOptions:{pie:{allowPointSelect:!0,cursor:"pointer",dataLabels:{enabled:!1},showInLegend:!0}},credits:{enabled:!1},series:[{type:"pie",name:"% of Portfolio",data:self.myGraphTables[self.showPortfolioIn()].balByAsset()}]}),$("#pctChangeBar").highcharts({chart:{type:"column"},title:{text:"24 Hour % Change vs "+self.showPortfolioIn()},tooltip:{pointFormat:"{series.name}: <b>{point.y:.2f}%</b> vs "+self.showPortfolioIn()},xAxis:{labels:{enabled:!1}},yAxis:{title:{text:null}},credits:{enabled:!1},series:self.myGraphTables[self.showPortfolioIn()].pctChange()}),self.myGraphTables[self.showPortfolioIn()].pctChange.length||$("#pctChangeBar").highcharts().showLoading("No data to display")}});
/*----------------js/components/stats.js---------------*/
function StatsHistoryViewModel(){var self=this;self.txGraphData=null,self.walletGraphData=null,self.totalMainnetWallets=0,self.totalTestnetWallets=0,self.totalUnknownWallets=0,self.init=function(){failoverAPI("get_transaction_stats",{},function(data,endpoint){for(var i=0;i<data.length;i++)data[i].name=_.capitalize(data[i].name).replace(/_/g," ");self.txGraphData=data,self.doTxChart()}),failoverAPI("get_wallet_stats",{},function(data,endpoint){self.walletGraphData=data.wallet_stats,$.each(self.walletGraphData,function(i,value){value.marker={enabled:!0,radius:3}}),self.totalMainnetWallets=data.num_wallets_mainnet,$("#totalMainnetWallets").text(self.totalMainnetWallets),self.totalTestnetWallets=data.num_wallets_testnet,$("#totalTestnetWallets").text(self.totalTestnetWallets),self.totalUnknownWallets=data.num_wallets_unknown,$("#totalUnknownWallets").text(self.totalUnknownWallets),self.doWalletChart()})},self.doTxChart=function(){$("#transactionStatHistory").highcharts("StockChart",{chart:{type:"column",zoomType:"x",maxZoom:1728e5},title:{text:""},rangeSelector:{selected:0},xAxis:{type:"datetime",title:{text:null}},yAxis:{min:0,title:{text:"# Transactions"},stackLabels:{enabled:!0,style:{fontWeight:"bold",color:Highcharts.theme&&Highcharts.theme.textColor||"gray"}}},legend:{enabled:!0,align:"right",verticalAlign:"top",floating:!0,backgroundColor:Highcharts.theme&&Highcharts.theme.background2||"white",borderColor:"#CCC",borderWidth:1,shadow:!1},tooltip:{shared:!1,formatter:function(){var text="<b>"+moment(this.x).format("MMM Do YYYY")+"</b><br/>";return this.x==this.series.data[this.series.data.length-1].x&&(text+="<b>**PARTIAL DAY**</b><br/>"),text+=this.series.name+": "+this.y+"<br/>"+"Total: "+this.point.stackTotal,text}},credits:{enabled:!1},plotOptions:{column:{stacking:"normal"}},series:self.txGraphData})},self.doWalletChart=function(){$("#walletStatHistory").highcharts("StockChart",{chart:{type:"line",zoomType:"x",maxZoom:1728e5},title:{text:""},rangeSelector:{selected:0},xAxis:{type:"datetime",title:{text:null}},yAxis:{min:0,title:{text:"#"},stackLabels:{enabled:!0,style:{fontWeight:"bold",color:Highcharts.theme&&Highcharts.theme.textColor||"gray"}}},legend:{enabled:!0,align:"right",verticalAlign:"top",floating:!0,backgroundColor:Highcharts.theme&&Highcharts.theme.background2||"white",borderColor:"#CCC",borderWidth:1,shadow:!1},tooltip:{shared:!1,formatter:function(){var text="<b>"+moment(this.x).format("MMM Do YYYY")+"</b><br/>";return this.x==this.series.data[this.series.data.length-1].x&&(text+="<b>**PARTIAL DAY**</b><br/>"),text+=this.series.name+": "+this.y,text}},credits:{enabled:!1},plotOptions:{column:{stacking:"normal"}},series:self.walletGraphData})},self.showNewRow=function(elem){elem.nodeType===1&&$(elem).hide().slideDown()},self.hideOldRow=function(elem){elem.nodeType===1&&$(elem).slideUp(function(){$(elem).remove()})}}function StatsTransactionHistoryViewModel(){var self=this;self._lastWindowWidth=null,self.transactions=ko.observableArray([]),self.init=function(){failoverAPI("get_last_n_messages",{count:50},function(data,endpoint){data.reverse();for(var i=0;i<data.length;i++){if(data[i]._command!=="insert")continue;if(data[i]._category==="credits"||data[i]._category==="debits")continue;if(data[i]._category==="order"&&(!data[i].give_asset||!data[i].get_asset))continue;self.transactions.push(new TransactionHistoryItemViewModel(data[i]))}})},self.addMessage=function(message){self.transactions.unshift(new TransactionHistoryItemViewModel(message)),self.transactions().length>STATS_MAX_NUM_TRANSACTIONS&&self.transactions.pop()},self.dataTableResponsive=function(e){var newWindowWidth=$(window).width();if(self._lastWindowWidth&&newWindowWidth==self._lastWindowWidth)return;self._lastWindowWidth=newWindowWidth}};
/*----------------js/components/betting.js---------------*/
function FeedBrowserViewModel(){var self=this,wagerValidator={required:!0,isValidPositiveQuantity:self,validation:{validator:function(val,self){var address=self.sourceAddress(),wager=self.wager();return parseFloat(wager)<=self.balances[address]},message:"Quantity entered exceeds the address balance.",params:self}};self.feed=ko.observable(null),self.targetValue=ko.observable(0),self.targetValueText=ko.observable(""),self.betType=ko.observable(""),self.betTypeCounter=ko.observable(""),self.betTypeLabelBull=ko.observable("Bullish (up)"),self.betTypeLabelBear=ko.observable("Bearish (down)"),self.betTypeLabelEqual=ko.observable("Equal"),self.betTypeLabelNotEqual=ko.observable("NotEqual"),self.betTypeText=ko.observable(""),self.deadline=ko.observable(0),self.availableAddresses=ko.observableArray([]),self.sourceAddress=ko.observable(null).extend(wagerValidator),self.balances={},self.wager=ko.observable(null).extend(wagerValidator),self.odd=ko.observable(1),self.counterBets=ko.observableArray([]),self.selectedCounterBetTx=ko.observable(null),self.matchingVolume=ko.observable(0),self.openingVolume=ko.observable(0),self.fee=ko.observable(0),self.showAdvancedOptions=ko.observable(!1),self.currentStep=ko.observable(0),self.greenPercent=ko.observable(20),self.feedStats=ko.observableArray([]),self.wizardTitle=ko.observable("Select Feed"),self.selectedTarget=ko.observable(null),self.operatorOdds=ko.observable(!1),self.leverage=ko.observable(LEVERAGE_UNIT),self.notAnUrlFeed=ko.observable(!1),self.jsonBetProvided=ko.observable(!1),self.notAnUrlFeed.subscribe(function(value){value?$("li.nextStep").addClass("disabled"):$("li.nextStep").removeClass("disabled")}),self.counterwager=ko.observable(null).extend({required:!0,isValidPositiveQuantity:self}),self.feedUrl=ko.observable("").extend({required:!1,isValidUrlOrValidBitcoinAdressOrJsonBet:self}),self.feedUrl.subscribe(function(val){$("li.nextStep").addClass("disabled"),self.feedUrl().length>50||self.feedUrl().lastIndexOf("=")==self.feedUrl().length-1?self.loadProvidedJsonBet(self.feedUrl()):self.feedUrl.isValid()&&self.loadFeed()}),self.targetValue.subscribe(function(val){if(!self.feed())return;if(self.feed().info_data.type=="all"||self.feed().info_data.type=="binary"){var labelEqual="Equal",labelNotEqual="NotEqual",labelTargetValue="target_value = "+val;self.feed().info_data.labels&&self.feed().info_data.labels.equal&&(labelEqual=self.feed().info_data.labels.equal,labelNotEqual=self.feed().info_data.labels.not_equal);for(var i in self.feed().info_data.targets)if(self.feed().info_data.targets[i].value==val){self.selectedTarget(self.feed().info_data.targets[i]),self.deadline(self.feed().info_data.targets[i].deadline),self.feed().info_data.targets[i].labels&&(labelEqual=self.feed().info_data.targets[i].labels.equal,labelNotEqual=self.feed().info_data.targets[i].labels.not_equal,labelTargetValue=self.feed().info_data.targets[i].long_text);break}self.betTypeLabelEqual(labelEqual),self.betTypeLabelNotEqual(labelNotEqual),self.targetValueText(labelTargetValue)}self.loadCounterBets()}),self.betType.subscribe(function(val){if(val=="")return;val=="Equal"?(self.betTypeText(self.betTypeLabelEqual()),self.betTypeCounter(self.betTypeLabelNotEqual())):val=="NotEqual"?(self.betTypeText(self.betTypeLabelNotEqual()),self.betTypeCounter(self.betTypeLabelEqual())):val=="BullCFD"?(self.betTypeText(self.betTypeLabelBull()),self.betTypeCounter(self.betTypeLabelBear())):val=="BearCFD"&&(self.betTypeText(self.betTypeLabelBear()),self.betTypeCounter(self.betTypeLabelBull())),self.loadCounterBets()}),self.leverage.subscribe(function(val){self.loadCounterBets()}),self.deadline.subscribe(function(val){self.loadCounterBets()}),self.wager.subscribe(function(value){try{var c=mulFloat(self.odd(),value);self.counterwager(c);var f=mulFloat(divFloat(self.feed().fee_fraction_int,UNIT),value);self.fee(f)}catch(e){self.counterwager(0),self.fee(0)}self.updateMatchingVolume()}),self.odd.subscribe(function(value){try{var c=mulFloat(self.wager(),value);self.counterwager(c)}catch(e){self.counterwager(0)}self.updateMatchingVolume()}),self.expiration=ko.observable(1e3).extend({required:!0,isValidPositiveInteger:self}),self.counterwager.subscribe(function(){var t=addFloat(self.wager(),self.counterwager()),p=divFloat(t,100),g=divFloat(self.wager(),p);self.greenPercent(g)}),self.validationModel=ko.validatedObservable({wager:self.wager,counterwager:self.counterwager,expiration:self.expiration});var leverageListArray=[];for(var i=1;i<=100;i++)leverageListArray.push({label:i+"x",value:i*5040});self.leverageList=ko.observableArray(leverageListArray),$("#feedWizard").bootstrapWizard({tabClass:"form-wizard",nextSelector:"li.next",onTabClick:function(tab,navigation,index){return!0},onTabShow:function(tab,navigation,index){if(index==0)$("li.previous").addClass("disabled"),$("li.next").show(),$("li.next.finish").hide(),self.jsonBetProvided(!1),self.wizardTitle("Select Feed");else if(index==1)$("li.previous").removeClass("disabled"),$("li.next").show(),$("li.next.finish").hide(),self.wizardTitle("Enter Bet");else{if(index!=2)return!1;$("li.previous").removeClass("disabled"),$("li.next").hide(),$("li.next.finish").removeClass("disabled").show(),self.wizardTitle("Confirm Bet")}return self.currentStep(index),!0},onNext:function(tab,navigation,index){return!self.feedUrl.isValid()||self.notAnUrlFeed()?!1:!0},onPrevious:function(tab,navigation,index){return self.jsonBetProvided()?($("#feedWizard").bootstrapWizard("show",0),!1):!self.feedUrl.isValid()||self.notAnUrlFeed()?!1:!0}}),self.init=function(){$("li.next").addClass("disabled"),$("li.previous").addClass("disabled"),$("li.next.finish").hide(),self.feed(null),self.jsonBetProvided(!1)},self.displayFeed=function(feed){$.jqlog.debug("displayFeed1"),$.jqlog.debug(feed);if(typeof feed.info_data=="undefined"){self.notAnUrlFeed(!0);return}$("li.nextStep").removeClass("disabled"),self.availableAddresses([]),self.balances={};var addresses=WALLET.getAddressesList(!0),options=[];for(var i=0;i<addresses.length;i++)options.push({address:addresses[i][0],label:addresses[i][1]+" ("+addresses[i][2]+" XCP)"}),self.balances[addresses[i][0]]=addresses[i][2];self.availableAddresses(options),typeof feed.info_data.targets=="undefined"?feed.info_data.type="cfd":feed.info_data.type="binary";if(feed.info_data.type=="cfd"){var labelBull="Bullish (up)",labelBear="Bearish (down)";feed.info_data.labels&&feed.info_data.labels.bull&&(labelBull=feed.info_data.labels.bull,labelBear=feed.info_data.labels.bear),self.betTypeLabelBull(labelBull),self.betTypeLabelBear(labelBear)}feed.info_data.operator.image_url=feed.info_data.operator.valid_image?feedImageUrl(feed.source+"_owner"):"",feed.info_data.image_url=feed.info_data.valid_image?feedImageUrl(feed.source+"_topic"):"";if(feed.info_data.type=="cfd")feed.info_data.targets=[{long_text:""}],feed.info_data.deadline_str=moment(feed.info_data.next_deadline).format("YYYY/MM/DD hh:mm:ss A Z"),feed.info_data.date_str=moment(feed.info_data.next_broadcast).format("YYYY/MM/DD hh:mm:ss A Z"),feed.info_data.broadcast_interval=get_duration(feed.info_data.broadcast_date),self.deadline(feed.info_data.next_deadline);else{for(var i in feed.info_data.targets){var image_name=feed.source+"_tv_"+feed.info_data.targets[i].value;feed.info_data.targets[i].image_url=feed.info_data.targets[i].valid_image?feedImageUrl(image_name):"",feed.info_data.targets[i].long_text=feed.info_data.targets[i].text,feed.info_data.targets[i].deadline_str=moment(feed.info_data.targets[i].deadline).format("YYYY/MM/DD hh:mm:ss A Z")}feed.info_data.date_str=moment(feed.info_data.broadcast_date).format("YYYY/MM/DD hh:mm:ss A Z")}feed.fee=satoshiToPercent(feed.fee_fraction_int);var classes={open:"success",filled:"primary",expired:"danger"};for(var i in feed.counters.bets)feed.counters.bets[i].wager_quantity=normalizeQuantity(feed.counters.bets[i].wager_quantity)+" XCP",feed.counters.bets[i].wager_remaining=normalizeQuantity(feed.counters.bets[i].wager_remaining)+" XCP",feed.counters.bets[i].status_html='<span class="label label-'+classes[feed.counters.bets[i].status]+'">'+feed.counters.bets[i].status+"</span>";self.feedStats(feed.counters.bets),self.betType(""),self.targetValue(""),self.feed(feed),self.feedStats(feed.counters.bets),self.wager(1),feed.info_data.type=="binary"?(self.betType("Equal"),self.targetValue(feed.info_data.targets[0].value)):(self.betType("BullCFD"),self.targetValue(1)),$("li.next").removeClass("disabled")},self.loadFeed=function(){self.notAnUrlFeed(!1),failoverAPI("get_feed",{address_or_url:self.feedUrl()},self.displayFeed)},self.loadCounterBets=function(){if(!self.betType()||!self.feed()||!self.deadline()||!self.targetValue()&&self.feed().info_data.type=="binary")return!1;var params={bet_type:COUNTER_BET[self.betType()],feed_address:self.feed().source,deadline:moment(self.deadline()).unix(),leverage:self.leverage()};self.feed().info_data.type=="binary"&&(params.target_value=self.targetValue());var onCounterbetsLoaded=function(data){var displayedData=[];for(var b=data.length-1;b>=0;b--)bet={},bet.deadline_str=timestampToString(data[b].deadline),bet.ratio=reduce(data[b].wager_quantity,data[b].counterwager_quantity).join("/"),bet.multiplier=divFloat(parseInt(data[b].wager_quantity),parseInt(data[b].counterwager_quantity)),bet.multiplier=Math.floor(bet.multiplier*100)/100,bet.wager=data[b].wager_remaining,bet.wager_remaining=data[b].wager_remaining,bet.counterwager_remaining=data[b].counterwager_remaining,bet.counterwager=data[b].counterwager_remaining,bet.tx_index=data[b].tx_index,bet.bet_count=1,displayedData.push(bet);var displayedData2=[];if(displayedData.length>0){displayedData.sortBy("-multiplier"),displayedData2=[displayedData[0]];for(var b=1;b<displayedData.length;b++)if(displayedData[b].multiplier==displayedData[b-1].multiplier){var i=displayedData2.length-1;displayedData2[i].wager_remaining+=displayedData[b].wager_remaining,displayedData2[i].counterwager_remaining+=displayedData[b].counterwager_remaining,displayedData2[i].wager+=displayedData[b].wager,displayedData2[i].bet_count+=displayedData[b].bet_count,displayedData2[i].counterwager+=displayedData[b].counterwager}else displayedData2.push(displayedData[b]);for(var b=0;b<displayedData2.length;b++){var previousVolume=0;b>0?displayedData2[b].volume=displayedData2[b-1].volume+displayedData2[b].wager_remaining:displayedData2[b].volume=displayedData2[b].wager_remaining,previousVolume=0,b>0?displayedData2[b].countervolume=displayedData2[b-1].countervolume+displayedData2[b].counterwager_remaining:displayedData2[b].countervolume=displayedData2[b].counterwager_remaining,displayedData2[b].volume_str=satoshiToXCP(displayedData2[b].countervolume),displayedData2[b].counterwager=satoshiToXCP(displayedData2[b].counterwager)}}self.counterBets(displayedData2),self.setDefaultOdds(),self.jsonBetProvided()&&self.displayProvidedBet()};failoverAPI("get_bets",params,onCounterbetsLoaded)},self.setDefaultOdds=function(){var odds,defaultOdds,overrideOdds;self.feed().info_data.type=="cfd"?self.feed().info_data.odds&&(odds=self.feed().info_data.odds):self.selectedTarget().odds&&(odds=self.selectedTarget().odds),odds&&(odds.initial&&(defaultOdds=self.betType()=="Equal"||self.betType()=="BullCFD"?odds.initial:divFloat(1,odds.initial)),odds.suggested&&(overrideOdds=self.betType()=="Equal"||self.betType()=="BullCFD"?odds.suggested:divFloat(1,odds.suggested))),overrideOdds&&!defaultOdds&&(defaultOdds=overrideOdds),self.operatorOdds(!1),self.counterBets().length>0?overrideOdds?(self.odd(overrideOdds),self.operatorOdds(!0)):self.selectCounterbet(self.counterBets()[0]):defaultOdds?(self.odd(defaultOdds),self.operatorOdds(!0)):self.odd(1)},self.selectCounterbet=function(counterbet){var cw=mulFloat(self.wager(),counterbet.multiplier);cw=Math.floor(cw*1e4)/1e4,self.counterwager(cw),self.odd(counterbet.multiplier),self.selectedCounterBetTx(counterbet.tx_index),$("#betting #counterbets tr").removeClass("selectedCounterBet"),$("#cb_"+counterbet.tx_index).addClass("selectedCounterBet")},self.getVolumeFromOdd=function(value){var books=self.counterBets();if(books.length==0)return 0;var volume=0;for(var i=0;i<books.length;i++){if(!(books[i].multiplier>=value))break;volume=books[i].countervolume}return volume},self.updateMatchingVolume=function(){var odd=self.odd(),volume=self.getVolumeFromOdd(odd)/UNIT,wager=self.wager(),matching=Math.min(volume,wager),opening=wager-matching;self.matchingVolume(round(matching,4)),self.openingVolume(round(opening,4))},self.nextStep=function(){$("#feedWizard").bootstrapWizard("next")},self.previousStep=function(){$("#feedWizard").bootstrapWizard("previous")},self.submitBet=function(){if(!self.validationModel.isValid())return self.validationModel.errors.showAllMessages(),!1;var params={source:self.sourceAddress(),feed_address:self.feed().source,bet_type:BET_TYPES_ID[self.betType()],deadline:moment(self.deadline()).unix(),wager_quantity:denormalizeQuantity(self.wager()),counterwager_quantity:denormalizeQuantity(self.counterwager()),expiration:parseInt(self.expiration()),target_value:self.targetValue(),leverage:self.leverage()},onSuccess=function(txHash,data,endpoint,addressType,armoryUTx){var message="<b>Your bet "+(armoryUTx?"will be":"was")+self.wager()+" sent. ";WALLET.showTransactionCompleteDialog(message+ACTION_PENDING_NOTICE,message,armoryUTx)};WALLET.doTransaction(self.sourceAddress(),"create_bet",params,onSuccess)},self.displayProvidedBet=function(){var jsonBet=self.jsonBetProvided();self.deadline(jsonBet.deadline),self.sourceAddress(jsonBet.source),self.betType(BET_TYPES_SHORT[jsonBet.bet_type]),self.wager(jsonBet.wager),self.counterwager(jsonBet.counterwager),self.odd(divFloat(jsonBet.counterwager,jsonBet.wager)),self.targetValue(jsonBet.target_value),self.expiration(jsonBet.expiration),self.leverage(jsonBet.leverage),$("#feedWizard").bootstrapWizard("last")},self.loadProvidedJsonBet=function(jsonBetBase64){jsonBet=decodeJsonBet(jsonBetBase64),typeof jsonBet=="object"?(self.jsonBetProvided(jsonBet),typeof jsonBet.feed=="object"?(self.notAnUrlFeed(!1),failoverAPI("parse_base64_feed",{base64_feed:jsonBetBase64},function(data){self.displayFeed(data.feed)},function(){self.notAnUrlFeed(!0)})):self.feedUrl(jsonBet.feed_address)):$.jqlog.debug("JSON ERROR")}}function OpenBetsViewModel(){self=this,self.openBets=ko.observableArray([]),self.addressesLabels={},self.init=function(){self.addressesLabels={};var wallet_adressess=WALLET.getAddressesList(!0),addresses=[];for(var i=0;i<wallet_adressess.length;i++)addresses.push(wallet_adressess[i][0]),self.addressesLabels[wallet_adressess[i][0]]=wallet_adressess[i][1];var params={addresses:addresses,status:"open"};failoverAPI("get_user_bets",params,self.displayOpenBets)},self.displayOpenBets=function(data){$.jqlog.debug(data),self.openBets([]);var bets=[];for(var i=0;i<data.bets.length;i++){var bet={};bet.address=data.bets[i].source,bet.address_label=self.addressesLabels[bet.address];if(data.feeds[data.bets[i].feed_address]){var feed=data.feeds[data.bets[i].feed_address];bet.feed=feed.info_data.title;if(typeof feed.info_data.targets!="undefined")for(var j=0;j<feed.info_data.targets.length;j++)feed.info_data.targets[j].value==data.bets[i].target_value&&(bet.target_value=feed.info_data.targets[j].text),typeof feed.info_data.targets[j].labels!="undefined"?bet.bet_type=data.bets[i].bet_type==2?feed.info_data.targets[j].labels.equal:feed.info_data.targets[j].labels.not_equal:bet.bet_type=BET_TYPES[data.bets[i].bet_type];else bet.target_value="NA",typeof feed.info_data.labels!="undefined"?bet.bet_type=data.bets[i].bet_type==0?feed.info_data.labels.bull:feed.info_data.labels.bear:bet.bet_type=BET_TYPES[data.bets[i].bet_type]}else bet.feed=data.bets[i].feed_address,bet.target_value=data.bets[i].target_value,bet.bet_type=BET_TYPES[data.bets[i].bet_type];bet.fee=satoshiToPercent(data.bets[i].fee_fraction_int),bet.deadline=moment(data.bets[i].deadline*1e3).format("YYYY/MM/DD hh:mm:ss A Z"),bet.wager_quantity=satoshiToXCP(data.bets[i].wager_quantity),bet.wager_remaining=satoshiToXCP(data.bets[i].wager_remaining),bet.counterwager_quantity=satoshiToXCP(data.bets[i].counterwager_quantity),bet.counterwager_remaining=satoshiToXCP(data.bets[i].counterwager_remaining),bet.odds=reduce(data.bets[i].wager_quantity,data.bets[i].counterwager_quantity).join("/"),bet.bet_html="<b>"+bet.bet_type+"</b> on <b>"+bet.target_value+"</b>",bet.tx_hash=data.bets[i].tx_hash,bet.tx_index=data.bets[i].tx_index,bets.push(bet)}self.openBets(bets);var openBetsTable=$("#openBetsTable").dataTable({aaSorting:[[6,"desc"]],aoColumns:[{bSortable:!1},null,null,null,null,null,null,null,null,null,null,null,null]});openBetsTable.fnSetColumnVis(12,!1)},self.dataTableResponsive=function(e){var newWindowWidth=$(window).width();if(self._lastWindowWidth&&newWindowWidth==self._lastWindowWidth)return;self._lastWindowWidth=newWindowWidth;if($("#openBetsTable").hasClass("dataTable")){var openBetsTable=$("#openBetsTable").dataTable();newWindowWidth<1250&&(openBetsTable.fnSetColumnVis(4,!1),openBetsTable.fnSetColumnVis(5,!1),openBetsTable.fnSetColumnVis(6,!1)),newWindowWidth>=1250&&(openBetsTable.fnSetColumnVis(4,!0),openBetsTable.fnSetColumnVis(5,!0),openBetsTable.fnSetColumnVis(6,!0)),openBetsTable.fnAdjustColumnSizing()}},self.cancelOpenBet=function(bet){var params={offer_hash:bet.tx_hash,source:bet.address,_type:"bet",_tx_index:bet.tx_index},onSuccess=function(txHash,data,endpoint,addressType,armoryUTx){var message="<b>Your bet "+(armoryUTx?"will be":"was")+self.wager()+" cancelled. ";WALLET.showTransactionCompleteDialog(message+ACTION_PENDING_NOTICE,message,armoryUTx)};WALLET.doTransaction(bet.address,"create_cancel",params,onSuccess)}}function MatchedBetsViewModel(){self=this,self.matchedBets=ko.observableArray([]),self.addressesLabels={},self.init=function(){self.addressesLabels={};var wallet_adressess=WALLET.getAddressesList(!0),filters=[];for(var i=0;i<wallet_adressess.length;i++){self.addressesLabels[wallet_adressess[i][0]]=wallet_adressess[i][1];var filter={field:"tx0_address",op:"==",value:wallet_adressess[i][0]};filters.push(filter),filter={field:"tx1_address",op:"==",value:wallet_adressess[i][0]},filters.push(filter)}params={filters:filters,filterop:"or",order_by:"deadline",order_dir:"desc"},failoverAPI("get_bet_matches",params,self.displayMatchedBets)},self.displayMatchedBets=function(data){$.jqlog.debug(data);var feed_addresses={};for(var i in data)feed_addresses[data[i].feed_address]=!0;feed_addresses=Object.keys(feed_addresses);var genBetItem=function(data_bet,num_tx,feeds){var bet={};bet.address=data_bet["tx"+num_tx+"_address"],bet.address_label=self.addressesLabels[bet.address];if(feeds[data_bet.feed_address]){var feed=feeds[data_bet.feed_address];bet.feed=feed.info_data.title;if(typeof feed.info_data.targets!="undefined")for(var j=0;j<feed.info_data.targets.length;j++)feed.info_data.targets[j].value==data_bet.target_value&&(bet.target_value=feed.info_data.targets[j].text),typeof feed.info_data.targets[j].labels!="undefined"?bet.bet_type=data_bet["tx"+num_tx+"_bet_type"]==2?feed.info_data.targets[j].labels.equal:feed.info_data.targets[j].labels.not_equal:bet.bet_type=BET_TYPES[data_bet["tx"+num_tx+"_bet_type"]];else bet.target_value="NA",typeof feed.info_data.labels!="undefined"?bet.bet_type=data_bet["tx"+num_tx+"_bet_type"]==2?feed.info_data.labels.bull:feed.info_data.labels.bear:bet.bet_type=BET_TYPES[data_bet["tx"+num_tx+"_bet_type"]]}else bet.feed=data_bet.feed_address,bet.target_value=data_bet.target_value,bet.bet_type=BET_TYPES[data_bet["tx"+num_tx+"_bet_type"]];bet.fee=satoshiToPercent(data_bet.fee_fraction_int),bet.deadline=moment(data_bet.deadline*1e3).format("YYYY/MM/DD hh:mm:ss A Z"),num_tx=="0"?(bet.wager=data_bet.forward_quantity,bet.counterwager=data_bet.backward_quantity):(bet.wager=data_bet.backward_quantity,bet.counterwager=data_bet.forward_quantity),bet.odds=reduce(bet.wager,bet.counterwager).join("/"),bet.wager=satoshiToXCP(bet.wager),bet.counterwager=satoshiToXCP(bet.counterwager);if(data_bet.status=="pending")bet.status=data_bet.status;else{var win_bet_type=BET_MATCHES_STATUS[data_bet.status];bet.status=win_bet_type==data_bet["tx"+num_tx+"_bet_type"]?"win":"lose"}var classes={win:"success",pending:"primary",lose:"danger"};return bet.status_html='<span class="label label-'+classes[bet.status]+'">'+bet.status+"</span>",bet.id=data_bet.id,bet},onReceivedFeed=function(feeds){var bets=[];for(var i in data)self.addressesLabels[data[i].tx0_address]&&bets.push(genBetItem(data[i],"0",feeds)),self.addressesLabels[data[i].tx1_address]&&bets.push(genBetItem(data[i],"1",feeds));self.matchedBets(bets);var matchedBetsTable=$("#matchedBetsTable").dataTable({aaSorting:[[6,"desc"]]});matchedBetsTable.fnSetColumnVis(10,!1)};self.matchedBets([]);var params={addresses:feed_addresses};failoverAPI("get_feeds_by_source",params,onReceivedFeed)},self.dataTableResponsive=function(e){var newWindowWidth=$(window).width();if(self._lastWindowWidth&&newWindowWidth==self._lastWindowWidth)return;self._lastWindowWidth=newWindowWidth;if($("#matchedBetsTable").hasClass("dataTable")){var matchedBetsTable=$("#matchedBetsTable").dataTable();newWindowWidth<1250&&(matchedBetsTable.fnSetColumnVis(4,!1),matchedBetsTable.fnSetColumnVis(5,!1),matchedBetsTable.fnSetColumnVis(6,!1)),newWindowWidth>=1250&&(matchedBetsTable.fnSetColumnVis(4,!0),matchedBetsTable.fnSetColumnVis(5,!0),matchedBetsTable.fnSetColumnVis(6,!0)),matchedBetsTable.fnAdjustColumnSizing()}}};
/*----------------js/components/donate.js---------------*/
function DonationViewModel(){var self=this,quantityValidator={required:!0,isValidPositiveQuantity:self,validation:{validator:function(val,self){var address=self.sourceAddress(),quantity=self.quantity();return self.donationCurrency()==XCP?parseFloat(quantity)<=self.balancesXCP[address]:parseFloat(quantity)<=self.balancesBTC[address]},message:"Quantity entered exceeds the address balance.",params:self}};self.shown=ko.observable(!1),self.availableAddresses=ko.observableArray([]),self.sourceAddress=ko.observable(null).extend(quantityValidator),self.balancesXCP={},self.balancesBTC={},self.quantity=ko.observable(null).extend(quantityValidator),self.donationCurrency=ko.observable(BTC),self.validationModel=ko.validatedObservable({quantity:self.quantity}),self.show=function(){self.init(),self.shown(!0)},self.hide=function(){self.shown(!1)},self.init=function(){self.availableAddresses([]),self.balancesXCP={};var addresses=WALLET.getAddressesList(!0),options=[];for(var i=0;i<addresses.length;i++){var btcBalance=WALLET.getBalance(addresses[i][0],BTC,!0);options.push({address:addresses[i][0],label:addresses[i][1]+" ("+round(btcBalance,2)+" "+BTC+" / "+round(addresses[i][2],2)+" "+XCP+")"}),self.balancesBTC[addresses[i][0]]=btcBalance,self.balancesXCP[addresses[i][0]]=addresses[i][2]}self.availableAddresses(options)},self.submitDonation=function(){$.jqlog.debug("submitDonation");if(!self.validationModel.isValid())return self.validationModel.errors.showAllMessages(),!1;var params={source:self.sourceAddress(),quantity:denormalizeQuantity(self.quantity()),asset:self.donationCurrency(),destination:DONATION_ADDRESS,_divisible:!0};$.jqlog.debug(params);var onSuccess=function(txHash,data,endpoint,addressType,armoryUTx){var message="<b>You "+(armoryUTx?"are choosing to send":"chose to send")+self.quantity()+" "+self.donationCurrency()+" to support development. Thank you!</b> ";WALLET.showTransactionCompleteDialog(message+ACTION_PENDING_NOTICE,message,armoryUTx)};WALLET.doTransaction(self.sourceAddress(),"create_send",params,onSuccess),self.hide()}};
/*----------------js/components/rps.js---------------*/
function RpsViewModel(){var self=this,wagerValidator={required:!0,isValidPositiveQuantity:self,validation:{validator:function(val,self){var address=self.sourceAddress(),wager=self.wager();return parseFloat(wager)<=self.balances[address]},message:"Wager entered exceeds the address balance.",params:self}},defaul_wagers=[{wager:1,game_count:0,picto:"bronze"},{wager:2,game_count:0,picto:"silver"},{wager:5,game_count:0,picto:"gold"}];self.addressesLabels={},self.balances={},self.updatingOpenGames=!1,self.rpssl=ko.observableArray([{name:"rock",value:1,win:[3,5],lose:[2,4]},{name:"paper",value:2,win:[1,4],lose:[3,5]},{name:"scissors",value:3,win:[2,5],lose:[1,4]},{name:"spock",value:4,win:[1,3],lose:[2,5]},{name:"lizard",value:5,win:[2,4],lose:[1,3]}]),self.move_names=["NA","Rock","Paper","Scissors","Spock","Lizard"],self.wagers=ko.observableArray(0),self.move=ko.observable(null),self.playLabel=ko.observable(""),self.myGames=ko.observableArray(null),self.possibleMoves=ko.observable(3),self.sourceAddress=ko.observable(null).extend(wagerValidator),self.availableAddresses=ko.observableArray([]),self.wager=ko.observable(null).extend(wagerValidator),self.expiration=ko.observable(500).extend({required:!0,isValidPositiveInteger:self}),self.move.subscribe(function(){self.updatePlayLabel()}),self.wager.subscribe(function(){self.updatePlayLabel()}),self.possibleMoves.subscribe(function(){self.onChangeGameType()}),self.showAdvancedOptions=ko.observable(!1),self.showAdvancedOptions.subscribe(function(value){value&&$("#rps .wager-groups .radioBtn.active, #rps .wager-groups .radioBtn.active input.active").removeClass("active")}),self.pendingRPS=ko.observable(!1),self.validationModel=ko.validatedObservable({wager:self.wager,expiration:self.expiration}),self.onChangeGameType=function(){self.move(null),self.wager(null),self.playLabel(""),$(".rps-image").removeClass("selectedMove").removeClass("win").removeClass("lose"),$("#rps span.invalid").hide(),self.updateOpenGames()},self.toggleGame=function(){self.possibleMoves()==3?($("#rps div.rpsButton").addClass("rps5"),self.possibleMoves(5)):($("#rps div.rpsButton").removeClass("rps5"),self.possibleMoves(3))},self.init=function(){self.onChangeGameType();var wallet_adressess=WALLET.getAddressesList(!0);self.availableAddresses([]),self.balances={};var options=[],maxBalance=wallet_adressess[0][2],maxAddress=wallet_adressess[0][0];for(var i=0;i<wallet_adressess.length;i++)self.addressesLabels[wallet_adressess[i][0]]=wallet_adressess[i][1],options.push({address:wallet_adressess[i][0],label:wallet_adressess[i][1]+" ("+wallet_adressess[i][2]+" "+XCP+")"}),self.balances[wallet_adressess[i][0]]=wallet_adressess[i][2],wallet_adressess[i][2]>maxBalance&&(maxBalance=wallet_adressess[i][2],maxAddress=wallet_adressess[i][0]);self.availableAddresses(options),self.sourceAddress(maxAddress),PENDING_ACTION_FEED.pendingRPS()&&self.pendingRPS(!0)},self.updateOpenGames=function(){self.updatingOpenGames==0&&(self.updatingOpenGames=!0,failoverAPI("get_open_rps_count",{possible_moves:self.possibleMoves(),exclude_addresses:WALLET.getAddressesList()},self.displayOpenGames),failoverAPI("get_user_rps",{addresses:WALLET.getAddressesList()},self.displayUserGames))},self.displayOpenGames=function(data){var countByWager={};for(var i in data)game=data[i],countByWager[normalizeQuantity(game.wager)]=game.game_count;var newWagers=[];for(var i in defaul_wagers){var w=defaul_wagers[i].wager;newWagers[i]={wager:w,game_count:countByWager[w]||0,picto:defaul_wagers[i].picto},newWagers[i].game_count+=""}self.wagers(newWagers)},self.displayUserGames=function(data){var classes={win:"success",open:"primary",pending:"primary",tie:"warning",lose:"danger"},games=[],displayWarning=!1;for(var i in data){if(data[i]["status"]=="pending"&&data[i]["move"]==0||data[i]["status"]=="open")displayWarning=!0;var game={};game.status_html='<span class="label label-'+classes[data[i].status]+'">'+data[i].status+"</span>",game.block_index=data[i].block_index,game.address_label=self.addressesLabels[data[i].address]||data[i].address,game.wager=normalizeQuantity(data[i].wager)+" "+XCP,game.move_str=self.move_names[data[i].move],game.countermove_str=self.move_names[data[i].counter_move],data[i]["possible_moves"]==3?game.game_type="RPS":data[i]["possible_moves"]==5?game.game_type="RPSSL":game.game_type=data[i].possible_moves+"moves",data[i]["status"]=="pending"||data[i]["status"]=="open"?game.expiration="~ "+expireDate(data[i].expiration)+" ("+data[i].expiration+")":game.expiration="-",games.push(game)}self.pendingRPS(displayWarning),$("#myRpsTable").dataTable().fnClearTable(),self.myGames(games),runDataTables("#myRpsTable",!0,{aaSorting:[[1,"desc"]]}),self.updatingOpenGames=!1},self.updatePlayLabel=function(value){self.wager()&&self.move()?self.playLabel("Play <b>"+self.wager()+" "+XCP+"</b> on <b>"+self.move().name.toUpperCase()+"</b>"):self.playLabel("")},self.selectMove=function(move){if(self.move()==null||self.move().value!=move.value){$(".rps-image").removeClass("selectedMove").removeClass("win").removeClass("lose"),$(".rps-image[rel='"+move.value+"']").addClass("selectedMove");for(var m in move.win)$(".rps-image[rel='"+move.win[m]+"']").addClass("win");for(var m in move.lose)$(".rps-image[rel='"+move.lose[m]+"']").addClass("lose");self.move(move)}else self.move(null),self.playLabel(""),$(".rps-image").removeClass("selectedMove").removeClass("win").removeClass("lose")},self.generateMoveRandomHash=function(move){var moveHex=Number(move).toString(16);while(moveHex.length<4)moveHex="0"+moveHex;return random=genRandom(),{move:move,random:random,move_random_hash:doubleHash(random+moveHex)}},self.doAction=function(){if(!self.validationModel.isValid())return self.validationModel.errors.showAllMessages(),!1;if(self.balances[self.sourceAddress()]<self.wager())return bootbox.alert("None of your addresses contain enough "+XCP),!1;var moveParams=self.generateMoveRandomHash(self.move().value);moveParams.source=self.sourceAddress();var param={source:self.sourceAddress(),wager:denormalizeQuantity(self.wager()),possible_moves:parseInt(self.possibleMoves()),expiration:parseInt(self.expiration()),move_random_hash:moveParams.move_random_hash},onSuccess=function(txHash,data,endpoint,addressType,armoryUTx){MESSAGE_FEED.setOpenRPS(self.sourceAddress(),txHash,moveParams);var warn='<b class="errorColor">Please stay logged in so that the game(s) can be properly resolved.';warn+=" Once your game has been matched, it will take one more block for the game to complete.",warn+=" Be careful, if you close the Wallet before the end of the game you can lose money!!</b><br />";var message="<b>You "+(armoryUTx?"will be placing":"have placed")+self.wager()+" XCP on "+self.move().name.toUpperCase()+".</b> "+warn;self.init(),self.pendingRPS(!0),WALLET.showTransactionCompleteDialog(message+ACTION_PENDING_NOTICE,message,armoryUTx)};return WALLET.doTransaction(self.sourceAddress(),"create_rps",param,onSuccess),!1}};
/*----------------js/smartadmin.app.js---------------*/
$.throttle_delay=350,$.menu_speed=235,$.navbar_height=49,$.sound_path="assets/",$.root_=$("body"),$.left_panel=$("#left-panel"),$.shortcut_dropdown=$("#shortcut"),$.bread_crumb=$("#ribbon ol.breadcrumb"),$.device=null,$.navAsAjax=!0,$.enableJarvisWidgets=!0,$.enableMobileWidgets=!1;var ismobile=/iphone|ipad|ipod|android|blackberry|mini|windows\sce|palm/i.test(navigator.userAgent.toLowerCase());ismobile?($.root_.addClass("mobile-detected"),$.device="mobile"):($.root_.addClass("desktop-detected"),$.device="desktop"),$(document).ready(function(){$("[rel=tooltip]").length&&$("[rel=tooltip]").tooltip(),nav_page_height(),$("nav ul").jarvismenu({accordion:!0,speed:$.menu_speed,closedSign:'<em class="fa fa-expand-o"></em>',openedSign:'<em class="fa fa-collapse-o"></em>'}),$(".minifyme").click(function(e){$("body").toggleClass("minified"),$(this).effect("highlight",{},500),e.preventDefault()}),$("#hide-menu >:first-child > a").click(function(e){$("body").hasClass("mobile-view-activated")?($("body").toggleClass("minified"),$("body").hasClass("minified")&&$("body").removeClass("hidden-menu")):($("body").toggleClass("hidden-menu"),$("body").hasClass("hidden-menu")&&$("body").removeClass("minified")),e.preventDefault()}),$("#show-shortcut").click(function(e){$.shortcut_dropdown.is(":visible")?shortcut_buttons_hide():shortcut_buttons_show(),e.preventDefault()}),$("#search-mobile").click(function(){$.root_.addClass("search-mobile")}),$("#cancel-search-js").click(function(){$.root_.removeClass("search-mobile")}),$(".activity-dropdown").click(function(e){var $this=$(this);$this.find(".badge").hasClass("bg-color-red")&&($this.find(".badge").removeClassPrefix("bg-color-"),$this.parent().attr("id")=="notificationFeed"&&NOTIFICATION_FEED.count(0)),$this.next(".ajax-dropdown").is(":visible")?($this.next(".ajax-dropdown").fadeOut(150),$this.removeClass("active")):($this.next(".ajax-dropdown").fadeIn(150),$this.addClass("active"));var url=$this.parent().attr("data-contenturl"),container=$($this.parent().find(".ajax-notifications")[0]);loadURL(url,container),e.preventDefault()}),$(document).mouseup(function(e){!$(".ajax-dropdown").is(e.target)&&$(".ajax-dropdown").has(e.target).length===0&&($(".ajax-dropdown").fadeOut(150),$(".ajax-dropdown").prev().removeClass("active"))}),$("button[data-loading-text]").on("click",function(){var btn=$(this);btn.button("loading"),setTimeout(function(){btn.button("reset")},3e3)});function notification_check(){$this=$("#activity > .badge"),parseInt($this.text())>0&&$this.addClass("bg-color-red bounceIn animated")}notification_check(),$("#refresh").click(function(e){var $this=$(this);$.widresetMSG=$this.data("reset-msg"),$.SmartMessageBox({title:"<i class='fa fa-refresh txt-color-green'></i> Clear Local Storage",content:$.widresetMSG||"Would you like to RESET all your saved widgets and clear LocalStorage?",buttons:"[No][Yes]"},function(ButtonPressed){ButtonPressed=="Yes"&&localStorage&&(localStorage.clear(),location.reload())}),e.preventDefault()}),$("#logout a").click(function(e){var $this=$(this);$.loginURL=$this.attr("href"),needWarningOnExit()?$.logoutMSG="<span class='bold txt-color-red'>If you log out, any "+BTC_NAME+" sell orders you have open will probably not be filled.</span>":$.logoutMSG=$this.data("logout-msg"),$.SmartMessageBox({title:"<i class='fa fa-sign-out txt-color-orangeDark'></i> Logout <span class='txt-color-orangeDark'><strong>"+$("#show-shortcut").text()+"</strong></span> ?",content:$.logoutMSG||"You can improve your security further after logging out by closing this opened browser",buttons:"[No][Yes]"},function(ButtonPressed){ButtonPressed=="Yes"&&($.root_.addClass("animated fadeOutUp"),setTimeout(logout,1e3))}),e.preventDefault()});function logout(){location.reload(!1)}$.shortcut_dropdown.find("a").click(function(e){e.preventDefault(),window.location=$(this).attr("href"),setTimeout(shortcut_buttons_hide,300)}),$(document).mouseup(function(e){!$.shortcut_dropdown.is(e.target)&&$.shortcut_dropdown.has(e.target).length===0&&shortcut_buttons_hide()});function shortcut_buttons_hide(){$.shortcut_dropdown.animate({height:"hide"},300,"easeOutCirc"),$.root_.removeClass("shortcut-on")}function shortcut_buttons_show(){$.shortcut_dropdown.animate({height:"show"},200,"easeOutCirc"),$.root_.addClass("shortcut-on")}}),function($,window,undefined){var elems=$([]),jq_resize=$.resize=$.extend($.resize,{}),timeout_id,str_setTimeout="setTimeout",str_resize="resize",str_data=str_resize+"-special-event",str_delay="delay",str_throttle="throttleWindow";jq_resize[str_delay]=$.throttle_delay,jq_resize[str_throttle]=!0,$.event.special[str_resize]={setup:function(){if(!jq_resize[str_throttle]&&this[str_setTimeout])return!1;var elem=$(this);elems=elems.add(elem);try{$.data(this,str_data,{w:elem.width(),h:elem.height()})}catch(err){$.data(this,str_data,{w:$(elem[0].container).width(),h:$(elem[0].container).height()})}elems.length===1&&loopy()},teardown:function(){if(!jq_resize[str_throttle]&&this[str_setTimeout])return!1;var elem=$(this);elems=elems.not(elem),elem.removeData(str_data),elems.length||clearTimeout(timeout_id)},add:function(handleObj){if(!jq_resize[str_throttle]&&this[str_setTimeout])return!1;var old_handler;function new_handler(e,w,h){var elem=$(this),data=$.data(this,str_data);try{data.w=w!==undefined?w:elem.width(),data.h=h!==undefined?h:elem.height()}catch(err){data.w=w!==undefined?w:$(elem[0].container).width(),data.h=h!==undefined?h:$(elem[0].container).height()}old_handler.apply(this,arguments)}if($.isFunction(handleObj))return old_handler=handleObj,new_handler;old_handler=handleObj.handler,handleObj.handler=new_handler}};function loopy(){timeout_id=window[str_setTimeout](function(){elems.each(function(){var elem=$(this),width=null,height=null;try{width=elem.width(),height=elem.height()}catch(err){width=$(elem[0].container).width(),height=$(elem[0].container).height()}var data=$.data(this,str_data);(width!==data.w||height!==data.h)&&elem.trigger(str_resize,[data.w=width,data.h=height])}),loopy()},jq_resize[str_delay])}}(jQuery,this);function nav_page_height(){var setHeight=$("#main").height(),windowHeight=$(window).height()-$.navbar_height;setHeight>windowHeight?($.left_panel.css("min-height",setHeight+"px"),$.root_.css("min-height",setHeight+$.navbar_height+"px"),$("#chatPane").css("height",windowHeight+"px"),$("#chatContentDiv").css("height",windowHeight-50-40-20+"px"),$("#chatContentInnerDiv").slimScroll({height:"auto"})):($.left_panel.css("min-height",windowHeight+"px"),$.root_.css("min-height",windowHeight+"px"),$("#chatPane").css("height",windowHeight+"px"),$("#chatContentDiv").css("height",windowHeight-50-40-20+"px"),$("#chatContentInnerDiv").slimScroll({height:"auto"}))}$("#main").resize(function(){nav_page_height(),check_if_mobile_width(),resize_chatbox()}),$("nav").resize(function(){nav_page_height()});function check_if_mobile_width(){$(window).width()<979?$.root_.addClass("mobile-view-activated"):$.root_.hasClass("mobile-view-activated")&&$.root_.removeClass("mobile-view-activated")}function resize_chatbox(){$("#chatPane").css("display")=="block"&&$("#main").css("margin-right")=="0px"&&$("#chatPane").css("width",$("#main").width()-5+"px")}var ie=function(){var undef,v=3,div=document.createElement("div"),all=div.getElementsByTagName("i");while(div.innerHTML="<!--[if gt IE "+ ++v+"]><i></i><![endif]-->",all[0]);return v>4?v:undef}();$.fn.extend({jarvismenu:function(options){var defaults={accordion:"true",speed:200,closedSign:"[+]",openedSign:"[-]"},opts=$.extend(defaults,options),$this=$(this);$this.find("li").each(function(){$(this).find("ul").size()!=0&&($(this).find("a:first").append("<b class='collapse-sign'>"+opts.closedSign+"</b>"),$(this).find("a:first").attr("href")=="#"&&$(this).find("a:first").click(function(){return!1}))}),$this.find("li.active").each(function(){$(this).parents("ul").slideDown(opts.speed),$(this).parents("ul").parent("li").find("b:first").html(opts.openedSign),$(this).parents("ul").parent("li").addClass("open")}),$this.find("li a").click(function(){$(this).parent().find("ul").size()!=0&&(opts.accordion&&($(this).parent().find("ul").is(":visible")||(parents=$(this).parent().parents("ul"),visible=$this.find("ul:visible"),visible.each(function(visibleIndex){var close=!0;parents.each(function(parentIndex){if(parents[parentIndex]==visible[visibleIndex])return close=!1,!1}),close&&$(this).parent().find("ul")!=visible[visibleIndex]&&$(visible[visibleIndex]).slideUp(opts.speed,function(){$(this).parent("li").find("b:first").html(opts.closedSign),$(this).parent("li").removeClass("open")})}))),$(this).parent().find("ul:first").is(":visible")&&!$(this).parent().find("ul:first").hasClass("active")?$(this).parent().find("ul:first").slideUp(opts.speed,function(){$(this).parent("li").removeClass("open"),$(this).parent("li").find("b:first").delay(opts.speed).html(opts.closedSign)}):$(this).parent().find("ul:first").slideDown(opts.speed,function(){$(this).parent("li").addClass("open"),$(this).parent("li").find("b:first").delay(opts.speed).html(opts.openedSign)}))})}}),jQuery.fn.doesExist=function(){return jQuery(this).length>0};function launchFullscreen(element){$.root_.hasClass("full-screen")?($.root_.removeClass("full-screen"),document.exitFullscreen?document.exitFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitExitFullscreen&&document.webkitExitFullscreen()):($.root_.addClass("full-screen"),element.requestFullscreen?element.requestFullscreen():element.mozRequestFullScreen?element.mozRequestFullScreen():element.webkitRequestFullscreen?element.webkitRequestFullscreen():element.msRequestFullscreen&&element.msRequestFullscreen())}function runAllForms(){$.fn.slider&&$(".slider").slider(),$.fn.select2&&$(".select2").each(function(){var $this=$(this),width=$this.attr("data-select-width")||"100%";$this.select2({allowClear:!0,width:width})}),$.fn.mask&&$("[data-mask]").each(function(){var $this=$(this),mask=$this.attr("data-mask")||"error...",mask_placeholder=$this.attr("data-mask-placeholder")||"X";$this.mask(mask,{placeholder:mask_placeholder})}),$.fn.autocomplete&&$("[data-autocomplete]").each(function(){var $this=$(this),availableTags=$this.data("autocomplete")||["The","Quick","Brown","Fox","Jumps","Over","Three","Lazy","Dogs"];$this.autocomplete({source:availableTags})}),$.fn.datepicker&&$(".datepicker").each(function(){var $this=$(this),dataDateFormat=$this.attr("data-dateformat")||"dd.mm.yy";$this.datepicker({dateFormat:dataDateFormat,prevText:'<i class="fa fa-chevron-left"></i>',nextText:'<i class="fa fa-chevron-right"></i>'})}),$("button[data-loading-text]").on("click",function(){var btn=$(this);btn.button("loading"),setTimeout(function(){btn.button("reset")},3e3)})}function runAllCharts(){$.fn.sparkline&&$(".sparkline").each(function(){var $this=$(this),sparklineType=$this.data("sparkline-type")||"bar";if(sparklineType=="bar"){var barColor=$this.data("sparkline-bar-color")||$this.css("color")||"#0000f0",sparklineHeight=$this.data("sparkline-height")||"26px",sparklineBarWidth=$this.data("sparkline-barwidth")||5,sparklineBarSpacing=$this.data("sparkline-barspacing")||2,sparklineNegBarColor=$this.data("sparkline-negbar-color")||"#A90329",sparklineStackedColor=$this.data("sparkline-barstacked-color")||["#A90329","#0099c6","#98AA56","#da532c","#4490B1","#6E9461","#990099","#B4CAD3"];$this.sparkline("html",{type:"bar",barColor:barColor,type:sparklineType,height:sparklineHeight,barWidth:sparklineBarWidth,barSpacing:sparklineBarSpacing,stackedBarColor:sparklineStackedColor,negBarColor:sparklineNegBarColor,zeroAxis:"false"})}if(sparklineType=="line"){var sparklineHeight=$this.data("sparkline-height")||"20px",sparklineWidth=$this.data("sparkline-width")||"90px",thisLineColor=$this.data("sparkline-line-color")||$this.css("color")||"#0000f0",thisLineWidth=$this.data("sparkline-line-width")||1,thisFill=$this.data("fill-color")||"#c0d0f0",thisSpotColor=$this.data("sparkline-spot-color")||"#f08000",thisMinSpotColor=$this.data("sparkline-minspot-color")||"#ed1c24",thisMaxSpotColor=$this.data("sparkline-maxspot-color")||"#f08000",thishighlightSpotColor=$this.data("sparkline-highlightspot-color")||"#50f050",thisHighlightLineColor=$this.data("sparkline-highlightline-color")||"f02020",thisSpotRadius=$this.data("sparkline-spotradius")||1.5;thisChartMinYRange=$this.data("sparkline-min-y")||"undefined",thisChartMaxYRange=$this.data("sparkline-max-y")||"undefined",thisChartMinXRange=$this.data("sparkline-min-x")||"undefined",thisChartMaxXRange=$this.data("sparkline-max-x")||"undefined",thisMinNormValue=$this.data("min-val")||"undefined",thisMaxNormValue=$this.data("max-val")||"undefined",thisNormColor=$this.data("norm-color")||"#c0c0c0",thisDrawNormalOnTop=$this.data("draw-normal")||!1,$this.sparkline("html",{type:"line",width:sparklineWidth,height:sparklineHeight,lineWidth:thisLineWidth,lineColor:thisLineColor,fillColor:thisFill,spotColor:thisSpotColor,minSpotColor:thisMinSpotColor,maxSpotColor:thisMaxSpotColor,highlightSpotColor:thishighlightSpotColor,highlightLineColor:thisHighlightLineColor,spotRadius:thisSpotRadius,chartRangeMin:thisChartMinYRange,chartRangeMax:thisChartMaxYRange,chartRangeMinX:thisChartMinXRange,chartRangeMaxX:thisChartMaxXRange,normalRangeMin:thisMinNormValue,normalRangeMax:thisMaxNormValue,normalRangeColor:thisNormColor,drawNormalOnTop:thisDrawNormalOnTop})}if(sparklineType=="pie"){var pieColors=$this.data("sparkline-piecolor")||["#B4CAD3","#4490B1","#98AA56","#da532c","#6E9461","#0099c6","#990099","#717D8A"],pieWidthHeight=$this.data("sparkline-piesize")||90,pieBorderColor=$this.data("border-color")||"#45494C",pieOffset=$this.data("sparkline-offset")||0;$this.sparkline("html",{type:"pie",width:pieWidthHeight,height:pieWidthHeight,tooltipFormat:'<span style="color: {{color}}">&#9679;</span> ({{percent.1}}%)',sliceColors:pieColors,offset:0,borderWidth:1,offset:pieOffset,borderColor:pieBorderColor})}if(sparklineType=="box"){var thisBoxWidth=$this.data("sparkline-width")||"auto",thisBoxHeight=$this.data("sparkline-height")||"auto",thisBoxRaw=$this.data("sparkline-boxraw")||!1,thisBoxTarget=$this.data("sparkline-targetval")||"undefined",thisBoxMin=$this.data("sparkline-min")||"undefined",thisBoxMax=$this.data("sparkline-max")||"undefined",thisShowOutlier=$this.data("sparkline-showoutlier")||!0,thisIQR=$this.data("sparkline-outlier-iqr")||1.5,thisBoxSpotRadius=$this.data("sparkline-spotradius")||1.5,thisBoxLineColor=$this.css("color")||"#000000",thisBoxFillColor=$this.data("fill-color")||"#c0d0f0",thisBoxWhisColor=$this.data("sparkline-whis-color")||"#000000",thisBoxOutlineColor=$this.data("sparkline-outline-color")||"#303030",thisBoxOutlineFill=$this.data("sparkline-outlinefill-color")||"#f0f0f0",thisBoxMedianColor=$this.data("sparkline-outlinemedian-color")||"#f00000",thisBoxTargetColor=$this.data("sparkline-outlinetarget-color")||"#40a020";$this.sparkline("html",{type:"box",width:thisBoxWidth,height:thisBoxHeight,raw:thisBoxRaw,target:thisBoxTarget,minValue:thisBoxMin,maxValue:thisBoxMax,showOutliers:thisShowOutlier,outlierIQR:thisIQR,spotRadius:thisBoxSpotRadius,boxLineColor:thisBoxLineColor,boxFillColor:thisBoxFillColor,whiskerColor:thisBoxWhisColor,outlierLineColor:thisBoxOutlineColor,outlierFillColor:thisBoxOutlineFill,medianColor:thisBoxMedianColor,targetColor:thisBoxTargetColor})}if(sparklineType=="bullet"){var thisBulletHeight=$this.data("sparkline-height")||"auto",thisBulletWidth=$this.data("sparkline-width")||2,thisBulletColor=$this.data("sparkline-bullet-color")||"#ed1c24",thisBulletPerformanceColor=$this.data("sparkline-performance-color")||"#3030f0",thisBulletRangeColors=$this.data("sparkline-bulletrange-color")||["#d3dafe","#a8b6ff","#7f94ff"];$this.sparkline("html",{type:"bullet",height:thisBulletHeight,targetWidth:thisBulletWidth,targetColor:thisBulletColor,performanceColor:thisBulletPerformanceColor,rangeColors:thisBulletRangeColors})}if(sparklineType=="discrete"){var thisDiscreteHeight=$this.data("sparkline-height")||26,thisDiscreteWidth=$this.data("sparkline-width")||50,thisDiscreteLineColor=$this.css("color"),thisDiscreteLineHeight=$this.data("sparkline-line-height")||5,thisDiscreteThrushold=$this.data("sparkline-threshold")||"undefined",thisDiscreteThrusholdColor=$this.data("sparkline-threshold-color")||"#ed1c24";$this.sparkline("html",{type:"discrete",width:thisDiscreteWidth,height:thisDiscreteHeight,lineColor:thisDiscreteLineColor,lineHeight:thisDiscreteLineHeight,thresholdValue:thisDiscreteThrushold,thresholdColor:thisDiscreteThrusholdColor})}if(sparklineType=="tristate"){var thisTristateHeight=$this.data("sparkline-height")||26,thisTristatePosBarColor=$this.data("sparkline-posbar-color")||"#60f060",thisTristateNegBarColor=$this.data("sparkline-negbar-color")||"#f04040",thisTristateZeroBarColor=$this.data("sparkline-zerobar-color")||"#909090",thisTristateBarWidth=$this.data("sparkline-barwidth")||5,thisTristateBarSpacing=$this.data("sparkline-barspacing")||2,thisZeroAxis=$this.data("sparkline-zeroaxis")||!1;$this.sparkline("html",{type:"tristate",height:thisTristateHeight,posBarColor:thisBarColor,negBarColor:thisTristateNegBarColor,zeroBarColor:thisTristateZeroBarColor,barWidth:thisTristateBarWidth,barSpacing:thisTristateBarSpacing,zeroAxis:thisZeroAxis})}if(sparklineType=="compositebar"){var sparklineHeight=$this.data("sparkline-height")||"20px",sparklineWidth=$this.data("sparkline-width")||"100%",sparklineBarWidth=$this.data("sparkline-barwidth")||3,thisLineWidth=$this.data("sparkline-line-width")||1,thisLineColor=$this.data("sparkline-color-top")||"#ed1c24",thisBarColor=$this.data("sparkline-color-bottom")||"#333333";$this.sparkline($this.data("sparkline-bar-val"),{type:"bar",width:sparklineWidth,height:sparklineHeight,barColor:thisBarColor,barWidth:sparklineBarWidth}),$this.sparkline($this.data("sparkline-line-val"),{width:sparklineWidth,height:sparklineHeight,lineColor:thisLineColor,lineWidth:thisLineWidth,composite:!0,fillColor:!1})}if(sparklineType=="compositeline"){var sparklineHeight=$this.data("sparkline-height")||"20px",sparklineWidth=$this.data("sparkline-width")||"90px",sparklineValue=$this.data("sparkline-bar-val"),sparklineValueSpots1=$this.data("sparkline-bar-val-spots-top")||null,sparklineValueSpots2=$this.data("sparkline-bar-val-spots-bottom")||null,thisLineWidth1=$this.data("sparkline-line-width-top")||1,thisLineWidth2=$this.data("sparkline-line-width-bottom")||1,thisLineColor1=$this.data("sparkline-color-top")||"#333333",thisLineColor2=$this.data("sparkline-color-bottom")||"#ed1c24",thisSpotRadius1=$this.data("sparkline-spotradius-top")||1.5,thisSpotRadius2=$this.data("sparkline-spotradius-bottom")||thisSpotRadius1,thisSpotColor=$this.data("sparkline-spot-color")||"#f08000",thisMinSpotColor1=$this.data("sparkline-minspot-color-top")||"#ed1c24",thisMaxSpotColor1=$this.data("sparkline-maxspot-color-top")||"#f08000",thisMinSpotColor2=$this.data("sparkline-minspot-color-bottom")||thisMinSpotColor1,thisMaxSpotColor2=$this.data("sparkline-maxspot-color-bottom")||thisMaxSpotColor1,thishighlightSpotColor1=$this.data("sparkline-highlightspot-color-top")||"#50f050",thisHighlightLineColor1=$this.data("sparkline-highlightline-color-top")||"#f02020",thishighlightSpotColor2=$this.data("sparkline-highlightspot-color-bottom")||thishighlightSpotColor1,thisHighlightLineColor2=$this.data("sparkline-highlightline-color-bottom")||thisHighlightLineColor1,thisFillColor1=$this.data("sparkline-fillcolor-top")||"transparent",thisFillColor2=$this.data("sparkline-fillcolor-bottom")||"transparent";$this.sparkline(sparklineValue,{type:"line",spotRadius:thisSpotRadius1,spotColor:thisSpotColor,minSpotColor:thisMinSpotColor1,maxSpotColor:thisMaxSpotColor1,highlightSpotColor:thishighlightSpotColor1,highlightLineColor:thisHighlightLineColor1,valueSpots:sparklineValueSpots1,lineWidth:thisLineWidth1,width:sparklineWidth,height:sparklineHeight,lineColor:thisLineColor1,fillColor:thisFillColor1}),$this.sparkline($this.data("sparkline-line-val"),{type:"line",spotRadius:thisSpotRadius2,spotColor:thisSpotColor,minSpotColor:thisMinSpotColor2,maxSpotColor:thisMaxSpotColor2,highlightSpotColor:thishighlightSpotColor2,highlightLineColor:thisHighlightLineColor2,valueSpots:sparklineValueSpots2,lineWidth:thisLineWidth2,width:sparklineWidth,height:sparklineHeight,lineColor:thisLineColor2,composite:!0,fillColor:thisFillColor2})}}),$.fn.easyPieChart&&$(".easy-pie-chart").each(function(){var $this=$(this),barColor=$this.css("color")||$this.data("pie-color"),trackColor=$this.data("pie-track-color")||"#eeeeee",size=parseInt($this.data("pie-size"))||25;$this.easyPieChart({barColor:barColor,trackColor:trackColor,scaleColor:!1,lineCap:"butt",lineWidth:parseInt(size/8.5),animate:1500,rotate:-90,size:size,onStep:function(value){this.$el.find("span").text(~~value)}})})}function setup_widgets_desktop(){$.fn.jarvisWidgets&&$.enableJarvisWidgets&&$("#widget-grid").jarvisWidgets({grid:"article",widgets:".jarviswidget",localStorage:!0,deleteSettingsKey:"#deletesettingskey-options",settingsKeyLabel:"Reset settings?",deletePositionKey:"#deletepositionkey-options",positionKeyLabel:"Reset position?",sortable:!0,buttonsHidden:!1,toggleButton:!0,toggleClass:"fa fa-minus | fa fa-plus",toggleSpeed:200,onToggle:function(){},deleteButton:!0,deleteClass:"fa fa-times",deleteSpeed:200,onDelete:function(){},editButton:!0,editPlaceholder:".jarviswidget-editbox",editClass:"fa fa-cog | fa fa-save",editSpeed:200,onEdit:function(){},colorButton:!0,fullscreenButton:!0,fullscreenClass:"fa fa-resize-full | fa fa-resize-small",fullscreenDiff:3,onFullscreen:function(){},customButton:!1,customClass:"folder-10 | next-10",customStart:function(){alert("Hello you, this is a custom button...")},customEnd:function(){alert("bye, till next time...")},buttonOrder:"%refresh% %custom% %edit% %toggle% %fullscreen% %delete%",opacity:1,dragHandle:"> header",placeholderClass:"jarviswidget-placeholder",indicator:!0,indicatorTime:600,ajax:!0,timestampPlaceholder:".jarviswidget-timestamp",timestampFormat:"Last update: %m%/%d%/%y% %h%:%i%:%s%",refreshButton:!0,refreshButtonClass:"fa fa-refresh",labelError:"Sorry but there was a error:",labelUpdated:"Last Update:",labelRefresh:"Refresh",labelDelete:"Delete widget:",afterLoad:function(){},rtl:!1,onChange:function(){},onSave:function(){},ajaxnav:$.navAsAjax})}function setup_widgets_mobile(){$.enableMobileWidgets&&$.enableJarvisWidgets&&setup_widgets_desktop()}var gMapsLoaded=!1;window.gMapsCallback=function(){gMapsLoaded=!0,$(window).trigger("gMapsLoaded")},window.loadGoogleMaps=function(){if(gMapsLoaded)return window.gMapsCallback();var script_tag=document.createElement("script");script_tag.setAttribute("type","text/javascript"),script_tag.setAttribute("src","http://maps.google.com/maps/api/js?sensor=false&callback=gMapsCallback"),(document.getElementsByTagName("head")[0]||document.documentElement).appendChild(script_tag)};function loadScript(scriptName,callback){var scriptID="script_"+scriptName.replace(/\//g,"__").replace(/\.js/g,"");if($("#"+scriptID).length==0||IS_DEV){IS_DEV&&$("#"+scriptID).remove();var body=document.getElementsByTagName("body")[0],script=document.createElement("script");script.id=scriptID,script.type="text/javascript",script.src=scriptName+(IS_DEV?"?_="+Math.floor(Math.random()*1e6+1).toString():""),script.onload=callback,body.appendChild(script)}else callback&&callback()}$.navAsAjax&&($("nav").length&&checkURL(),$(document).on("click",'nav a[href!="#"]',function(e){e.preventDefault();var $this=$(e.currentTarget);!$this.parent().hasClass("active")&&!$this.attr("target")&&($.root_.hasClass("mobile-view-activated")?($.root_.removeClass("hidden-menu"),window.setTimeout(function(){window.location.search?window.location.href=window.location.href.replace(window.location.search,"").replace(window.location.hash,"")+"#"+$this.attr("href"):window.location.hash=$this.attr("href")},150)):window.location.search?window.location.href=window.location.href.replace(window.location.search,"").replace(window.location.hash,"")+"#"+$this.attr("href"):window.location.hash=$this.attr("href"))}),$(document).on("click",'nav a[target="_blank"]',function(e){e.preventDefault();var $this=$(e.currentTarget);window.open($this.attr("href"))}),$(document).on("click",'nav a[target="_top"]',function(e){e.preventDefault();var $this=$(e.currentTarget);window.location=$this.attr("href")}),$(document).on("click",'nav a[href="#"]',function(e){e.preventDefault()}),$(window).on("hashchange",function(){checkURL()}));function checkURL(){var url=location.hash.replace(/^#/,"");container=$("#content");if(url&&$("#logon").is(":hidden")){$("nav li.active").removeClass("active"),$('nav li:has(a[href="'+url+'"])').addClass("active");var title=$('nav a[href="'+url+'"]').attr("title");document.title=title||document.title,loadURL(url+location.search,container)}}function loadPage(url,container){$.ajax({type:"GET",url:url,dataType:"html",cache:!IS_DEV,beforeSend:function(){container.html('<h1><i class="fa fa-cog fa-spin"></i> Loading...</h1>'),container[0]==$("#content")[0]&&(drawBreadCrumb(),$("html").animate({scrollTop:0},"fast"))},success:function(data){var e=container.css({opacity:"0.0"}).html(data);INIT_FUNC.hasOwnProperty(url)&&(CURRENT_PAGE_URL=url,INIT_FUNC[url](),trackPageView(url)),e.delay(50).animate({opacity:"1.0"},300)},error:function(xhr,ajaxOptions,thrownError){container.html('<h4 style="margin-top:10px; display:block; text-align:left"><i class="fa fa-warning txt-color-orangeDark"></i> Error 404! Page not found.</h4>')},async:!1})}function loadURL(url,container){checkCountry(url,function(){loadPage(url,container)})}function drawBreadCrumb(){var nav_elems=$("nav li.active > a"),count=nav_elems.length;$.bread_crumb.empty(),$.bread_crumb.append($("<li>Home</li>")),nav_elems.each(function(){$.bread_crumb.append($("<li></li>").html($.trim($(this).clone().children(".badge").remove().end().text()))),--count||(document.title=$.bread_crumb.find("li:last-child").text())})}function pageSetUp(){$.device==="desktop"?($("[rel=tooltip]").tooltip(),$("[rel=popover]").popover(),$("[rel=popover-hover]").popover({trigger:"hover"}),runAllCharts(),setup_widgets_desktop(),nav_page_height(),runAllForms()):($("[rel=popover]").popover(),$("[rel=popover-hover]").popover({trigger:"hover"}),runAllCharts(),setup_widgets_mobile(),nav_page_height(),runAllForms())}$("body").on("click",function(e){$('[rel="popover"]').each(function(){!$(this).is(e.target)&&$(this).has(e.target).length===0&&$(".popover").has(e.target).length===0&&$(this).popover("hide")})});function runDataTables(specificTableID,destroyOption,extraProps){typeof destroyOption=="undefined"&&(destroyOption=!0),typeof extraProps=="undefined"&&(extraProps={});var tableSelector=specificTableID||"table",props=null;props={bDestroy:destroyOption,sPaginationType:"bootstrap_full"},$.extend(props,extraProps),$(tableSelector+".datatable_basic").dataTable(props),props={bDestroy:destroyOption,sPaginationType:"bootstrap",sDom:"R<'dt-top-row'Clf>r<'dt-wrapper't><'dt-row dt-bottom-row'<'row'<'col-sm-6'i><'col-sm-6 text-right'p>>",fnInitComplete:function(oSettings,json){$(".ColVis_Button").addClass("btn btn-default btn-sm").html('Columns <i class="icon-arrow-down"></i>')}},$.extend(props,extraProps),$(tableSelector+".datatable_col_reorder").dataTable(props),props={bDestroy:destroyOption,sDom:"<'dt-top-row'Tlf>r<'dt-wrapper't><'dt-row dt-bottom-row'<'row'<'col-sm-6'i><'col-sm-6 text-right'p>>",oTableTools:{aButtons:["copy",{sExtends:"collection",sButtonText:'Save <span class="caret" />',aButtons:["csv","xls","pdf"]}],sSwfPath:"assets/copy_csv_xls_pdf.swf"},fnInitComplete:function(oSettings,json){$(this).closest("#dt_table_tools_wrapper").find(".DTTT.btn-group").addClass("table_tools_group").children("a.btn").each(function(){$(this).addClass("btn-sm btn-default")})}},$.extend(props,extraProps),$(tableSelector+".datatable_tabletools").dataTable(props),$(tableSelector+" a[rel=tooltip]").tooltip()}function naturalSort(a,b){var re=/(^-?[0-9]+(\.?[0-9]*)[df]?e?[0-9]?$|^0x[0-9a-f]+$|[0-9]+)/gi,sre=/(^[ ]*|[ ]*$)/g,dre=/(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/,hre=/^0x[0-9a-f]+$/i,ore=/^0/,x=a.toString().replace(sre,"")||"",y=b.toString().replace(sre,"")||"",xN=x.replace(re,"\0$1\0").replace(/\0$/,"").replace(/^\0/,"").split("\0"),yN=y.replace(re,"\0$1\0").replace(/\0$/,"").replace(/^\0/,"").split("\0"),xD=parseInt(x.match(hre))||xN.length!=1&&x.match(dre)&&Date.parse(x),yD=parseInt(y.match(hre))||xD&&y.match(dre)&&Date.parse(y)||null;if(yD){if(xD<yD)return-1;if(xD>yD)return 1}for(var cLoc=0,numS=Math.max(xN.length,yN.length);cLoc<numS;cLoc++){var oFxNcL=!(xN[cLoc]||"").match(ore)&&parseFloat(xN[cLoc])||xN[cLoc]||0,oFyNcL=!(yN[cLoc]||"").match(ore)&&parseFloat(yN[cLoc])||yN[cLoc]||0;if(isNaN(oFxNcL)!==isNaN(oFyNcL))return isNaN(oFxNcL)?1:-1;typeof oFxNcL!=typeof oFyNcL&&(oFxNcL+="",oFyNcL+="");if(oFxNcL<oFyNcL)return-1;if(oFxNcL>oFyNcL)return 1}return 0}jQuery.extend(jQuery.fn.dataTableExt.oSort,{"natural-asc":function(a,b){return naturalSort(a,b)},"natural-desc":function(a,b){return naturalSort(a,b)*-1}});
/*----------------js/pages.init.js---------------*/
INIT_FUNC={},PROCESSED_BTCPAY={};function initIndex(){window.LOGON_VIEW_MODEL=new LogonViewModel,window.LICENSE_MODAL=new LicenseModalViewModel,window.LOGON_PASSWORD_MODAL=new LogonPasswordModalViewModel,window.WALLET=new WalletViewModel,window.WALLET_OPTIONS_MODAL=new WalletOptionsModalViewModel,window.MESSAGE_FEED=new MessageFeed,window.CHAT_FEED=new ChatFeedViewModel,window.CHAT_SET_HANDLE_MODAL=new ChatSetHandleModalViewModel,window.PENDING_ACTION_FEED=new PendingActionFeedViewModel,window.UPCOMING_BTCPAY_FEED=new UpcomingBTCPayFeedViewModel,window.WAITING_BTCPAY_FEED=new WaitingBTCPayFeedViewModel,window.BTCPAY_FEED=new BTCPayFeedViewModel,window.NOTIFICATION_FEED=new NotificationFeedViewModel,window.SUPPORT_MODAL=new SupportModalViewModel,window.DONATE_MODAL=new DonationViewModel,window.CREATE_SUPPORT_CASE_VIEW_MODEL=new CreateSupportCaseViewModel,$(document).ready(function(){ko.applyBindings(LOGON_VIEW_MODEL,document.getElementById("logon")),ko.applyBindings(LICENSE_MODAL,document.getElementById("licenseModal")),ko.applyBindings(LOGON_PASSWORD_MODAL,document.getElementById("logonPassphaseModal")),ko.applyBindings(WALLET_OPTIONS_MODAL,document.getElementById("walletOptionsModal")),ko.applyBindings(CHAT_FEED,document.getElementById("chatPane")),ko.applyBindings(CHAT_SET_HANDLE_MODAL,document.getElementById("chatSetHandleModal")),ko.applyBindings(PENDING_ACTION_FEED,document.getElementById("pendingActionFeed")),ko.applyBindings(BTCPAY_FEED,document.getElementById("btcPayFeed")),ko.applyBindings(NOTIFICATION_FEED,document.getElementById("notificationFeed")),ko.applyBindings(SUPPORT_MODAL,document.getElementById("supportModal")),ko.applyBindings(DONATE_MODAL,document.getElementById("donateModal")),ko.applyBindings(CREATE_SUPPORT_CASE_VIEW_MODEL,document.getElementById("createSupportCaseModal")),ko.applyBindings({},document.getElementById("noticeTestnet")),ko.applyBindings({},document.getElementById("noticeDevMode")),$("#fullscreen").click(function(e){return launchFullscreen(document.documentElement),!1}),$("#showOptions").click(function(e){return WALLET_OPTIONS_MODAL.show(),!1}),$("#support").click(function(e){return SUPPORT_MODAL.show("general"),!1}),$("#loginform").submit(function(){return LOGON_VIEW_MODEL.isPassphraseValid()&&LOGON_VIEW_MODEL.openWallet(),!1}),$("#donate").click(function(e){return DONATE_MODAL.show(),!1}),USE_TESTNET&&TESTNET_PASSPHRASE&&($.jqlog.debug("Testnet passphrase specified: "+TESTNET_PASSPHRASE),$("#password").val(TESTNET_PASSPHRASE),$("#password").change(),setTimeout(function(){$("#loginform").submit()},500)),$("#walletUrl").focus(function(){var $this=$(this);$this.select(),$this.mouseup(function(){return $this.unbind("mouseup"),!1})}),$(".showCreateSupportCase").click(function(e){SUPPORT_MODAL.hide(),CREATE_SUPPORT_CASE_VIEW_MODEL.show()})})}initIndex();function initBalances(){ko.applyBindings(WALLET,document.getElementsByClassName("balancesContainer")[0]),pageSetUp(),window.CHANGE_ADDRESS_LABEL_MODAL=new ChangeAddressLabelModalViewModel,window.CREATE_NEW_ADDRESS_MODAL=new CreateNewAddressModalViewModel,window.SEND_MODAL=new SendModalViewModel,window.SWEEP_MODAL=new SweepModalViewModel,window.SIGN_MESSAGE_MODAL=new SignMessageModalViewModel,window.TESTNET_BURN_MODAL=new TestnetBurnModalViewModel,window.DISPLAY_PRIVATE_KEY_MODAL=new DisplayPrivateKeyModalViewModel,window.BROADCAST_MODAL=new BroadcastModalViewModel,window.SIGN_TRANSACTION_MODAL=new SignTransactionModalViewModel,window.ARMORY_BROADCAST_TRANSACTION=new ArmoryBroadcastTransactionModalViewModel,ko.applyBindings({},document.getElementById("gettingStartedNotice")),ko.applyBindings({},document.getElementById("pendingBTCPayNotice")),ko.applyBindings({},document.getElementById("oldWalletDetectedNotice")),ko.applyBindings(CHANGE_ADDRESS_LABEL_MODAL,document.getElementById("changeAddressLabelModal")),ko.applyBindings(CREATE_NEW_ADDRESS_MODAL,document.getElementById("createNewAddressModal")),ko.applyBindings(SEND_MODAL,document.getElementById("sendModal")),ko.applyBindings(SWEEP_MODAL,document.getElementById("sweepModal")),ko.applyBindings(SIGN_MESSAGE_MODAL,document.getElementById("signMessageModal")),ko.applyBindings(TESTNET_BURN_MODAL,document.getElementById("testnetBurnModal")),ko.applyBindings(DISPLAY_PRIVATE_KEY_MODAL,document.getElementById("displayPrivateKeyModal")),ko.applyBindings(BROADCAST_MODAL,document.getElementById("broadcastModal")),ko.applyBindings(SIGN_TRANSACTION_MODAL,document.getElementById("signTransactionModal")),ko.applyBindings(ARMORY_BROADCAST_TRANSACTION,document.getElementById("armoryBroadcastTransactionModal")),isBound("left-panel")||ko.applyBindings({FEATURE_EXCHANGE:disabledFeatures.indexOf("exchange")==-1,FEATURE_BETTING:disabledFeatures.indexOf("betting")==-1,FEATURE_RPS:disabledFeatures.indexOf("rps")==-1,FEATURE_HISTORY:disabledFeatures.indexOf("history")==-1,FEATURE_PORTFOLIO:disabledFeatures.indexOf("portfolio")==-1,FEATURE_LEADERBOARD:disabledFeatures.indexOf("leaderboard")==-1,FEATURE_STATS:disabledFeatures.indexOf("stats")==-1},document.getElementById("left-panel")),window.CREATE_ASSET_MODAL=new CreateAssetModalViewModel,window.ISSUE_ADDITIONAL_ASSET_MODAL=new IssueAdditionalAssetModalViewModel,window.TRANSFER_ASSET_MODAL=new TransferAssetModalViewModel,window.CHANGE_ASSET_DESCRIPTION_MODAL=new ChangeAssetDescriptionModalViewModel,window.PAY_DIVIDEND_MODAL=new PayDividendModalViewModel,window.CALL_ASSET_MODAL=new CallAssetModalViewModel,window.SHOW_ASSET_INFO_MODAL=new ShowAssetInfoModalViewModel,ko.applyBindings(CREATE_ASSET_MODAL,document.getElementById("createAssetModal")),ko.applyBindings(ISSUE_ADDITIONAL_ASSET_MODAL,document.getElementById("issueAdditionalAssetModal")),ko.applyBindings(TRANSFER_ASSET_MODAL,document.getElementById("transferAssetModal")),ko.applyBindings(CHANGE_ASSET_DESCRIPTION_MODAL,document.getElementById("changeAssetDescriptionModal")),ko.applyBindings(PAY_DIVIDEND_MODAL,document.getElementById("payDividendModal")),ko.applyBindings(CALL_ASSET_MODAL,document.getElementById("callAssetModal")),ko.applyBindings(SHOW_ASSET_INFO_MODAL,document.getElementById("showAssetInfoModal")),$(document).ready(function(){$("#createAddress, #createWatchOnlyAddress, #createArmoryOfflineAddress").click(function(e){if(WALLET.addresses().length>=MAX_ADDRESSES)return bootbox.alert("You already have the max number of addresses for a single wallet (<b>"+MAX_ADDRESSES+"</b>). Please create a new wallet (i.e. different passphrase) for more."),!1;var addressType="normal";$(this).attr("id")=="createWatchOnlyAddress"?addressType="watch":$(this).attr("id")=="createArmoryOfflineAddress"&&(addressType="armory"),CREATE_NEW_ADDRESS_MODAL.show(addressType),e.preventDefault()}),$("#sweepFunds, #sweepFunds2").click(function(){SWEEP_MODAL.show(!0,!1)}),$("#sweepOldWallet").click(function(){SWEEP_MODAL.show(!0,!0)}),$("#balanceHelp").click(function(){SUPPORT_MODAL.show("balancesPage")}),WALLET.BITCOIN_WALLET.useOldHierarchicalKey?$("#newWalletSweep").hide():$("#sweepFunds").hide(),$("#support_havingIssuesLink").click(function(e){return SUPPORT_MODAL.show("general"),!1});if(window._BALANCES_HAS_LOADED_ALREADY===undefined){window._BALANCES_HAS_LOADED_ALREADY=!0;function _detectOldWallet(){WALLET.BITCOIN_WALLET.getOldAddressesInfos(function(data){var needSweep=!1;for(var a in data){needSweep=!0;break}needSweep&&bootbox.confirm("<b style='color:red'>We detected that you have an 'old' wallet with funds present. Press 'OK' to sweep these funds into your new wallet, or Cancel to skip for now.</b>",function(value){value&&SWEEP_MODAL.show(!0,!0)})})}}else WALLET.refreshBTCBalances(!1);$(".assetBtn").click(function(event){var menu=$(this).parent().find("ul");menu.css("display")=="block"?menu.hide():menu.show(),menu.mouseleave(function(){menu.hide(),menu.unbind("mouseleave")})})})}INIT_FUNC["pages/balances.html"]=initBalances;function initFeedBTCPays(){ko.applyBindings(WAITING_BTCPAY_FEED,document.getElementById("waitingBTCPayFeedContent")),ko.applyBindings(UPCOMING_BTCPAY_FEED,document.getElementById("upcomingBTCPayFeedContent"))}INIT_FUNC["pages/feed_btcpays.html"]=initFeedBTCPays;function initFeedNotifications(){ko.applyBindings(NOTIFICATION_FEED,document.getElementById("notificationFeedContent"))}INIT_FUNC["pages/feed_notifications.html"]=initFeedNotifications;function initFeedPendingActions(){ko.applyBindings(PENDING_ACTION_FEED,document.getElementById("pendingActionFeedContent"))}INIT_FUNC["pages/feed_pending_actions.html"]=initFeedPendingActions;function initHistory(){pageSetUp(),window.BALANCE_HISTORY=new BalanceHistoryViewModel,window.TXN_HISTORY=new TransactionHistoryViewModel,ko.applyBindings(TXN_HISTORY,document.getElementById("wid-id-txnHistory")),ko.applyBindings(BALANCE_HISTORY,document.getElementById("wid-id-balHistory")),BALANCE_HISTORY.init(),TXN_HISTORY.init(),$(window).bind("resize",TXN_HISTORY.dataTableResponsive),$(window).on("hashchange",function(){$(window).off("resize",TXN_HISTORY.dataTableResponsive)})}INIT_FUNC["pages/history.html"]=initHistory;function initStats(){pageSetUp(),window.STATS_HISTORY=new StatsHistoryViewModel,window.STATS_TXN_HISTORY=new StatsTransactionHistoryViewModel,ko.applyBindings(STATS_TXN_HISTORY,document.getElementById("wid-id-statsTxnHistory")),ko.applyBindings(STATS_HISTORY,document.getElementById("wid-id-statsHistory")),ko.applyBindings(STATS_HISTORY,document.getElementById("wid-id-walletHistory")),STATS_HISTORY.init(),STATS_TXN_HISTORY.init()}INIT_FUNC["pages/stats.html"]=initStats;function initLeaderboard(){pageSetUp(),window.ASSET_LEADERBOARD=new AssetLeaderboardViewModel,ko.applyBindings(ASSET_LEADERBOARD,document.getElementById("leaderboardMarketBar")),ko.applyBindings(ASSET_LEADERBOARD,document.getElementsByClassName("leaderboardGrid")[0]),ASSET_LEADERBOARD.init(),$(window).bind("resize",ASSET_LEADERBOARD.dataTableResponsive),$(window).on("hashchange",function(){$(window).off("resize",ASSET_LEADERBOARD.dataTableResponsive)})}INIT_FUNC["pages/leaderboard.html"]=initLeaderboard;function initExchange(){localStorage.removeItem("Plugin_position_pages/exchange.html_widget-grid"),pageSetUp(),window.EXCHANGE=new ExchangeViewModel,ko.applyBindings(EXCHANGE,document.getElementsByClassName("ordersGrid")[0]),EXCHANGE.init(!0),$("#exchangeHelp").click(function(){SUPPORT_MODAL.show("exchangePage")}),$("#changeMarket").click(function(){loadURL("pages/exchange.html",$("#content"))})}INIT_FUNC["pages/exchange.html"]=initExchange;function initPortfolio(){pageSetUp(),window.ASSET_PORTFOLIO=new AssetPortfolioViewModel,ko.applyBindings(ASSET_PORTFOLIO,document.getElementById("portfolioMarketBar")),ko.applyBindings(ASSET_PORTFOLIO,document.getElementsByClassName("portfolioGrid")[0]),$(window).bind("resize",ASSET_PORTFOLIO.dataTableResponsive),$(window).on("hashchange",function(){$(window).off("resize",ASSET_PORTFOLIO.dataTableResponsive)})}INIT_FUNC["pages/portfolio.html"]=initPortfolio;function initBetting(){pageSetUp(),window.FEED_BROWSER=new FeedBrowserViewModel,ko.applyBindings(FEED_BROWSER,document.getElementById("betting")),FEED_BROWSER.init()}INIT_FUNC["pages/betting.html"]=initBetting;function initOpenBets(){pageSetUp(),window.OPEN_BETS=new OpenBetsViewModel,ko.applyBindings(OPEN_BETS,document.getElementById("openbets")),OPEN_BETS.init(),$(window).bind("resize",OPEN_BETS.dataTableResponsive),$(window).on("hashchange",function(){$(window).off("resize",OPEN_BETS.dataTableResponsive)})}INIT_FUNC["pages/openbets.html"]=initOpenBets;function initMatchedBets(){pageSetUp(),window.MATCHED_BETS=new MatchedBetsViewModel,ko.applyBindings(MATCHED_BETS,document.getElementById("matchedbets")),MATCHED_BETS.init(),$(window).bind("resize",MATCHED_BETS.dataTableResponsive),$(window).on("hashchange",function(){$(window).off("resize",MATCHED_BETS.dataTableResponsive)})}INIT_FUNC["pages/matchedbets.html"]=initMatchedBets;function initOpenOrders(){pageSetUp(),window.OPEN_ORDERS=new OpenOrdersViewModel,ko.applyBindings(OPEN_ORDERS,document.getElementById("openorders")),OPEN_ORDERS.init()}INIT_FUNC["pages/openorders.html"]=initOpenOrders;function initOrderMatches(){pageSetUp(),window.ORDER_MATCHES=new OrderMatchesViewModel,ko.applyBindings(ORDER_MATCHES,document.getElementById("ordermatches")),ORDER_MATCHES.init()}INIT_FUNC["pages/ordermatches.html"]=initOrderMatches;function initRPS(){pageSetUp(),window.RPS=new RpsViewModel,ko.applyBindings(RPS,document.getElementById("rps")),RPS.init()}INIT_FUNC["pages/rps.html"]=initRPS;